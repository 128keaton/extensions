!function(){function s(s){return function(s){if(Array.isArray(s))return n(s)}(s)||function(s){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(s))return Array.from(s)}(s)||function(s,a){if(!s)return;if("string"==typeof s)return n(s,a);var t=Object.prototype.toString.call(s).slice(8,-1);"Object"===t&&s.constructor&&(t=s.constructor.name);if("Map"===t||"Set"===t)return Array.from(s);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return n(s,a)}(s)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(s,n){(null==n||n>s.length)&&(n=s.length);for(var a=0,t=new Array(n);a<n;a++)t[a]=s[a];return t}function a(s,n){if(!(s instanceof n))throw new TypeError("Cannot call a class as a function")}function t(s,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(s,t.key,t)}}function e(s,n,a){return n&&t(s.prototype,n),a&&t(s,a),s}(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"+97s":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { PageEvent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/paginator&#x27;</span>;\n<span class="hljs-keyword">import</span> { HttpClient } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common/http&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent <span class="hljs-keyword">implements</span> OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      field: <span class="hljs-string">&#x27;name&#x27;</span>,\n      formatter: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;a href=&quot;<span class="hljs-subst">${data.html_url}</span>&quot; target=&quot;_blank&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/a&gt;`</span>,\n    },\n    { header: <span class="hljs-string">&#x27;Owner&#x27;</span>, field: <span class="hljs-string">&#x27;owner.login&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Owner Avatar&#x27;</span>, field: <span class="hljs-string">&#x27;owner.avatar_url&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;image&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Description&#x27;</span>, field: <span class="hljs-string">&#x27;description&#x27;</span>, width: <span class="hljs-string">&#x27;300px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Stars&#x27;</span>, field: <span class="hljs-string">&#x27;stargazers_count&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Forks&#x27;</span>, field: <span class="hljs-string">&#x27;forks_count&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Score&#x27;</span>, field: <span class="hljs-string">&#x27;score&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Issues&#x27;</span>, field: <span class="hljs-string">&#x27;open_issues&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Language&#x27;</span>, field: <span class="hljs-string">&#x27;language&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;License&#x27;</span>, field: <span class="hljs-string">&#x27;license.name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Home Page&#x27;</span>, field: <span class="hljs-string">&#x27;homepage&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;link&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Is forked&#x27;</span>, field: <span class="hljs-string">&#x27;fork&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Archived&#x27;</span>,\n      field: <span class="hljs-string">&#x27;archived&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;tag&#x27;</span>,\n      tag: {\n        <span class="hljs-literal">true</span>: { text: <span class="hljs-string">&#x27;Yes&#x27;</span>, color: <span class="hljs-string">&#x27;red-100&#x27;</span> },\n        <span class="hljs-literal">false</span>: { text: <span class="hljs-string">&#x27;No&#x27;</span>, color: <span class="hljs-string">&#x27;green-100&#x27;</span> },\n      },\n    },\n    { header: <span class="hljs-string">&#x27;Created Date&#x27;</span>, field: <span class="hljs-string">&#x27;created_at&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Updated Date&#x27;</span>, field: <span class="hljs-string">&#x27;updated_at&#x27;</span> },\n  ];\n  list = [];\n  total = <span class="hljs-number">0</span>;\n  isLoading = <span class="hljs-literal">true</span>;\n\n  query = {\n    q: <span class="hljs-string">&#x27;user:nzbin&#x27;</span>,\n    page: <span class="hljs-number">0</span>,\n    per_page: <span class="hljs-number">5</span>,\n  };\n\n  get params() {\n    <span class="hljs-keyword">const</span> p = <span class="hljs-built_in">Object</span>.assign({}, <span class="hljs-built_in">this</span>.query);\n    p.page += <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">return</span> p;\n  }\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> http: HttpClient</span>) {}\n\n  ngOnInit() {\n    <span class="hljs-built_in">this</span>.getData();\n  }\n\n  getData() {\n    <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">true</span>;\n    <span class="hljs-built_in">this</span>.http\n      .get(<span class="hljs-string">&#x27;https://api.github.com/search/repositories&#x27;</span>, { params: <span class="hljs-built_in">this</span>.params <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span> })\n      .subscribe(\n        <span class="hljs-function">(<span class="hljs-params">res: <span class="hljs-built_in">any</span></span>) =&gt;</span> {\n          <span class="hljs-built_in">this</span>.list = res.items;\n          <span class="hljs-built_in">this</span>.total = res.total_count;\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        }\n      );\n  }\n\n  getNextPage(e: PageEvent) {\n    <span class="hljs-built_in">this</span>.query.page = e.pageIndex;\n    <span class="hljs-built_in">this</span>.query.per_page = e.pageSize;\n    <span class="hljs-built_in">this</span>.getData();\n  }\n\n  refresh() {\n    <span class="hljs-built_in">this</span>.getData();\n  }\n}\n'},"/0tF":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"/PsR":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [cellTemplate]="{mobile: mobileTpl, city: cityTpl}">\n</mtx-grid>\n\n<ng-template #mobileTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="accent">{{row.mobile}}</button>\n</ng-template>\n\n<ng-template #cityTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="primary">{{row.city}}</button>\n</ng-template>\n'},"0Bei":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">headerTemplate</span>]=<span class="hljs-string">&quot;headerTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">headerTpl</span> <span class="hljs-attr">let-col</span>&gt;</span>\n  {{col.header}} <span class="hljs-tag">&lt;<span class="hljs-name">mat-icon</span> [<span class="hljs-attr">matTooltip</span>]=<span class="hljs-string">&quot;col.description&quot;</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">mat-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},"0omm":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', showExpand: true },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},"1kxM":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n\n<ng-template #statusTpl let-row let-index="index" let-col="colDef">\n  <mat-slide-toggle [checked]="row.status">Slide me!</mat-slide-toggle>\n</ng-template>\n'},"2TJC":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridRowSelectionFormatter } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = <span class="hljs-literal">true</span>;\n  hideRowSelectionCheckbox = <span class="hljs-literal">false</span>;\n  rowSelectable = <span class="hljs-literal">true</span>;\n  rowSelected = EXAMPLE_DATA.slice(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    hideCheckbox: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">&#x27;John&#x27;</span>,\n  };\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},"2gj7":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},"2wlB":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowClassFormatter } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  rowClassFormatter: MtxGridRowClassFormatter = {\n    success: (data, index) => data.name === 'Boron',\n    danger: (data, index) => index === 1,\n  };\n\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile', class: 'warning' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},"2ycp":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"4BKG":function(s,n,a){"use strict";a.r(n),n.default='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  <mat-radio-button *ngFor="let lang of langs" [value]="lang.value">\n    {{lang.label}}\n  </mat-radio-button>\n</mat-radio-group>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [columnHideable]="true"\n          [columnMovable]="true">\n</mtx-grid>\n'},"4U3f":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"4nc+":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowClassFormatter]="rowClassFormatter">\n</mtx-grid>\n'},"542W":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Position&#x27;</span>, field: <span class="hljs-string">&#x27;position&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span>, pinned: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;tags&#x27;</span>, field: <span class="hljs-string">&#x27;tag.0.value&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span>, pinned: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Symbol&#x27;</span>, field: <span class="hljs-string">&#x27;symbol&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Tele&#x27;</span>, field: <span class="hljs-string">&#x27;tele&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Address&#x27;</span>, field: <span class="hljs-string">&#x27;address&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Date&#x27;</span>, field: <span class="hljs-string">&#x27;date&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Website&#x27;</span>, field: <span class="hljs-string">&#x27;website&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Company&#x27;</span>, field: <span class="hljs-string">&#x27;company&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Email&#x27;</span>, field: <span class="hljs-string">&#x27;email&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span>, pinned: <span class="hljs-string">&#x27;right&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Status&#x27;</span>, field: <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"5CJL":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      minWidth: 200,\n    },\n    {\n      header: 'Weight',\n      field: 'weight',\n      minWidth: 200,\n    },\n    {\n      header: 'Gender',\n      field: 'gender',\n      minWidth: 200,\n    },\n    {\n      header: 'Mobile',\n      field: 'mobile',\n      minWidth: 200,\n    },\n    {\n      header: 'City',\n      field: 'city',\n      minWidth: 200,\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},"683s":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, summary: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, summary: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Cost&#x27;</span>, field: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"6R26":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowHover&quot;</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowStriped&quot;</span>&gt;</span>Striped<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">rowHover</span>]=<span class="hljs-string">&quot;rowHover&quot;</span>\n          [<span class="hljs-attr">rowStriped</span>]=<span class="hljs-string">&quot;rowStriped&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"6sDK":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;refresh()&quot;</span>&gt;</span>Refresh<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">length</span>]=<span class="hljs-string">&quot;total&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">pageIndex</span>]=<span class="hljs-string">&quot;query.page&quot;</span>\n          [<span class="hljs-attr">pageSize</span>]=<span class="hljs-string">&quot;query.per_page&quot;</span>\n          [<span class="hljs-attr">pageSizeOptions</span>]=<span class="hljs-string">&quot;[5,10,20]&quot;</span>\n          (<span class="hljs-attr">page</span>)=<span class="hljs-string">&quot;getNextPage($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"6v9L":function(s,n){s.exports='{\n  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Name&quot;</span>,\n  <span class="hljs-attr">&quot;weight&quot;</span>: <span class="hljs-string">&quot;Weight&quot;</span>,\n  <span class="hljs-attr">&quot;gender&quot;</span>: <span class="hljs-string">&quot;Gender&quot;</span>,\n  <span class="hljs-attr">&quot;mobile&quot;</span>: <span class="hljs-string">&quot;Mobile&quot;</span>,\n  <span class="hljs-attr">&quot;city&quot;</span>: <span class="hljs-string">&quot;City&quot;</span>,\n  <span class="hljs-attr">&quot;operation&quot;</span>: <span class="hljs-string">&quot;Operation&quot;</span>,\n  <span class="hljs-attr">&quot;delete&quot;</span>: <span class="hljs-string">&quot;Delete&quot;</span>,\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span>: <span class="hljs-string">&quot;Confirm delete?&quot;</span>,\n  <span class="hljs-attr">&quot;close&quot;</span>: <span class="hljs-string">&quot;CLOSE&quot;</span>,\n  <span class="hljs-attr">&quot;ok&quot;</span>: <span class="hljs-string">&quot;OK&quot;</span>\n}\n'},"6xwS":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showSummary]="true"\n          [summaryTemplate]="{\'cost\': footerTpl}">\n</mtx-grid>\n\n<ng-template #footerTpl let-data>\n  <div>{{getTotalCost(data) | currency}}</div>\n</ng-template>\n'},"75Md":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">trackBy</span>]=<span class="hljs-string">&quot;trackByName&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"78Lc":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"85Ye":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [pageOnFront]="false"\n          [showPaginator]="false">\n</mtx-grid>\n'},"8CWH":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridRowClassFormatter } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  rowClassFormatter: MtxGridRowClassFormatter = {\n    success: <span class="hljs-function">(<span class="hljs-params">data, index</span>) =&gt;</span> data.name === <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    danger: <span class="hljs-function">(<span class="hljs-params">data, index</span>) =&gt;</span> index === <span class="hljs-number">1</span>,\n  };\n\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-keyword">class</span>: <span class="hljs-string">&#x27;warning&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"8ySv":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = [];\n}\n"},"9G+V":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"9IZ6":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let lang of langs&quot;</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>\n    {{lang.label}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"9iwy":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">showPaginator</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},AbLn:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span>,\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},B50w:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      field: <span class="hljs-string">&#x27;name&#x27;</span>,\n      minWidth: <span class="hljs-number">200</span>,\n    },\n    {\n      header: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      field: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      minWidth: <span class="hljs-number">200</span>,\n    },\n    {\n      header: <span class="hljs-string">&#x27;Gender&#x27;</span>,\n      field: <span class="hljs-string">&#x27;gender&#x27;</span>,\n      minWidth: <span class="hljs-number">200</span>,\n    },\n    {\n      header: <span class="hljs-string">&#x27;Mobile&#x27;</span>,\n      field: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n      minWidth: <span class="hljs-number">200</span>,\n    },\n    {\n      header: <span class="hljs-string">&#x27;City&#x27;</span>,\n      field: <span class="hljs-string">&#x27;city&#x27;</span>,\n      minWidth: <span class="hljs-number">200</span>,\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},Bf3p:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [showColumnMenuButton]="false"\n          [toolbarTemplate]="toolbarTpl">\n</mtx-grid>\n\n<ng-template #toolbarTpl>\n  <input placeholder="Search">\n</ng-template>\n'},BjN7:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Operation',\n      field: 'operation',\n      width: '160px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'icon',\n          text: 'copy',\n          icon: 'file_copy',\n          tooltip: 'copy',\n          disabled: true,\n          click: () => {\n            alert('copy');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'edit',\n          icon: 'edit',\n          tooltip: 'Edit',\n          click: () => {\n            alert('edit');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'delete',\n          icon: 'delete',\n          tooltip: 'Delete',\n          color: 'warn',\n          pop: true,\n          popTitle: 'Confirm delete?',\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},CANc:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},CDtL:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, showExpand: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},CIJY:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="columnHideable">Column Hiding</mat-checkbox>\n  <mat-checkbox [(ngModel)]="columnMovable">Column Moving</mat-checkbox>\n\n  <label>columnHideableChecked:</label>\n  <mat-radio-group [(ngModel)]="columnHideableChecked">\n    <mat-radio-button value="show">show</mat-radio-button>\n    <mat-radio-button value="hide">hide</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list" #grid\n          [columns]="columns"\n          [showToolbar]="true"\n          [toolbarTitle]="\'Data Grid\'"\n          [columnHideable]="columnHideable"\n          [columnHideableChecked]="columnHideableChecked"\n          [columnMovable]="columnMovable"\n          (columnChange)="log($event)"\n          [showColumnMenuHeader]="true"\n          [columnMenuHeaderText]="\'Title\'"\n          [showColumnMenuFooter]="true"\n          [columnMenuFooterTemplate]="menuFooter">\n</mtx-grid>\n\n<ng-template #menuFooter>\n  <button>Save</button>\n  <button (click)="closeMenu()">Close</button>\n</ng-template>\n'},DHmE:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},DeK4:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},EcNq:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showSummary</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">summaryTemplate</span>]=<span class="hljs-string">&quot;{&#x27;cost&#x27;: footerTpl}&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">footerTpl</span> <span class="hljs-attr">let-data</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{{getTotalCost(data) | currency}}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},FHzR:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span>, sortable: <span class="hljs-literal">false</span> },\n    {\n      header: <span class="hljs-string">&#x27;City&#x27;</span>,\n      field: <span class="hljs-string">&#x27;city&#x27;</span>,\n      sortable: <span class="hljs-literal">true</span>,\n      sortProp: {\n        arrowPosition: <span class="hljs-string">&#x27;before&#x27;</span>,\n        disableClear: <span class="hljs-literal">true</span>,\n        start: <span class="hljs-string">&#x27;desc&#x27;</span>,\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},"GS/Z":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Operation&#x27;</span>,\n      field: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      width: <span class="hljs-string">&#x27;160px&#x27;</span>,\n      pinned: <span class="hljs-string">&#x27;right&#x27;</span>,\n      right: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      buttons: [\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          text: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          icon: <span class="hljs-string">&#x27;file_copy&#x27;</span>,\n          tooltip: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          disabled: <span class="hljs-literal">true</span>,\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;copy&#x27;</span>);\n          },\n        },\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          text: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          icon: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          tooltip: <span class="hljs-string">&#x27;Edit&#x27;</span>,\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;edit&#x27;</span>);\n          },\n        },\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          text: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          icon: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          tooltip: <span class="hljs-string">&#x27;Delete&#x27;</span>,\n          color: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          pop: <span class="hljs-literal">true</span>,\n          popTitle: <span class="hljs-string">&#x27;Confirm delete?&#x27;</span>,\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;delete&#x27;</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},GTJp:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},GeFj:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { TranslateService } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;name&#x27;</span>),\n      field: <span class="hljs-string">&#x27;name&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;weight&#x27;</span>),\n      field: <span class="hljs-string">&#x27;weight&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;gender&#x27;</span>),\n      field: <span class="hljs-string">&#x27;gender&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;mobile&#x27;</span>),\n      field: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;city&#x27;</span>),\n      field: <span class="hljs-string">&#x27;city&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;operation&#x27;</span>),\n      field: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      width: <span class="hljs-string">&#x27;40px&#x27;</span>,\n      pinned: <span class="hljs-string">&#x27;right&#x27;</span>,\n      right: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      buttons: [\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;basic&#x27;</span>,\n          text: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          icon: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          tooltip: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          color: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          pop: <span class="hljs-literal">true</span>,\n          popTitle: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;confirm_delete&#x27;</span>),\n          popCloseText: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;close&#x27;</span>),\n          popOkText: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;ok&#x27;</span>),\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;delete&#x27;</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  langs = [\n    { label: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, value: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { label: <span class="hljs-string">&#x27;English&#x27;</span>, value: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> translate: TranslateService</span>) {\n    translate.addLangs(<span class="hljs-built_in">this</span>.langs.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.value));\n    translate.setDefaultLang(<span class="hljs-built_in">this</span>.defaultlang);\n  }\n}\n'},GySo:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, summary: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, summary: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Cost&#x27;</span>, field: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-keyword">return</span> data.reduce(<span class="hljs-function">(<span class="hljs-params">acc: <span class="hljs-built_in">any</span>, value: <span class="hljs-built_in">any</span></span>) =&gt;</span> acc + value, <span class="hljs-number">0</span>);\n  }\n}\n'},HMmI:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowHover">Hover</mat-checkbox>\n  <mat-checkbox [(ngModel)]="rowStriped">Striped</mat-checkbox>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowHover]="rowHover"\n          [rowStriped]="rowStriped"\n          [rowSelectable]="true">\n</mtx-grid>\n'},HRzU:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},JmX3:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},KNfm:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', description: 'Info about the name' },\n    { header: 'Weight', field: 'weight', description: 'Info about the weight' },\n    { header: 'Gender', field: 'gender', description: 'Info about the gender' },\n    { header: 'Mobile', field: 'mobile', description: 'Info about the mobile' },\n    { header: 'City', field: 'city', description: 'Info about the city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},L6mX:function(s,n,a){"use strict";a.r(n),n.default='{\n  "name": "Name",\n  "weight": "Weight",\n  "gender": "Gender",\n  "mobile": "Mobile",\n  "city": "City",\n  "operation": "Operation",\n  "delete": "Delete",\n  "confirm_delete": "Confirm delete?",\n  "close": "CLOSE",\n  "ok": "OK"\n}\n'},MeCg:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},MqCQ:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},Mwp9:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">showColumnMenuButton</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">toolbarTemplate</span>]=<span class="hljs-string">&quot;toolbarTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">toolbarTpl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Search&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},NU6w:function(s,n,a){"use strict";a.r(n),n.default='<mat-checkbox [(ngModel)]="isLoading">Loading</mat-checkbox>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [loading]="isLoading">\n</mtx-grid>\n'},NfhK:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">4px</span>;\n}\n\n<span class="hljs-selector-tag">label</span> {\n  <span class="hljs-attribute">vertical-align</span>: middle;\n}\n'},NqFO:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},Nu67:function(s,n,a){"use strict";a.r(n),n.default=":host ::ng-deep .label {\n  padding: 5px 10px;\n  border-radius: 999px;\n  background-color: #ffb74d;\n}\n"},"O/y1":function(n,t,l){"use strict";l.r(t),l.d(t,"TranslateHttpLoaderFactory",(function(){return rs})),l.d(t,"DataGridOverviewComponent",(function(){return ds})),l.d(t,"DataGridApiComponent",(function(){return ms})),l.d(t,"DataGridModule",(function(){return us}));var p,o=l("sEIs"),r=l("M0ag"),i=l("i8O3"),c=l("vobO"),h=l("s2Ay"),d=[{position:1,name:"Boron",tag:[{color:"red",value:[1,2]}],weight:10.811,symbol:"B",gender:"male",mobile:"13198765432",tele:"567891234",city:"Berlin",address:"Bernauer Str.111,13355",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Boron@gmail.com",status:!1,cost:4},{position:2,name:"Helium",tag:[{color:"blue",value:[3,4]}],weight:8.0026,symbol:"He",gender:"female",mobile:"13034676675",tele:"80675432",city:"Shanghai",address:"88 Songshan Road",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Helium@gmail.com",status:!0,cost:5},{position:3,name:"Nitrogen",tag:[{color:"yellow",value:[5,6]}],weight:14.0067,symbol:"N",gender:"male",mobile:"15811112222",tele:"345678912",city:"Sydney",address:"Circular Quay, Sydney NSW 2000",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Nitrogen@gmail.com",status:!0,cost:2}],m=l("EM62"),u=l("CGrA"),g={title:"Basic",component:(p=function(){function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight",type:"number",typeParameter:{digitsInfo:"1.2-2"}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Date",field:"date",type:"date",typeParameter:{format:"yyyy-MM-dd"}}],this.list=d}return e(s,[{key:"trackByName",value:function(s,n){return n.name}}]),s}(),p.\u0275fac=function(s){return new(s||p)},p.\u0275cmp=m.Hb({type:p,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","trackBy"]],template:function(s,n){1&s&&m.Ob(0,"mtx-grid",0),2&s&&m.nc("data",n.list)("columns",n.columns)("trackBy",n.trackByName)},directives:[u.a],styles:[""]}),p),files:[{file:"app.component.html",content:l("75Md"),filecontent:l("P9nZ")},{file:"app.component.ts",content:l("aQaT"),filecontent:l("mspS")},{file:"app.component.scss",content:l("qlsX"),filecontent:l("vwie")},{file:"data.ts",content:l("cXSL"),filecontent:l("lHNz")}]},x=l("+Tre"),j=l("nIj0"),f={title:"Loading status",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d,this.isLoading=!0};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","loading"]],template:function(s,n){1&s&&(m.Tb(0,"mat-checkbox",0),m.bc("ngModelChange",(function(s){return n.isLoading=s})),m.Mc(1,"Loading"),m.Sb(),m.Ob(2,"mtx-grid",1)),2&s&&(m.nc("ngModel",n.isLoading),m.Bb(2),m.nc("data",n.list)("columns",n.columns)("loading",n.isLoading))},directives:[x.a,j.o,j.r,u.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:l("zstj"),filecontent:l("NU6w")},{file:"app.component.ts",content:l("kIeg"),filecontent:l("iHCj")},{file:"app.component.scss",content:l("pIgx"),filecontent:l("bp5I")}]},b={title:"Hide pagination",description:"\n  <p>If you hide the pagination, you should set <code>pageOnFront</code> false to show all the data.\n  </p>\n  ",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:4,consts:[[3,"data","columns","pageOnFront","showPaginator"]],template:function(s,n){1&s&&m.Ob(0,"mtx-grid",0),2&s&&m.nc("data",n.list)("columns",n.columns)("pageOnFront",!1)("showPaginator",!1)},directives:[u.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:l("9iwy"),filecontent:l("85Ye")},{file:"app.component.ts",content:l("YWcN"),filecontent:l("PYyB")},{file:"app.component.scss",content:l("2ycp"),filecontent:l("WtW4")}]},y={title:"Sortable",component:function(){var s=function(){function s(){a(this,s),this.columns=[{header:"Name",field:"name",sortable:!0},{header:"Weight",field:"weight",sortable:!0},{header:"Gender",field:"gender",sortable:!0},{header:"Mobile",field:"mobile",sortable:!1},{header:"City",field:"city",sortable:!0,sortProp:{arrowPosition:"before",disableClear:!0,start:"desc"}}],this.list=d}return e(s,[{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[["sortOnFront","true","sortActive","name","sortDirection","asc","sortDisableClear","true","sortDisabled","false","sortStart","asc",3,"data","columns","sortChange"]],template:function(s,n){1&s&&(m.Tb(0,"mtx-grid",0),m.bc("sortChange",(function(s){return n.log(s)})),m.Sb()),2&s&&m.nc("data",n.list)("columns",n.columns)},directives:[u.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:l("ek0L"),filecontent:l("qUcz")},{file:"app.component.ts",content:l("FHzR"),filecontent:l("hifq")},{file:"app.component.scss",content:l("NqFO"),filecontent:l("b74P")}]},w=l("F1o0"),C={title:"Row selectable",description:"\n  <p>If you choose multiple option, you can press <kbd>ctrl</kbd>/<kbd>command</kbd> +\n  click or select checkboxs to choose multiple row.</p>\n  ",component:function(){var s=function(){function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d,this.multiSelectable=!0,this.hideRowSelectionCheckbox=!1,this.rowSelectable=!0,this.rowSelected=d.slice(2,3),this.rowSelectionFormatter={disabled:function(s){return"Boron"===s.name},hideCheckbox:function(s){return"John"===s.name}}}return e(s,[{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:11,vars:12,consts:[[3,"ngModel","ngModelChange"],[3,"value"],[3,"data","columns","multiSelectable","hideRowSelectionCheckbox","rowSelectable","rowSelected","rowSelectionFormatter","rowSelectionChange","cellSelectionChange"]],template:function(s,n){1&s&&(m.Tb(0,"div"),m.Tb(1,"mat-checkbox",0),m.bc("ngModelChange",(function(s){return n.rowSelectable=s})),m.Mc(2,"Row selectable"),m.Sb(),m.Tb(3,"mat-checkbox",0),m.bc("ngModelChange",(function(s){return n.hideRowSelectionCheckbox=s})),m.Mc(4,"Hide checkbox"),m.Sb(),m.Tb(5,"mat-radio-group",0),m.bc("ngModelChange",(function(s){return n.multiSelectable=s})),m.Tb(6,"mat-radio-button",1),m.Mc(7,"Single"),m.Sb(),m.Tb(8,"mat-radio-button",1),m.Mc(9,"Multiple"),m.Sb(),m.Sb(),m.Sb(),m.Tb(10,"mtx-grid",2),m.bc("rowSelectionChange",(function(s){return n.log(s)}))("cellSelectionChange",(function(s){return n.log(s)})),m.Sb()),2&s&&(m.Bb(1),m.nc("ngModel",n.rowSelectable),m.Bb(2),m.nc("ngModel",n.hideRowSelectionCheckbox),m.Bb(2),m.nc("ngModel",n.multiSelectable),m.Bb(1),m.nc("value",!1),m.Bb(2),m.nc("value",!0),m.Bb(2),m.nc("data",n.list)("columns",n.columns)("multiSelectable",n.multiSelectable)("hideRowSelectionCheckbox",n.hideRowSelectionCheckbox)("rowSelectable",n.rowSelectable)("rowSelected",n.rowSelected)("rowSelectionFormatter",n.rowSelectionFormatter))},directives:[x.a,j.o,j.r,w.b,w.a,u.a],styles:[".mat-checkbox[_ngcontent-%COMP%], .mat-radio-button[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:l("PYPw"),filecontent:l("jDd0")},{file:"app.component.ts",content:l("2TJC"),filecontent:l("zkR/")},{file:"app.component.scss",content:l("AbLn"),filecontent:l("RooG")}]};function M(s,n){1&s&&m.Mc(0),2&s&&m.Oc(" ",n.$implicit.name,"\n")}var k={title:"Expandable row",component:function(){var s=function(){function s(){a(this,s),this.columns=[{header:"Name",field:"name",showExpand:!0},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d}return e(s,[{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"data","columns","expandable","expansionTemplate","expansionChange"],["expansionTpl",""]],template:function(s,n){if(1&s&&(m.Tb(0,"mtx-grid",0),m.bc("expansionChange",(function(s){return n.log(s)})),m.Sb(),m.Kc(1,M,1,1,"ng-template",null,1,m.Lc)),2&s){var a=m.wc(2);m.nc("data",n.list)("columns",n.columns)("expandable",!0)("expansionTemplate",a)}},directives:[u.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:l("uacx"),filecontent:l("lwBr")},{file:"app.component.ts",content:l("CDtL"),filecontent:l("0omm")},{file:"app.component.scss",content:l("GTJp"),filecontent:l("dzeh")}]},q=["grid"];function A(s,n){if(1&s){var a=m.Ub();m.Tb(0,"button"),m.Mc(1,"Save"),m.Sb(),m.Tb(2,"button",6),m.bc("click",(function(){return m.zc(a),m.fc().closeMenu()})),m.Mc(3,"Close"),m.Sb()}}var v={title:"Column hiding & moving",description:"\n  <p>Click the <kbd>Column Shown</kbd> button, you can select or drag the columns.</p>\n  ",component:function(){var s=function(){function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d,this.columnHideable=!0,this.columnMovable=!0,this.columnHideableChecked="show"}return e(s,[{key:"closeMenu",value:function(){this.grid.columnMenu.menuTrigger.closeMenu()}},{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],viewQuery:function(s,n){var a;1&s&&m.Pc(q,!0),2&s&&m.vc(a=m.cc())&&(n.grid=a.first)},decls:16,vars:14,consts:[[3,"ngModel","ngModelChange"],["value","show"],["value","hide"],[3,"data","columns","showToolbar","toolbarTitle","columnHideable","columnHideableChecked","columnMovable","showColumnMenuHeader","columnMenuHeaderText","showColumnMenuFooter","columnMenuFooterTemplate","columnChange"],["grid",""],["menuFooter",""],[3,"click"]],template:function(s,n){if(1&s&&(m.Tb(0,"div"),m.Tb(1,"mat-checkbox",0),m.bc("ngModelChange",(function(s){return n.columnHideable=s})),m.Mc(2,"Column Hiding"),m.Sb(),m.Tb(3,"mat-checkbox",0),m.bc("ngModelChange",(function(s){return n.columnMovable=s})),m.Mc(4,"Column Moving"),m.Sb(),m.Tb(5,"label"),m.Mc(6,"columnHideableChecked:"),m.Sb(),m.Tb(7,"mat-radio-group",0),m.bc("ngModelChange",(function(s){return n.columnHideableChecked=s})),m.Tb(8,"mat-radio-button",1),m.Mc(9,"show"),m.Sb(),m.Tb(10,"mat-radio-button",2),m.Mc(11,"hide"),m.Sb(),m.Sb(),m.Sb(),m.Tb(12,"mtx-grid",3,4),m.bc("columnChange",(function(s){return n.log(s)})),m.Sb(),m.Kc(14,A,4,0,"ng-template",null,5,m.Lc)),2&s){var a=m.wc(15);m.Bb(1),m.nc("ngModel",n.columnHideable),m.Bb(2),m.nc("ngModel",n.columnMovable),m.Bb(4),m.nc("ngModel",n.columnHideableChecked),m.Bb(5),m.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("toolbarTitle","Data Grid")("columnHideable",n.columnHideable)("columnHideableChecked",n.columnHideableChecked)("columnMovable",n.columnMovable)("showColumnMenuHeader",!0)("columnMenuHeaderText","Title")("showColumnMenuFooter",!0)("columnMenuFooterTemplate",a)}},directives:[x.a,j.o,j.r,w.b,w.a,u.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}.mat-radio-button[_ngcontent-%COMP%]{margin:0 4px}label[_ngcontent-%COMP%]{vertical-align:middle}"]}),s}(),files:[{file:"app.component.html",content:l("l4jU"),filecontent:l("CIJY")},{file:"app.component.ts",content:l("bx56"),filecontent:l("uuj5")},{file:"app.component.scss",content:l("NfhK"),filecontent:l("Y5xV")}]},T={title:"Column pinnable",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Position",field:"position",width:"200px"},{header:"Name",field:"name",width:"200px",pinned:"left"},{header:"tags",field:"tag.0.value",width:"200px"},{header:"Weight",field:"weight",width:"200px",pinned:"left"},{header:"Symbol",field:"symbol",width:"200px"},{header:"Gender",field:"gender",width:"200px"},{header:"Mobile",field:"mobile",width:"200px"},{header:"Tele",field:"tele",width:"200px"},{header:"City",field:"city",width:"200px"},{header:"Address",field:"address",width:"200px"},{header:"Date",field:"date",width:"200px"},{header:"Website",field:"website",width:"200px"},{header:"Company",field:"company",width:"200px"},{header:"Email",field:"email",width:"200px",pinned:"right"},{header:"Status",field:"status",type:"boolean",width:"200px"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&m.Ob(0,"mtx-grid",0),2&s&&m.nc("data",n.list)("columns",n.columns)},directives:[u.a],styles:[""]}),s}(),description:"\n  <p>The <code>name</code> and <code>weight</code> column pinned left, the <code>email</code> column\n  pinned right. Scroll the columns to test.</p>\n  ",files:[{file:"app.component.html",content:l("X18N"),filecontent:l("PxDb")},{file:"app.component.ts",content:l("542W"),filecontent:l("qPWd")},{file:"app.component.scss",content:l("dC/T"),filecontent:l("f+SV")}]},S={title:"Hover & striped",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d,this.rowHover=!0,this.rowStriped=!1};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:6,vars:7,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","rowHover","rowStriped","rowSelectable"]],template:function(s,n){1&s&&(m.Tb(0,"div"),m.Tb(1,"mat-checkbox",0),m.bc("ngModelChange",(function(s){return n.rowHover=s})),m.Mc(2,"Hover"),m.Sb(),m.Tb(3,"mat-checkbox",0),m.bc("ngModelChange",(function(s){return n.rowStriped=s})),m.Mc(4,"Striped"),m.Sb(),m.Sb(),m.Ob(5,"mtx-grid",1)),2&s&&(m.Bb(1),m.nc("ngModel",n.rowHover),m.Bb(2),m.nc("ngModel",n.rowStriped),m.Bb(2),m.nc("data",n.list)("columns",n.columns)("rowHover",n.rowHover)("rowStriped",n.rowStriped)("rowSelectable",!0))},directives:[x.a,j.o,j.r,u.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:l("6R26"),filecontent:l("HMmI")},{file:"app.component.ts",content:l("VbyW"),filecontent:l("j4EL")},{file:"app.component.scss",content:l("PLTR"),filecontent:l("CANc")}]},_={title:"Row with buttons",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Operation",field:"operation",width:"160px",pinned:"right",right:"0px",type:"button",buttons:[{type:"icon",text:"copy",icon:"file_copy",tooltip:"copy",disabled:!0,click:function(){alert("copy")}},{type:"icon",text:"edit",icon:"edit",tooltip:"Edit",click:function(){alert("edit")}},{type:"icon",text:"delete",icon:"delete",tooltip:"Delete",color:"warn",pop:!0,popTitle:"Confirm delete?",click:function(){alert("delete")}}]}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&m.Ob(0,"mtx-grid",0),2&s&&m.nc("data",n.list)("columns",n.columns)},directives:[u.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:l("QIZj"),filecontent:l("dzz/")},{file:"app.component.ts",content:l("GS/Z"),filecontent:l("BjN7")},{file:"app.component.scss",content:l("Tgwk"),filecontent:l("e0LT")}]},E=l("k8N0"),G=["statusTpl"];function L(s,n){1&s&&(m.Tb(0,"mat-slide-toggle",2),m.Mc(1,"Slide me!"),m.Sb()),2&s&&m.nc("checked",n.$implicit.status)}var D={title:"Custom cell template",description:"\n  <p>The status column are custom cells.</p>\n  ",component:function(){var s=function(){function s(){a(this,s),this.columns=[],this.list=d}return e(s,[{key:"ngOnInit",value:function(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Status",field:"status",cellTemplate:this.statusTpl}]}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],viewQuery:function(s,n){var a;1&s&&m.Fc(G,!0),2&s&&m.vc(a=m.cc())&&(n.statusTpl=a.first)},decls:3,vars:2,consts:[[3,"data","columns"],["statusTpl",""],[3,"checked"]],template:function(s,n){1&s&&(m.Ob(0,"mtx-grid",0),m.Kc(1,L,2,1,"ng-template",null,1,m.Lc)),2&s&&m.nc("data",n.list)("columns",n.columns)},directives:[u.a,E.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:l("SbnH"),filecontent:l("1kxM")},{file:"app.component.ts",content:l("qkgt"),filecontent:l("ZjVH")},{file:"app.component.scss",content:l("mH8y"),filecontent:l("78Lc")}]},N=l("PBFl");function P(s,n){if(1&s&&(m.Tb(0,"button",3),m.Mc(1),m.Sb()),2&s){var a=n.$implicit;m.Bb(1),m.Nc(a.mobile)}}function H(s,n){if(1&s&&(m.Tb(0,"button",4),m.Mc(1),m.Sb()),2&s){var a=n.$implicit;m.Bb(1),m.Nc(a.city)}}var U=function(s,n){return{mobile:s,city:n}},O={title:"Custom cell template 2",description:'\n  <p>There has another easiest way to custom cells. You can use property\n  <code>[cellTemplate]="{ mobile: mobileTpl, city: cityTpl }"</code>,\n  the key of cellTemplate is the column field.</p>\n  ',component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:5,vars:6,consts:[[3,"data","columns","cellTemplate"],["mobileTpl",""],["cityTpl",""],["mat-raised-button","","color","accent"],["mat-raised-button","","color","primary"]],template:function(s,n){if(1&s&&(m.Ob(0,"mtx-grid",0),m.Kc(1,P,2,1,"ng-template",null,1,m.Lc),m.Kc(3,H,2,1,"ng-template",null,2,m.Lc)),2&s){var a=m.wc(2),t=m.wc(4);m.nc("data",n.list)("columns",n.columns)("cellTemplate",m.rc(3,U,a,t))}},directives:[u.a,N.b],styles:[""]}),s}(),files:[{file:"app.component.html",content:l("mQad"),filecontent:l("/PsR")},{file:"app.component.ts",content:l("w0xT"),filecontent:l("dpl4")},{file:"app.component.scss",content:l("HRzU"),filecontent:l("ui7j")}]},W={title:"Data formatting",description:"\n  <p>The <code>name</code> field use a formatter.</p>\n  ",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name",formatter:function(s){return'<span class="label">'.concat(s.name,"</span>")}},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&m.Ob(0,"mtx-grid",0),2&s&&m.nc("data",n.list)("columns",n.columns)},directives:[u.a],styles:["[_nghost-%COMP%]     .label{padding:5px 10px;border-radius:999px;background-color:#ffb74d}"]}),s}(),files:[{file:"app.component.html",content:l("DHmE"),filecontent:l("2gj7")},{file:"app.component.ts",content:l("T5Dl"),filecontent:l("S4yo")},{file:"app.component.scss",content:l("rU4Y"),filecontent:l("Nu67")}]},X={title:"No result",description:'\n  <p>You can use <code>[noResultTemplate]="noResultTpl"</code> to customize it.</p>\n  ',component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=[]};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&m.Ob(0,"mtx-grid",0),2&s&&m.nc("data",n.list)("columns",n.columns)},directives:[u.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:l("pv1F"),filecontent:l("ejRO")},{file:"app.component.ts",content:l("OC3y"),filecontent:l("8ySv")},{file:"app.component.scss",content:l("kvbJ"),filecontent:l("4U3f")}]},B=l("bFHC"),F=l("Y2X+");function I(s,n){if(1&s&&(m.Mc(0),m.Tb(1,"mat-icon",2),m.Mc(2,"info"),m.Sb()),2&s){var a=n.$implicit;m.Oc(" ",a.header," "),m.Bb(1),m.nc("matTooltip",a.description)}}var R={title:"Custom header template",description:"\n  <p>If you just want to append something to header, you can try\n  <code>[headerExtraTemplate]</code> instead.</p>\n  ",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name",description:"Info about the name"},{header:"Weight",field:"weight",description:"Info about the weight"},{header:"Gender",field:"gender",description:"Info about the gender"},{header:"Mobile",field:"mobile",description:"Info about the mobile"},{header:"City",field:"city",description:"Info about the city"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:3,consts:[[3,"data","columns","headerTemplate"],["headerTpl",""],[3,"matTooltip"]],template:function(s,n){if(1&s&&(m.Ob(0,"mtx-grid",0),m.Kc(1,I,3,2,"ng-template",null,1,m.Lc)),2&s){var a=m.wc(2);m.nc("data",n.list)("columns",n.columns)("headerTemplate",a)}},directives:[u.a,B.a,F.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:l("0Bei"),filecontent:l("axZC")},{file:"app.component.ts",content:l("MeCg"),filecontent:l("KNfm")},{file:"app.component.scss",content:l("lKqS"),filecontent:l("WZGt")}]},z=l("2kYt");function K(s,n){if(1&s&&(m.Tb(0,"div"),m.Mc(1),m.gc(2,"currency"),m.Sb()),2&s){var a=n.$implicit,t=m.fc();m.Bb(1),m.Nc(m.hc(2,1,t.getTotalCost(a)))}}var $=function(s){return{cost:s}},Y={title:"Custom footer template",component:function(){var n=function(){function n(){a(this,n),this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:function(n){return Math.max.apply(Math,s(n))}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=d}return e(n,[{key:"getTotalCost",value:function(s){return s.reduce((function(s,n){return s+n}),0)}}]),n}();return n.\u0275fac=function(s){return new(s||n)},n.\u0275cmp=m.Hb({type:n,selectors:[["data-grid-example"]],decls:3,vars:6,consts:[[3,"data","columns","showSummary","summaryTemplate"],["footerTpl",""]],template:function(s,n){if(1&s&&(m.Ob(0,"mtx-grid",0),m.Kc(1,K,3,3,"ng-template",null,1,m.Lc)),2&s){var a=m.wc(2);m.nc("data",n.list)("columns",n.columns)("showSummary",!0)("summaryTemplate",m.qc(4,$,a))}},directives:[u.a],pipes:[z.d],styles:[""]}),n}(),files:[{file:"app.component.html",content:l("EcNq"),filecontent:l("6xwS")},{file:"app.component.ts",content:l("GySo"),filecontent:l("mll8")},{file:"app.component.scss",content:l("DeK4"),filecontent:l("MqCQ")}]};function V(s,n){1&s&&m.Ob(0,"input",2)}var J={title:"Custom toolbar template",component:function(){var n=function n(){a(this,n),this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:function(n){return Math.max.apply(Math,s(n))}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=d};return n.\u0275fac=function(s){return new(s||n)},n.\u0275cmp=m.Hb({type:n,selectors:[["data-grid-example"]],decls:3,vars:5,consts:[[3,"data","columns","showToolbar","showColumnMenuButton","toolbarTemplate"],["toolbarTpl",""],["placeholder","Search"]],template:function(s,n){if(1&s&&(m.Ob(0,"mtx-grid",0),m.Kc(1,V,1,0,"ng-template",null,1,m.Lc)),2&s){var a=m.wc(2);m.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("showColumnMenuButton",!1)("toolbarTemplate",a)}},directives:[u.a],styles:[""]}),n}(),files:[{file:"app.component.html",content:l("Mwp9"),filecontent:l("Bf3p")},{file:"app.component.ts",content:l("683s"),filecontent:l("RCeb")},{file:"app.component.scss",content:l("JmX3"),filecontent:l("9G+V")}]};function Q(s,n){if(1&s&&(m.Tb(0,"mat-radio-button",3),m.Mc(1),m.Sb()),2&s){var a=n.$implicit;m.nc("value",a.value),m.Bb(1),m.Oc(" ",a.label," ")}}var Z={title:"I18n ngx-translate",component:function(){var s=function s(n){a(this,s),this.translate=n,this.columns=[{header:this.translate.stream("name"),field:"name"},{header:this.translate.stream("weight"),field:"weight"},{header:this.translate.stream("gender"),field:"gender"},{header:this.translate.stream("mobile"),field:"mobile"},{header:this.translate.stream("city"),field:"city"},{header:this.translate.stream("operation"),field:"operation",width:"40px",pinned:"right",right:"0px",type:"button",buttons:[{type:"basic",text:this.translate.stream("delete"),icon:"delete",tooltip:this.translate.stream("delete"),color:"warn",pop:!0,popTitle:this.translate.stream("confirm_delete"),popCloseText:this.translate.stream("close"),popOkText:this.translate.stream("ok"),click:function(){alert("delete")}}]}],this.list=d,this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",n.addLangs(this.langs.map((function(s){return s.value}))),n.setDefaultLang(this.defaultlang)};return s.\u0275fac=function(n){return new(n||s)(m.Nb(h.c))},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:7,consts:[[3,"ngModel","ngModelChange","change"],[3,"value",4,"ngFor","ngForOf"],[3,"data","columns","showToolbar","columnHideable","columnMovable"],[3,"value"]],template:function(s,n){1&s&&(m.Tb(0,"mat-radio-group",0),m.bc("ngModelChange",(function(s){return n.defaultlang=s}))("change",(function(s){return n.translate.use(s.value)})),m.Kc(1,Q,2,2,"mat-radio-button",1),m.Sb(),m.Ob(2,"mtx-grid",2)),2&s&&(m.nc("ngModel",n.defaultlang),m.Bb(1),m.nc("ngForOf",n.langs),m.Bb(1),m.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("columnHideable",!0)("columnMovable",!0))},directives:[w.b,j.o,j.r,z.s,u.a,w.a],styles:[".mat-radio-button[_ngcontent-%COMP%]{margin:0 1rem 1rem 0}"]}),s}(),files:[{file:"app.component.html",content:l("9IZ6"),filecontent:l("4BKG")},{file:"app.component.ts",content:l("GeFj"),filecontent:l("mTK5")},{file:"app.component.scss",content:l("WQ79"),filecontent:l("mZqV")},{file:"assets/zh-CN.json",content:l("S/V4"),filecontent:l("brLd")},{file:"assets/en-US.json",content:l("6v9L"),filecontent:l("L6mX")}]},ss=function(){return[5,10,20]},ns={title:"Remote Data",component:function(){var s=function(){function s(n){a(this,s),this.http=n,this.columns=[{header:"Name",field:"name",formatter:function(s){return'<a href="'.concat(s.html_url,'" target="_blank">').concat(s.name,"</a>")}},{header:"Owner",field:"owner.login"},{header:"Owner Avatar",field:"owner.avatar_url",type:"image"},{header:"Description",field:"description",width:"300px"},{header:"Stars",field:"stargazers_count"},{header:"Forks",field:"forks_count"},{header:"Score",field:"score"},{header:"Issues",field:"open_issues"},{header:"Language",field:"language"},{header:"License",field:"license.name"},{header:"Home Page",field:"homepage",type:"link"},{header:"Is forked",field:"fork",type:"boolean"},{header:"Archived",field:"archived",type:"tag",tag:{true:{text:"Yes",color:"red-100"},false:{text:"No",color:"green-100"}}},{header:"Created Date",field:"created_at"},{header:"Updated Date",field:"updated_at"}],this.list=[],this.total=0,this.isLoading=!0,this.query={q:"user:nzbin",page:0,per_page:5}}return e(s,[{key:"ngOnInit",value:function(){this.getData()}},{key:"getData",value:function(){var s=this;this.isLoading=!0,this.http.get("https://api.github.com/search/repositories",{params:this.params}).subscribe((function(n){s.list=n.items,s.total=n.total_count,s.isLoading=!1}),(function(){s.isLoading=!1}),(function(){s.isLoading=!1}))}},{key:"getNextPage",value:function(s){this.query.page=s.pageIndex,this.query.per_page=s.pageSize,this.getData()}},{key:"refresh",value:function(){this.getData()}},{key:"params",get:function(){var s=Object.assign({},this.query);return s.page+=1,s}}]),s}();return s.\u0275fac=function(n){return new(n||s)(m.Nb(c.b))},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:9,consts:[["mat-raised-button","","color","primary",3,"click"],[3,"data","columns","length","loading","pageOnFront","pageIndex","pageSize","pageSizeOptions","page"]],template:function(s,n){1&s&&(m.Tb(0,"button",0),m.bc("click",(function(){return n.refresh()})),m.Mc(1,"Refresh"),m.Sb(),m.Tb(2,"mtx-grid",1),m.bc("page",(function(s){return n.getNextPage(s)})),m.Sb()),2&s&&(m.Bb(2),m.nc("data",n.list)("columns",n.columns)("length",n.total)("loading",n.isLoading)("pageOnFront",!1)("pageIndex",n.query.page)("pageSize",n.query.per_page)("pageSizeOptions",m.pc(8,ss)))},directives:[N.b,u.a],styles:[".mat-raised-button[_ngcontent-%COMP%]{margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:l("6sDK"),filecontent:l("TMKU")},{file:"app.component.ts",content:l("+97s"),filecontent:l("nCkU")},{file:"app.component.scss",content:l("ggCB"),filecontent:l("wYYT")}]},as={title:"Column resize",component:function(){var s=function s(){a(this,s),this.columns=[{header:"Name",field:"name",minWidth:200},{header:"Weight",field:"weight",minWidth:200},{header:"Gender",field:"gender",minWidth:200},{header:"Mobile",field:"mobile",minWidth:200},{header:"City",field:"city",minWidth:200}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","columnResizable"]],template:function(s,n){1&s&&m.Ob(0,"mtx-grid",0),2&s&&m.nc("data",n.list)("columns",n.columns)("columnResizable",!0)},directives:[u.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:l("naY5"),filecontent:l("izta")},{file:"app.component.ts",content:l("B50w"),filecontent:l("5CJL")},{file:"app.component.scss",content:l("cUD5"),filecontent:l("/0tF")}]},ts={title:"Custom class for row and column",component:function(){var s=function s(){a(this,s),this.rowClassFormatter={success:function(s,n){return"Boron"===s.name},danger:function(s,n){return 1===n}},this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile",class:"warning"},{header:"City",field:"city"}],this.list=d};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=m.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","rowClassFormatter"]],template:function(s,n){1&s&&m.Ob(0,"mtx-grid",0),2&s&&m.nc("data",n.list)("columns",n.columns)("rowClassFormatter",n.rowClassFormatter)},directives:[u.a],styles:["[_nghost-%COMP%]     .mtx-grid .success{background-color:#d1e7dd}[_nghost-%COMP%]     .mtx-grid .danger{background-color:#f8d7da}[_nghost-%COMP%]     .mtx-grid .warning{background-color:#fff3cd}"]}),s}(),files:[{file:"app.component.html",content:l("WaRX"),filecontent:l("4nc+")},{file:"app.component.ts",content:l("8CWH"),filecontent:l("2wlB")},{file:"app.component.scss",content:l("x46w"),filecontent:l("TtIc")}]},es=l("5S+f"),ls=l("Pg5x");function ps(s,n){if(1&s&&(m.Rb(0),m.Ob(1,"doc-heading",3),m.Ob(2,"example-viewer",4),m.Qb()),2&s){var a=n.$implicit;m.Bb(1),m.nc("text",a.title),m.Bb(1),m.nc("exampleData",a)}}function os(s,n){if(1&s&&(m.Rb(0),m.Kc(1,ps,3,2,"ng-container",2),m.Qb()),2&s){var a=n.ngIf;m.Bb(1),m.nc("ngForOf",a.examples)}}function rs(s){return new i.a(s,"assets/i18n/data-grid/","_json")}var is,cs,hs,ds=((hs=function s(n){a(this,s),this.route=n}).\u0275fac=function(s){return new(s||hs)(m.Nb(o.a))},hs.\u0275cmp=m.Hb({type:hs,selectors:[["app-data-grid-overview"]],decls:10,vars:3,consts:[["mat-raised-button","","color","accent","href","https://nzbin.gitbook.io/material-extensions/data-grid","target","_blank"],[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"text"],[3,"exampleData"]],template:function(s,n){1&s&&(m.Tb(0,"p"),m.Mc(1," The "),m.Tb(2,"code"),m.Mc(3,"mtx-grid"),m.Sb(),m.Mc(4," is an powerful material table component. It supports cell selectable, row selectable, multiple row selectable, row expandable, column hiding, column moving and so on.\n"),m.Sb(),m.Tb(5,"p"),m.Tb(6,"a",0),m.Mc(7,"API Reference"),m.Sb(),m.Sb(),m.Kc(8,os,2,1,"ng-container",1),m.gc(9,"async")),2&s&&(m.Bb(8),m.nc("ngIf",m.hc(9,1,n.route.data)))},directives:[N.a,z.t,z.s,es.a,ls.a],pipes:[z.b],encapsulation:2}),hs),ms=((cs=function s(n){a(this,s),this.route=n}).\u0275fac=function(s){return new(s||cs)(m.Nb(o.a))},cs.\u0275cmp=m.Hb({type:cs,selectors:[["app-data-grid-api"]],decls:1,vars:0,template:function(s,n){1&s&&m.Mc(0,"Coming soon\n")},encapsulation:2}),cs),us=((is=function s(){a(this,s)}).\u0275mod=m.Lb({type:is}),is.\u0275inj=m.Kb({factory:function(s){return new(s||is)},imports:[[r.c,h.b.forRoot({loader:{provide:h.a,useFactory:rs,deps:[c.b]}}),o.j.forChild([{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:ds,pathMatch:"full",data:{examples:[g,as,f,b,y,C,k,v,T,S,_,D,O,W,ts,X,R,Y,J,Z,ns]}},{path:"api",component:ms,pathMatch:"full"},{path:"**",redirectTo:"overview"}])]]}),is)},OC3y:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = [];\n}\n'},P9nZ:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [trackBy]="trackByName">\n</mtx-grid>\n'},PLTR:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},PYPw:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowSelectable&quot;</span>&gt;</span>Row selectable<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>&gt;</span>Hide checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;multiSelectable&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>Single<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>Multiple<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">multiSelectable</span>]=<span class="hljs-string">&quot;multiSelectable&quot;</span>\n          [<span class="hljs-attr">hideRowSelectionCheckbox</span>]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;rowSelectable&quot;</span>\n          [<span class="hljs-attr">rowSelected</span>]=<span class="hljs-string">&quot;rowSelected&quot;</span>\n          [<span class="hljs-attr">rowSelectionFormatter</span>]=<span class="hljs-string">&quot;rowSelectionFormatter&quot;</span>\n          (<span class="hljs-attr">rowSelectionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>\n          (<span class="hljs-attr">cellSelectionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},PYyB:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},PxDb:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},QIZj:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},RCeb:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},RooG:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox,\n.mat-radio-button {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},"S/V4":function(s,n){s.exports='{\n  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;\u59d3\u540d&quot;</span>,\n  <span class="hljs-attr">&quot;weight&quot;</span>: <span class="hljs-string">&quot;\u4f53\u91cd&quot;</span>,\n  <span class="hljs-attr">&quot;gender&quot;</span>: <span class="hljs-string">&quot;\u6027\u522b&quot;</span>,\n  <span class="hljs-attr">&quot;mobile&quot;</span>: <span class="hljs-string">&quot;\u624b\u673a&quot;</span>,\n  <span class="hljs-attr">&quot;city&quot;</span>: <span class="hljs-string">&quot;\u57ce\u5e02&quot;</span>,\n  <span class="hljs-attr">&quot;operation&quot;</span>: <span class="hljs-string">&quot;\u64cd\u4f5c&quot;</span>,\n  <span class="hljs-attr">&quot;delete&quot;</span>: <span class="hljs-string">&quot;\u5220\u9664&quot;</span>,\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span>: <span class="hljs-string">&quot;\u786e\u8ba4\u5220\u9664\uff1f&quot;</span>,\n  <span class="hljs-attr">&quot;close&quot;</span>: <span class="hljs-string">&quot;\u5173\u95ed&quot;</span>,\n  <span class="hljs-attr">&quot;ok&quot;</span>: <span class="hljs-string">&quot;\u786e\u5b9a&quot;</span>\n}\n'},S4yo:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<span class=\"label\">${data.name}</span>`,\n    },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},SbnH:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">statusTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slide-toggle</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">&quot;row.status&quot;</span>&gt;</span>Slide me!<span class="hljs-tag">&lt;/<span class="hljs-name">mat-slide-toggle</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},T5Dl:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      field: <span class="hljs-string">&#x27;name&#x27;</span>,\n      formatter: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;span class=&quot;label&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/span&gt;`</span>,\n    },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},TMKU:function(s,n,a){"use strict";a.r(n),n.default='<button mat-raised-button color="primary" (click)="refresh()">Refresh</button>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [length]="total"\n          [loading]="isLoading"\n          [pageOnFront]="false"\n          [pageIndex]="query.page"\n          [pageSize]="query.per_page"\n          [pageSizeOptions]="[5,10,20]"\n          (page)="getNextPage($event)">\n</mtx-grid>\n'},Tgwk:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},TtIc:function(s,n,a){"use strict";a.r(n),n.default=":host ::ng-deep .mtx-grid {\n  .success {\n    background-color: #d1e7dd;\n  }\n\n  .danger {\n    background-color: #f8d7da;\n  }\n\n  .warning {\n    background-color: #fff3cd;\n  }\n}\n"},VbyW:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = <span class="hljs-literal">true</span>;\n  rowStriped = <span class="hljs-literal">false</span>;\n}\n'},WQ79:function(s,n){s.exports='<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">1rem</span> <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},WZGt:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},WaRX:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">rowClassFormatter</span>]=<span class="hljs-string">&quot;rowClassFormatter&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},WtW4:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},X18N:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},Y5xV:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n\n.mat-radio-button {\n  margin: 0 4px;\n}\n\nlabel {\n  vertical-align: middle;\n}\n"},YWcN:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},ZjVH:function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('statusTpl', { static: true }) statusTpl: TemplateRef<any>;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    this.columns = [\n      { header: 'Name', field: 'name' },\n      { header: 'Weight', field: 'weight' },\n      { header: 'Gender', field: 'gender' },\n      { header: 'Mobile', field: 'mobile' },\n      { header: 'City', field: 'city' },\n      { header: 'Status', field: 'status', cellTemplate: this.statusTpl },\n    ];\n  }\n}\n"},aQaT:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      field: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;number&#x27;</span>,\n      typeParameter: {\n        digitsInfo: <span class="hljs-string">&#x27;1.2-2&#x27;</span>,\n      },\n    },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Date&#x27;</span>,\n      field: <span class="hljs-string">&#x27;date&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;date&#x27;</span>,\n      typeParameter: {\n        format: <span class="hljs-string">&#x27;yyyy-MM-dd&#x27;</span>,\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  trackByName(index: <span class="hljs-built_in">number</span>, item: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-keyword">return</span> item.name;\n  }\n}\n'},axZC:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [headerTemplate]="headerTpl">\n</mtx-grid>\n\n<ng-template #headerTpl let-col>\n  {{col.header}} <mat-icon [matTooltip]="col.description">info</mat-icon>\n</ng-template>\n'},b74P:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},bp5I:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-bottom: 1rem;\n}\n"},brLd:function(s,n,a){"use strict";a.r(n),n.default='{\n  "name": "\u59d3\u540d",\n  "weight": "\u4f53\u91cd",\n  "gender": "\u6027\u522b",\n  "mobile": "\u624b\u673a",\n  "city": "\u57ce\u5e02",\n  "operation": "\u64cd\u4f5c",\n  "delete": "\u5220\u9664",\n  "confirm_delete": "\u786e\u8ba4\u5220\u9664\uff1f",\n  "close": "\u5173\u95ed",\n  "ok": "\u786e\u5b9a"\n}\n'},bx56:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, ViewChild } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">&#x27;grid&#x27;</span>) grid: MtxGridComponent;\n\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = <span class="hljs-literal">true</span>;\n  columnMovable = <span class="hljs-literal">true</span>;\n  columnHideableChecked = <span class="hljs-string">&#x27;show&#x27;</span>;\n\n  closeMenu() {\n    <span class="hljs-built_in">this</span>.grid.columnMenu.menuTrigger.closeMenu();\n  }\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},cUD5:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},cXSL:function(s,n){s.exports='<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> EXAMPLE_DATA: <span class="hljs-built_in">any</span>[] = [\n  {\n    position: <span class="hljs-number">1</span>,\n    name: <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">&#x27;red&#x27;</span>,\n        value: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],\n      },\n    ],\n    weight: <span class="hljs-number">10.811</span>,\n    symbol: <span class="hljs-string">&#x27;B&#x27;</span>,\n    gender: <span class="hljs-string">&#x27;male&#x27;</span>,\n    mobile: <span class="hljs-string">&#x27;13198765432&#x27;</span>,\n    tele: <span class="hljs-string">&#x27;567891234&#x27;</span>,\n    city: <span class="hljs-string">&#x27;Berlin&#x27;</span>,\n    address: <span class="hljs-string">&#x27;Bernauer Str.111,13355&#x27;</span>,\n    date: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    website: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    company: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    email: <span class="hljs-string">&#x27;Boron@gmail.com&#x27;</span>,\n    status: <span class="hljs-literal">false</span>,\n    cost: <span class="hljs-number">4</span>\n  },\n  {\n    position: <span class="hljs-number">2</span>,\n    name: <span class="hljs-string">&#x27;Helium&#x27;</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">&#x27;blue&#x27;</span>,\n        value: [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>],\n      },\n    ],\n    weight: <span class="hljs-number">8.0026</span>,\n    symbol: <span class="hljs-string">&#x27;He&#x27;</span>,\n    gender: <span class="hljs-string">&#x27;female&#x27;</span>,\n    mobile: <span class="hljs-string">&#x27;13034676675&#x27;</span>,\n    tele: <span class="hljs-string">&#x27;80675432&#x27;</span>,\n    city: <span class="hljs-string">&#x27;Shanghai&#x27;</span>,\n    address: <span class="hljs-string">&#x27;88 Songshan Road&#x27;</span>,\n    date: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    website: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    company: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    email: <span class="hljs-string">&#x27;Helium@gmail.com&#x27;</span>,\n    status: <span class="hljs-literal">true</span>,\n    cost: <span class="hljs-number">5</span>\n  },\n  {\n    position: <span class="hljs-number">3</span>,\n    name: <span class="hljs-string">&#x27;Nitrogen&#x27;</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">&#x27;yellow&#x27;</span>,\n        value: [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>],\n      },\n    ],\n    weight: <span class="hljs-number">14.0067</span>,\n    symbol: <span class="hljs-string">&#x27;N&#x27;</span>,\n    gender: <span class="hljs-string">&#x27;male&#x27;</span>,\n    mobile: <span class="hljs-string">&#x27;15811112222&#x27;</span>,\n    tele: <span class="hljs-string">&#x27;345678912&#x27;</span>,\n    city: <span class="hljs-string">&#x27;Sydney&#x27;</span>,\n    address: <span class="hljs-string">&#x27;Circular Quay, Sydney NSW 2000&#x27;</span>,\n    date: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    website: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    company: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    email: <span class="hljs-string">&#x27;Nitrogen@gmail.com&#x27;</span>,\n    status: <span class="hljs-literal">true</span>,\n    cost: <span class="hljs-number">2</span>\n  },\n];\n'},"dC/T":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},dpl4:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},dzeh:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"dzz/":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},e0LT:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},ejRO:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},ek0L:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          <span class="hljs-attr">sortOnFront</span>=<span class="hljs-string">&quot;true&quot;</span>\n          <span class="hljs-attr">sortActive</span>=<span class="hljs-string">&quot;name&quot;</span>\n          <span class="hljs-attr">sortDirection</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          <span class="hljs-attr">sortDisableClear</span>=<span class="hljs-string">&quot;true&quot;</span>\n          <span class="hljs-attr">sortDisabled</span>=<span class="hljs-string">&quot;false&quot;</span>\n          <span class="hljs-attr">sortStart</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          (<span class="hljs-attr">sortChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"f+SV":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},ggCB:function(s,n){s.exports='<span class="hljs-selector-class">.mat-raised-button</span> {\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},hifq:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', sortable: true },\n    { header: 'Weight', field: 'weight', sortable: true },\n    { header: 'Gender', field: 'gender', sortable: true },\n    { header: 'Mobile', field: 'mobile', sortable: false },\n    {\n      header: 'City',\n      field: 'city',\n      sortable: true,\n      sortProp: {\n        arrowPosition: 'before',\n        disableClear: true,\n        start: 'desc',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},iHCj:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = true;\n}\n"},izta:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [columnResizable]="true">\n</mtx-grid>\n'},j4EL:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = true;\n  rowStriped = false;\n}\n"},jDd0:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowSelectable">Row selectable</mat-checkbox>\n  <mat-checkbox [(ngModel)]="hideRowSelectionCheckbox">Hide checkbox</mat-checkbox>\n  <mat-radio-group [(ngModel)]="multiSelectable">\n    <mat-radio-button [value]="false">Single</mat-radio-button>\n    <mat-radio-button [value]="true">Multiple</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [multiSelectable]="multiSelectable"\n          [hideRowSelectionCheckbox]="hideRowSelectionCheckbox"\n          [rowSelectable]="rowSelectable"\n          [rowSelected]="rowSelected"\n          [rowSelectionFormatter]="rowSelectionFormatter"\n          (rowSelectionChange)="log($event)"\n          (cellSelectionChange)="log($event)">\n</mtx-grid>\n'},kIeg:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = <span class="hljs-literal">true</span>;\n}\n'},kvbJ:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},l4jU:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnHideable&quot;</span>&gt;</span>Column Hiding<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnMovable&quot;</span>&gt;</span>Column Moving<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>columnHideableChecked:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnHideableChecked&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span>show<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span>hide<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span> #<span class="hljs-attr">grid</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">toolbarTitle</span>]=<span class="hljs-string">&quot;&#x27;Data Grid&#x27;&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;columnHideable&quot;</span>\n          [<span class="hljs-attr">columnHideableChecked</span>]=<span class="hljs-string">&quot;columnHideableChecked&quot;</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">&quot;columnMovable&quot;</span>\n          (<span class="hljs-attr">columnChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>\n          [<span class="hljs-attr">showColumnMenuHeader</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMenuHeaderText</span>]=<span class="hljs-string">&quot;&#x27;Title&#x27;&quot;</span>\n          [<span class="hljs-attr">showColumnMenuFooter</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMenuFooterTemplate</span>]=<span class="hljs-string">&quot;menuFooter&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">menuFooter</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>Save<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;closeMenu()&quot;</span>&gt;</span>Close<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},lHNz:function(s,n,a){"use strict";a.r(n),n.default="export const EXAMPLE_DATA: any[] = [\n  {\n    position: 1,\n    name: 'Boron',\n    tag: [\n      {\n        color: 'red',\n        value: [1, 2],\n      },\n    ],\n    weight: 10.811,\n    symbol: 'B',\n    gender: 'male',\n    mobile: '13198765432',\n    tele: '567891234',\n    city: 'Berlin',\n    address: 'Bernauer Str.111,13355',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Boron@gmail.com',\n    status: false,\n    cost: 4\n  },\n  {\n    position: 2,\n    name: 'Helium',\n    tag: [\n      {\n        color: 'blue',\n        value: [3, 4],\n      },\n    ],\n    weight: 8.0026,\n    symbol: 'He',\n    gender: 'female',\n    mobile: '13034676675',\n    tele: '80675432',\n    city: 'Shanghai',\n    address: '88 Songshan Road',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Helium@gmail.com',\n    status: true,\n    cost: 5\n  },\n  {\n    position: 3,\n    name: 'Nitrogen',\n    tag: [\n      {\n        color: 'yellow',\n        value: [5, 6],\n      },\n    ],\n    weight: 14.0067,\n    symbol: 'N',\n    gender: 'male',\n    mobile: '15811112222',\n    tele: '345678912',\n    city: 'Sydney',\n    address: 'Circular Quay, Sydney NSW 2000',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Nitrogen@gmail.com',\n    status: true,\n    cost: 2\n  },\n];\n"},lKqS:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},lwBr:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [expandable]="true"\n          [expansionTemplate]="expansionTpl"\n          (expansionChange)="log($event)">\n</mtx-grid>\n\n<ng-template #expansionTpl let-row>\n  {{row.name}}\n</ng-template>\n'},mH8y:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},mQad:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">cellTemplate</span>]=<span class="hljs-string">&quot;{mobile: mobileTpl, city: cityTpl}&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">mobileTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;accent&quot;</span>&gt;</span>{{row.mobile}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">cityTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>{{row.city}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},mTK5:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: this.translate.stream('name'),\n      field: 'name',\n    },\n    {\n      header: this.translate.stream('weight'),\n      field: 'weight',\n    },\n    {\n      header: this.translate.stream('gender'),\n      field: 'gender',\n    },\n    {\n      header: this.translate.stream('mobile'),\n      field: 'mobile',\n    },\n    {\n      header: this.translate.stream('city'),\n      field: 'city',\n    },\n    {\n      header: this.translate.stream('operation'),\n      field: 'operation',\n      width: '40px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'basic',\n          text: this.translate.stream('delete'),\n          icon: 'delete',\n          tooltip: this.translate.stream('delete'),\n          color: 'warn',\n          pop: true,\n          popTitle: this.translate.stream('confirm_delete'),\n          popCloseText: this.translate.stream('close'),\n          popOkText: this.translate.stream('ok'),\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n  defaultlang = 'zh-CN';\n\n  constructor(public translate: TranslateService) {\n    translate.addLangs(this.langs.map(item => item.value));\n    translate.setDefaultLang(this.defaultlang);\n  }\n}\n"},mZqV:function(s,n,a){"use strict";a.r(n),n.default=".mat-radio-button {\n  margin: 0 1rem 1rem 0;\n}\n"},mll8:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: any) {\n    return data.reduce((acc: any, value: any) => acc + value, 0);\n  }\n}\n"},mspS:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    {\n      header: 'Weight',\n      field: 'weight',\n      type: 'number',\n      typeParameter: {\n        digitsInfo: '1.2-2',\n      },\n    },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Date',\n      field: 'date',\n      type: 'date',\n      typeParameter: {\n        format: 'yyyy-MM-dd',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  trackByName(index: number, item: any) {\n    return item.name;\n  }\n}\n"},nCkU:function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { PageEvent } from '@angular/material/paginator';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\n    },\n    { header: 'Owner', field: 'owner.login' },\n    { header: 'Owner Avatar', field: 'owner.avatar_url', type: 'image' },\n    { header: 'Description', field: 'description', width: '300px' },\n    { header: 'Stars', field: 'stargazers_count' },\n    { header: 'Forks', field: 'forks_count' },\n    { header: 'Score', field: 'score' },\n    { header: 'Issues', field: 'open_issues' },\n    { header: 'Language', field: 'language' },\n    { header: 'License', field: 'license.name' },\n    { header: 'Home Page', field: 'homepage', type: 'link' },\n    { header: 'Is forked', field: 'fork', type: 'boolean' },\n    {\n      header: 'Archived',\n      field: 'archived',\n      type: 'tag',\n      tag: {\n        true: { text: 'Yes', color: 'red-100' },\n        false: { text: 'No', color: 'green-100' },\n      },\n    },\n    { header: 'Created Date', field: 'created_at' },\n    { header: 'Updated Date', field: 'updated_at' },\n  ];\n  list = [];\n  total = 0;\n  isLoading = true;\n\n  query = {\n    q: 'user:nzbin',\n    page: 0,\n    per_page: 5,\n  };\n\n  get params() {\n    const p = Object.assign({}, this.query);\n    p.page += 1;\n    return p;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  getData() {\n    this.isLoading = true;\n    this.http\n      .get('https://api.github.com/search/repositories', { params: this.params as any })\n      .subscribe(\n        (res: any) => {\n          this.list = res.items;\n          this.total = res.total_count;\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n  }\n\n  getNextPage(e: PageEvent) {\n    this.query.page = e.pageIndex;\n    this.query.per_page = e.pageSize;\n    this.getData();\n  }\n\n  refresh() {\n    this.getData();\n  }\n}\n"},naY5:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">columnResizable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},pIgx:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},pv1F:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},qPWd:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Position', field: 'position', width: '200px' },\n    { header: 'Name', field: 'name', width: '200px', pinned: 'left' },\n    { header: 'tags', field: 'tag.0.value', width: '200px' },\n    { header: 'Weight', field: 'weight', width: '200px', pinned: 'left' },\n    { header: 'Symbol', field: 'symbol', width: '200px' },\n    { header: 'Gender', field: 'gender', width: '200px' },\n    { header: 'Mobile', field: 'mobile', width: '200px' },\n    { header: 'Tele', field: 'tele', width: '200px' },\n    { header: 'City', field: 'city', width: '200px' },\n    { header: 'Address', field: 'address', width: '200px' },\n    { header: 'Date', field: 'date', width: '200px' },\n    { header: 'Website', field: 'website', width: '200px' },\n    { header: 'Company', field: 'company', width: '200px' },\n    { header: 'Email', field: 'email', width: '200px', pinned: 'right' },\n    { header: 'Status', field: 'status', type: 'boolean', width: '200px' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},qUcz:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          sortOnFront="true"\n          sortActive="name"\n          sortDirection="asc"\n          sortDisableClear="true"\n          sortDisabled="false"\n          sortStart="asc"\n          (sortChange)="log($event)">\n</mtx-grid>\n'},qkgt:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit, ViewChild, TemplateRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent <span class="hljs-keyword">implements</span> OnInit {\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">&#x27;statusTpl&#x27;</span>, { <span class="hljs-keyword">static</span>: <span class="hljs-literal">true</span> }) statusTpl: TemplateRef&lt;<span class="hljs-built_in">any</span>&gt;;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    <span class="hljs-built_in">this</span>.columns = [\n      { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Status&#x27;</span>, field: <span class="hljs-string">&#x27;status&#x27;</span>, cellTemplate: <span class="hljs-built_in">this</span>.statusTpl },\n    ];\n  }\n}\n'},qlsX:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},rU4Y:function(s,n){s.exports=':host ::ng-deep .label {\n  padding: <span class="hljs-number">5px</span> <span class="hljs-number">10px</span>;\n  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">999px</span>;\n  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ffb74d</span>;\n}\n'},uacx:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">expandable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">expansionTemplate</span>]=<span class="hljs-string">&quot;expansionTpl&quot;</span>\n          (<span class="hljs-attr">expansionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">expansionTpl</span> <span class="hljs-attr">let-row</span>&gt;</span>\n  {{row.name}}\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},ui7j:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},uuj5:function(s,n,a){"use strict";a.r(n),n.default="import { Component, ViewChild } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridComponent } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  @ViewChild('grid') grid: MtxGridComponent;\n\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = true;\n  columnMovable = true;\n  columnHideableChecked = 'show';\n\n  closeMenu() {\n    this.grid.columnMenu.menuTrigger.closeMenu();\n  }\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},vwie:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},w0xT:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},wYYT:function(s,n,a){"use strict";a.r(n),n.default=".mat-raised-button {\n  margin-bottom: 1rem;\n}\n"},x46w:function(s,n){s.exports=':host ::ng-deep .mtx-grid {\n  .success {\n    background-color: <span class="hljs-number">#d1e7dd</span>;\n  }\n\n  <span class="hljs-selector-class">.danger</span> {\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f8d7da</span>;\n  }\n\n  <span class="hljs-selector-class">.warning</span> {\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff3cd</span>;\n  }\n}\n'},"zkR/":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowSelectionFormatter } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = true;\n  hideRowSelectionCheckbox = false;\n  rowSelectable = true;\n  rowSelected = EXAMPLE_DATA.slice(2, 3);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: data => data.name === 'Boron',\n    hideCheckbox: data => data.name === 'John',\n  };\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},zstj:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>Loading<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'}}])}();