(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"+8FP":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"+lZz":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"07G0":function(s,n,a){"use strict";a.r(n),n.default=".mat-raised-button {\n  margin-bottom: 1rem;\n}\n"},"0kP5":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},"2Mmh":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"2W1W":function(s,n,a){"use strict";a.r(n),n.default=":host ::ng-deep .label {\n  padding: 5px 10px;\n  border-radius: 999px;\n  background-color: #ffb74d;\n}\n"},"2i9Y":function(s,n){s.exports='<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> EXAMPLE_DATA: <span class="hljs-built_in">any</span>[] = [\n  {\n    <span class="hljs-attr">position</span>: <span class="hljs-number">1</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    <span class="hljs-attr">tag</span>: [\n      {\n        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red&#x27;</span>,\n        <span class="hljs-attr">value</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],\n      },\n    ],\n    <span class="hljs-attr">weight</span>: <span class="hljs-number">10.811</span>,\n    <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;B&#x27;</span>,\n    <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;male&#x27;</span>,\n    <span class="hljs-attr">mobile</span>: <span class="hljs-string">&#x27;13198765432&#x27;</span>,\n    <span class="hljs-attr">tele</span>: <span class="hljs-string">&#x27;567891234&#x27;</span>,\n    <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;Berlin&#x27;</span>,\n    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;Bernauer Str.111,13355&#x27;</span>,\n    <span class="hljs-attr">date</span>: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    <span class="hljs-attr">website</span>: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    <span class="hljs-attr">company</span>: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;Boron@gmail.com&#x27;</span>,\n    <span class="hljs-attr">status</span>: <span class="hljs-literal">false</span>,\n    <span class="hljs-attr">cost</span>: <span class="hljs-number">4</span>\n  },\n  {\n    <span class="hljs-attr">position</span>: <span class="hljs-number">2</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Helium&#x27;</span>,\n    <span class="hljs-attr">tag</span>: [\n      {\n        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;blue&#x27;</span>,\n        <span class="hljs-attr">value</span>: [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>],\n      },\n    ],\n    <span class="hljs-attr">weight</span>: <span class="hljs-number">8.0026</span>,\n    <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;He&#x27;</span>,\n    <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;female&#x27;</span>,\n    <span class="hljs-attr">mobile</span>: <span class="hljs-string">&#x27;13034676675&#x27;</span>,\n    <span class="hljs-attr">tele</span>: <span class="hljs-string">&#x27;80675432&#x27;</span>,\n    <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;Shanghai&#x27;</span>,\n    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;88 Songshan Road&#x27;</span>,\n    <span class="hljs-attr">date</span>: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    <span class="hljs-attr">website</span>: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    <span class="hljs-attr">company</span>: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;Helium@gmail.com&#x27;</span>,\n    <span class="hljs-attr">status</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">cost</span>: <span class="hljs-number">5</span>\n  },\n  {\n    <span class="hljs-attr">position</span>: <span class="hljs-number">3</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Nitrogen&#x27;</span>,\n    <span class="hljs-attr">tag</span>: [\n      {\n        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;yellow&#x27;</span>,\n        <span class="hljs-attr">value</span>: [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>],\n      },\n    ],\n    <span class="hljs-attr">weight</span>: <span class="hljs-number">14.0067</span>,\n    <span class="hljs-attr">symbol</span>: <span class="hljs-string">&#x27;N&#x27;</span>,\n    <span class="hljs-attr">gender</span>: <span class="hljs-string">&#x27;male&#x27;</span>,\n    <span class="hljs-attr">mobile</span>: <span class="hljs-string">&#x27;15811112222&#x27;</span>,\n    <span class="hljs-attr">tele</span>: <span class="hljs-string">&#x27;345678912&#x27;</span>,\n    <span class="hljs-attr">city</span>: <span class="hljs-string">&#x27;Sydney&#x27;</span>,\n    <span class="hljs-attr">address</span>: <span class="hljs-string">&#x27;Circular Quay, Sydney NSW 2000&#x27;</span>,\n    <span class="hljs-attr">date</span>: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    <span class="hljs-attr">website</span>: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    <span class="hljs-attr">company</span>: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;Nitrogen@gmail.com&#x27;</span>,\n    <span class="hljs-attr">status</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-attr">cost</span>: <span class="hljs-number">2</span>\n  },\n];\n'},"2sCj":function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-bottom: 1rem;\n}\n"},"2t/w":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#x27;Info about the city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"3cIJ":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"3d+Z":function(s,n,a){"use strict";a.r(n),n.default='{\n  "name": "\u59d3\u540d",\n  "weight": "\u4f53\u91cd",\n  "gender": "\u6027\u522b",\n  "mobile": "\u624b\u673a",\n  "city": "\u57ce\u5e02",\n  "operation": "\u64cd\u4f5c",\n  "delete": "\u5220\u9664",\n  "confirm_delete": "\u786e\u8ba4\u5220\u9664\uff1f",\n  "close": "\u5173\u95ed",\n  "ok": "\u786e\u5b9a"\n}\n'},"47AF":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<span class=\"label\">${data.name}</span>`,\n    },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},"4nNR":function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { PageEvent } from '@angular/material/paginator';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\n    },\n    { header: 'Owner', field: 'owner.login' },\n    { header: 'Owner Avatar', field: 'owner.avatar_url', type: 'image' },\n    { header: 'Description', field: 'description', width: '300px' },\n    { header: 'Stars', field: 'stargazers_count' },\n    { header: 'Forks', field: 'forks_count' },\n    { header: 'Score', field: 'score' },\n    { header: 'Issues', field: 'open_issues' },\n    { header: 'Language', field: 'language' },\n    { header: 'License', field: 'license.name' },\n    { header: 'Home Page', field: 'homepage', type: 'link' },\n    { header: 'Is forked', field: 'fork', type: 'boolean' },\n    {\n      header: 'Archived',\n      field: 'archived',\n      type: 'tag',\n      tag: {\n        true: { text: 'Yes', color: 'red-100' },\n        false: { text: 'No', color: 'green-100' },\n      },\n    },\n    { header: 'Created Date', field: 'created_at' },\n    { header: 'Updated Date', field: 'updated_at' },\n  ];\n  list = [];\n  total = 0;\n  isLoading = true;\n\n  query = {\n    q: 'user:nzbin',\n    page: 0,\n    per_page: 5,\n  };\n\n  get params() {\n    const p = Object.assign({}, this.query);\n    p.page += 1;\n    return p;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  getData() {\n    this.isLoading = true;\n    this.http\n      .get('https://api.github.com/search/repositories', { params: this.params as any })\n      .subscribe(\n        (res: any) => {\n          this.list = res.items;\n          this.total = res.total_count;\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n  }\n\n  getNextPage(e: PageEvent) {\n    this.query.page = e.pageIndex;\n    this.query.per_page = e.pageSize;\n    this.getData();\n  }\n\n  refresh() {\n    this.getData();\n  }\n}\n"},"5++J":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},"54mp":function(s,n,a){"use strict";a.r(n),n.default="import { Component, ViewChild } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridComponent } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  @ViewChild('grid') grid: MtxGridComponent;\n\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = true;\n  columnMovable = true;\n  columnHideableChecked = 'show';\n\n  closeMenu() {\n    this.grid.columnMenu.menuTrigger.closeMenu();\n  }\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},"6RYy":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', description: 'Info about the name' },\n    { header: 'Weight', field: 'weight', description: 'Info about the weight' },\n    { header: 'Gender', field: 'gender', description: 'Info about the gender' },\n    { header: 'Mobile', field: 'mobile', description: 'Info about the mobile' },\n    { header: 'City', field: 'city', description: 'Info about the city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},"6aqL":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"6jbb":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"72YM":function(s,n,a){"use strict";a.r(n),n.default='<mat-checkbox [(ngModel)]="isLoading">Loading</mat-checkbox>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [loading]="isLoading">\n</mtx-grid>\n'},"7lBN":function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('statusTpl', { static: true }) statusTpl: TemplateRef<any>;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    this.columns = [\n      { header: 'Name', field: 'name' },\n      { header: 'Weight', field: 'weight' },\n      { header: 'Gender', field: 'gender' },\n      { header: 'Mobile', field: 'mobile' },\n      { header: 'City', field: 'city' },\n      { header: 'Status', field: 'status', cellTemplate: this.statusTpl },\n    ];\n  }\n}\n"},"7rb/":function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowSelectable">Row selectable</mat-checkbox>\n  <mat-checkbox [(ngModel)]="hideRowSelectionCheckbox">Hide checkbox</mat-checkbox>\n  <mat-radio-group [(ngModel)]="multiSelectable">\n    <mat-radio-button [value]="false">Single</mat-radio-button>\n    <mat-radio-button [value]="true">Multiple</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [multiSelectable]="multiSelectable"\n          [hideRowSelectionCheckbox]="hideRowSelectionCheckbox"\n          [rowSelectable]="rowSelectable"\n          [rowSelected]="rowSelected"\n          [rowSelectionFormatter]="rowSelectionFormatter"\n          (rowSelectionChange)="log($event)"\n          (cellSelectionChange)="log($event)">\n</mtx-grid>\n'},"8I2S":function(s,n,a){"use strict";a.r(n),n.default='{\n  "name": "Name",\n  "weight": "Weight",\n  "gender": "Gender",\n  "mobile": "Mobile",\n  "city": "City",\n  "operation": "Operation",\n  "delete": "Delete",\n  "confirm_delete": "Confirm delete?",\n  "close": "CLOSE",\n  "ok": "OK"\n}\n'},"8PZw":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">columnResizable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"9I0R":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = true;\n}\n"},AIVb:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;number&#x27;</span>,\n      <span class="hljs-attr">typeParameter</span>: {\n        <span class="hljs-attr">digitsInfo</span>: <span class="hljs-string">&#x27;1.2-2&#x27;</span>,\n      },\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Date&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;date&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;date&#x27;</span>,\n      <span class="hljs-attr">typeParameter</span>: {\n        <span class="hljs-attr">format</span>: <span class="hljs-string">&#x27;yyyy-MM-dd&#x27;</span>,\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  <span class="hljs-function"><span class="hljs-title">trackByName</span>(<span class="hljs-params">index: <span class="hljs-built_in">number</span>, item: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-keyword">return</span> item.name;\n  }\n}\n'},BK8i:function(s,n){s.exports=':host ::ng-deep .label {\n  padding: <span class="hljs-number">5px</span> <span class="hljs-number">10px</span>;\n  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">999px</span>;\n  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ffb74d</span>;\n}\n'},BgkU:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">sortable</span>: <span class="hljs-literal">false</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>,\n      <span class="hljs-attr">sortable</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">sortProp</span>: {\n        <span class="hljs-attr">arrowPosition</span>: <span class="hljs-string">&#x27;before&#x27;</span>,\n        <span class="hljs-attr">disableClear</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">start</span>: <span class="hljs-string">&#x27;desc&#x27;</span>,\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  <span class="hljs-function"><span class="hljs-title">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},Bgtx:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">rowClassFormatter</span>]=<span class="hljs-string">&quot;rowClassFormatter&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"C/Yy":function(s,n,a){"use strict";a.r(n),n.default=":host ::ng-deep .mtx-grid {\n  .success {\n    background-color: #d1e7dd;\n  }\n\n  .danger {\n    background-color: #f8d7da;\n  }\n\n  .warning {\n    background-color: #fff3cd;\n  }\n}\n"},CCqr:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">showColumnMenuButton</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">toolbarTemplate</span>]=<span class="hljs-string">&quot;toolbarTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">toolbarTpl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Search&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},"CZT/":function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n\n.mat-radio-button {\n  margin: 0 4px;\n}\n\nlabel {\n  vertical-align: middle;\n}\n"},Ce0D:function(s,n,a){"use strict";a.r(n),a.d(n,"TranslateHttpLoaderFactory",function(){return ls}),a.d(n,"DataGridOverviewComponent",function(){return es}),a.d(n,"DataGridApiComponent",function(){return ps}),a.d(n,"DataGridModule",function(){return rs});var t=a("tyNb"),l=a("OlrJ"),e=a("mqiu"),p=a("tk/3"),r=a("sYmb");const o=[{position:1,name:"Boron",tag:[{color:"red",value:[1,2]}],weight:10.811,symbol:"B",gender:"male",mobile:"13198765432",tele:"567891234",city:"Berlin",address:"Bernauer Str.111,13355",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Boron@gmail.com",status:!1,cost:4},{position:2,name:"Helium",tag:[{color:"blue",value:[3,4]}],weight:8.0026,symbol:"He",gender:"female",mobile:"13034676675",tele:"80675432",city:"Shanghai",address:"88 Songshan Road",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Helium@gmail.com",status:!0,cost:5},{position:3,name:"Nitrogen",tag:[{color:"yellow",value:[5,6]}],weight:14.0067,symbol:"N",gender:"male",mobile:"15811112222",tele:"345678912",city:"Sydney",address:"Circular Quay, Sydney NSW 2000",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Nitrogen@gmail.com",status:!0,cost:2}];var c=a("fXoL"),i=a("Ik6R");const h={title:"Basic",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight",type:"number",typeParameter:{digitsInfo:"1.2-2"}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Date",field:"date",type:"date",typeParameter:{format:"yyyy-MM-dd"}}],this.list=o}trackByName(s,n){return n.name}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","trackBy"]],template:function(s,n){1&s&&c.Pb(0,"mtx-grid",0),2&s&&c.oc("data",n.list)("columns",n.columns)("trackBy",n.trackByName)},directives:[i.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("jIT5"),filecontent:a("aPd/")},{file:"app.component.ts",content:a("AIVb"),filecontent:a("QTPJ")},{file:"app.component.scss",content:a("pcAO"),filecontent:a("NllP")},{file:"data.ts",content:a("2i9Y"),filecontent:a("KQ1H")}]};var d=a("bSwM"),m=a("3Pt+");const j={title:"Loading status",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=o,this.isLoading=!0}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","loading"]],template:function(s,n){1&s&&(c.Ub(0,"mat-checkbox",0),c.cc("ngModelChange",function(s){return n.isLoading=s}),c.Lc(1,"Loading"),c.Tb(),c.Pb(2,"mtx-grid",1)),2&s&&(c.oc("ngModel",n.isLoading),c.Cb(2),c.oc("data",n.list)("columns",n.columns)("loading",n.isLoading))},directives:[d.a,m.k,m.m,i.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("xzj5"),filecontent:a("72YM")},{file:"app.component.ts",content:a("yBaH"),filecontent:a("9I0R")},{file:"app.component.scss",content:a("VvAg"),filecontent:a("2sCj")}]},g={title:"Hide pagination",description:"\n  <p>If you hide the pagination, you should set <code>pageOnFront</code> false to show all the data.\n  </p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=o}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:1,vars:4,consts:[[3,"data","columns","pageOnFront","showPaginator"]],template:function(s,n){1&s&&c.Pb(0,"mtx-grid",0),2&s&&c.oc("data",n.list)("columns",n.columns)("pageOnFront",!1)("showPaginator",!1)},directives:[i.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("FF06"),filecontent:a("QROt")},{file:"app.component.ts",content:a("gWYb"),filecontent:a("b2mg")},{file:"app.component.scss",content:a("QkYT"),filecontent:a("ECYG")}]},u={title:"Sortable",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",sortable:!0},{header:"Weight",field:"weight",sortable:!0},{header:"Gender",field:"gender",sortable:!0},{header:"Mobile",field:"mobile",sortable:!1},{header:"City",field:"city",sortable:!0,sortProp:{arrowPosition:"before",disableClear:!0,start:"desc"}}],this.list=o}log(s){console.log(s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[["sortOnFront","true","sortActive","name","sortDirection","asc","sortDisableClear","true","sortDisabled","false","sortStart","asc",3,"data","columns","sortChange"]],template:function(s,n){1&s&&(c.Ub(0,"mtx-grid",0),c.cc("sortChange",function(s){return n.log(s)}),c.Tb()),2&s&&c.oc("data",n.list)("columns",n.columns)},directives:[i.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("OIk0"),filecontent:a("jyhE")},{file:"app.component.ts",content:a("BgkU"),filecontent:a("y6Rw")},{file:"app.component.scss",content:a("UpgG"),filecontent:a("WigF")}]};var x=a("QibW");const f={title:"Row selectable",description:"\n  <p>If you choose multiple option, you can press <kbd>ctrl</kbd>/<kbd>command</kbd> +\n  click or select checkboxs to choose multiple row.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=o,this.multiSelectable=!0,this.hideRowSelectionCheckbox=!1,this.rowSelectable=!0,this.rowSelected=o.slice(2,3),this.rowSelectionFormatter={disabled:s=>"Boron"===s.name,hideCheckbox:s=>"John"===s.name}}log(s){console.log(s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:11,vars:12,consts:[[3,"ngModel","ngModelChange"],[3,"value"],[3,"data","columns","multiSelectable","hideRowSelectionCheckbox","rowSelectable","rowSelected","rowSelectionFormatter","rowSelectionChange","cellSelectionChange"]],template:function(s,n){1&s&&(c.Ub(0,"div"),c.Ub(1,"mat-checkbox",0),c.cc("ngModelChange",function(s){return n.rowSelectable=s}),c.Lc(2,"Row selectable"),c.Tb(),c.Ub(3,"mat-checkbox",0),c.cc("ngModelChange",function(s){return n.hideRowSelectionCheckbox=s}),c.Lc(4,"Hide checkbox"),c.Tb(),c.Ub(5,"mat-radio-group",0),c.cc("ngModelChange",function(s){return n.multiSelectable=s}),c.Ub(6,"mat-radio-button",1),c.Lc(7,"Single"),c.Tb(),c.Ub(8,"mat-radio-button",1),c.Lc(9,"Multiple"),c.Tb(),c.Tb(),c.Tb(),c.Ub(10,"mtx-grid",2),c.cc("rowSelectionChange",function(s){return n.log(s)})("cellSelectionChange",function(s){return n.log(s)}),c.Tb()),2&s&&(c.Cb(1),c.oc("ngModel",n.rowSelectable),c.Cb(2),c.oc("ngModel",n.hideRowSelectionCheckbox),c.Cb(2),c.oc("ngModel",n.multiSelectable),c.Cb(1),c.oc("value",!1),c.Cb(2),c.oc("value",!0),c.Cb(2),c.oc("data",n.list)("columns",n.columns)("multiSelectable",n.multiSelectable)("hideRowSelectionCheckbox",n.hideRowSelectionCheckbox)("rowSelectable",n.rowSelectable)("rowSelected",n.rowSelected)("rowSelectionFormatter",n.rowSelectionFormatter))},directives:[d.a,m.k,m.m,x.b,x.a,i.a],styles:[".mat-checkbox[_ngcontent-%COMP%], .mat-radio-button[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("G6KT"),filecontent:a("7rb/")},{file:"app.component.ts",content:a("F+He"),filecontent:a("fmkG")},{file:"app.component.scss",content:a("YvJB"),filecontent:a("egaG")}]};function b(s,n){1&s&&c.Lc(0),2&s&&c.Nc(" ",n.$implicit.name,"\n")}const y={title:"Expandable row",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",showExpand:!0},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=o}log(s){console.log(s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"data","columns","expandable","expansionTemplate","expansionChange"],["expansionTpl",""]],template:function(s,n){if(1&s&&(c.Ub(0,"mtx-grid",0),c.cc("expansionChange",function(s){return n.log(s)}),c.Tb(),c.Jc(1,b,1,1,"ng-template",null,1,c.Kc)),2&s){const s=c.xc(2);c.oc("data",n.list)("columns",n.columns)("expandable",!0)("expansionTemplate",s)}},directives:[i.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("nx1F"),filecontent:a("XJC6")},{file:"app.component.ts",content:a("L1O5"),filecontent:a("FsXq")},{file:"app.component.scss",content:a("KPt5"),filecontent:a("mnPd")}]},w=["grid"];function C(s,n){if(1&s){const s=c.Vb();c.Ub(0,"button"),c.Lc(1,"Save"),c.Tb(),c.Ub(2,"button",6),c.cc("click",function(){return c.Ac(s),c.gc().closeMenu()}),c.Lc(3,"Close"),c.Tb()}}const k={title:"Column hiding & moving",description:"\n  <p>Click the <kbd>Column Shown</kbd> button, you can select or drag the columns.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=o,this.columnHideable=!0,this.columnMovable=!0,this.columnHideableChecked="show"}closeMenu(){this.grid.columnMenu.menuTrigger.closeMenu()}log(s){console.log(s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],viewQuery:function(s,n){if(1&s&&c.Oc(w,1),2&s){let s;c.wc(s=c.dc())&&(n.grid=s.first)}},decls:16,vars:14,consts:[[3,"ngModel","ngModelChange"],["value","show"],["value","hide"],[3,"data","columns","showToolbar","toolbarTitle","columnHideable","columnHideableChecked","columnMovable","showColumnMenuHeader","columnMenuHeaderText","showColumnMenuFooter","columnMenuFooterTemplate","columnChange"],["grid",""],["menuFooter",""],[3,"click"]],template:function(s,n){if(1&s&&(c.Ub(0,"div"),c.Ub(1,"mat-checkbox",0),c.cc("ngModelChange",function(s){return n.columnHideable=s}),c.Lc(2,"Column Hiding"),c.Tb(),c.Ub(3,"mat-checkbox",0),c.cc("ngModelChange",function(s){return n.columnMovable=s}),c.Lc(4,"Column Moving"),c.Tb(),c.Ub(5,"label"),c.Lc(6,"columnHideableChecked:"),c.Tb(),c.Ub(7,"mat-radio-group",0),c.cc("ngModelChange",function(s){return n.columnHideableChecked=s}),c.Ub(8,"mat-radio-button",1),c.Lc(9,"show"),c.Tb(),c.Ub(10,"mat-radio-button",2),c.Lc(11,"hide"),c.Tb(),c.Tb(),c.Tb(),c.Ub(12,"mtx-grid",3,4),c.cc("columnChange",function(s){return n.log(s)}),c.Tb(),c.Jc(14,C,4,0,"ng-template",null,5,c.Kc)),2&s){const s=c.xc(15);c.Cb(1),c.oc("ngModel",n.columnHideable),c.Cb(2),c.oc("ngModel",n.columnMovable),c.Cb(4),c.oc("ngModel",n.columnHideableChecked),c.Cb(5),c.oc("data",n.list)("columns",n.columns)("showToolbar",!0)("toolbarTitle","Data Grid")("columnHideable",n.columnHideable)("columnHideableChecked",n.columnHideableChecked)("columnMovable",n.columnMovable)("showColumnMenuHeader",!0)("columnMenuHeaderText","Title")("showColumnMenuFooter",!0)("columnMenuFooterTemplate",s)}},directives:[d.a,m.k,m.m,x.b,x.a,i.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}.mat-radio-button[_ngcontent-%COMP%]{margin:0 4px}label[_ngcontent-%COMP%]{vertical-align:middle}"]}),s})(),files:[{file:"app.component.html",content:a("Ib9s"),filecontent:a("hM8i")},{file:"app.component.ts",content:a("G3Z9"),filecontent:a("54mp")},{file:"app.component.scss",content:a("ZTo0"),filecontent:a("CZT/")}]},M={title:"Column pinnable",component:(()=>{class s{constructor(){this.columns=[{header:"Position",field:"position",width:"200px"},{header:"Name",field:"name",width:"200px",pinned:"left"},{header:"tags",field:"tag.0.value",width:"200px"},{header:"Weight",field:"weight",width:"200px",pinned:"left"},{header:"Symbol",field:"symbol",width:"200px"},{header:"Gender",field:"gender",width:"200px"},{header:"Mobile",field:"mobile",width:"200px"},{header:"Tele",field:"tele",width:"200px"},{header:"City",field:"city",width:"200px"},{header:"Address",field:"address",width:"200px"},{header:"Date",field:"date",width:"200px"},{header:"Website",field:"website",width:"200px"},{header:"Company",field:"company",width:"200px"},{header:"Email",field:"email",width:"200px",pinned:"right"},{header:"Status",field:"status",type:"boolean",width:"200px"}],this.list=o}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&c.Pb(0,"mtx-grid",0),2&s&&c.oc("data",n.list)("columns",n.columns)},directives:[i.a],styles:[""]}),s})(),description:"\n  <p>The <code>name</code> and <code>weight</code> column pinned left, the <code>email</code> column\n  pinned right. Scroll the columns to test.</p>\n  ",files:[{file:"app.component.html",content:a("+lZz"),filecontent:a("OuUm")},{file:"app.component.ts",content:a("l3uc"),filecontent:a("MQql")},{file:"app.component.scss",content:a("3cIJ"),filecontent:a("f6e7")}]},q={title:"Hover & striped",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=o,this.rowHover=!0,this.rowStriped=!1}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:6,vars:7,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","rowHover","rowStriped","rowSelectable"]],template:function(s,n){1&s&&(c.Ub(0,"div"),c.Ub(1,"mat-checkbox",0),c.cc("ngModelChange",function(s){return n.rowHover=s}),c.Lc(2,"Hover"),c.Tb(),c.Ub(3,"mat-checkbox",0),c.cc("ngModelChange",function(s){return n.rowStriped=s}),c.Lc(4,"Striped"),c.Tb(),c.Tb(),c.Pb(5,"mtx-grid",1)),2&s&&(c.Cb(1),c.oc("ngModel",n.rowHover),c.Cb(2),c.oc("ngModel",n.rowStriped),c.Cb(2),c.oc("data",n.list)("columns",n.columns)("rowHover",n.rowHover)("rowStriped",n.rowStriped)("rowSelectable",!0))},directives:[d.a,m.k,m.m,i.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("glgV"),filecontent:a("ln4j")},{file:"app.component.ts",content:a("UiE9"),filecontent:a("H7+I")},{file:"app.component.scss",content:a("KgKb"),filecontent:a("z6FG")}]},A={title:"Row with buttons",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Operation",field:"operation",width:"160px",pinned:"right",right:"0px",type:"button",buttons:[{type:"icon",text:"copy",icon:"file_copy",tooltip:"copy",disabled:!0,click:()=>{alert("copy")}},{type:"icon",text:"edit",icon:"edit",tooltip:"Edit",click:()=>{alert("edit")}},{type:"icon",text:"delete",icon:"delete",tooltip:"Delete",color:"warn",pop:!0,popTitle:"Confirm delete?",click:()=>{alert("delete")}}]}],this.list=o}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&c.Pb(0,"mtx-grid",0),2&s&&c.oc("data",n.list)("columns",n.columns)},directives:[i.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("RkN3"),filecontent:a("cqDp")},{file:"app.component.ts",content:a("q3F9"),filecontent:a("Xtnc")},{file:"app.component.scss",content:a("6aqL"),filecontent:a("ViVp")}]};var T=a("1jcm");const v=["statusTpl"];function S(s,n){1&s&&(c.Ub(0,"mat-slide-toggle",2),c.Lc(1,"Slide me!"),c.Tb()),2&s&&c.oc("checked",n.$implicit.status)}const E={title:"Custom cell template",description:"\n  <p>The status column are custom cells.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[],this.list=o}ngOnInit(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Status",field:"status",cellTemplate:this.statusTpl}]}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],viewQuery:function(s,n){if(1&s&&c.Oc(v,3),2&s){let s;c.wc(s=c.dc())&&(n.statusTpl=s.first)}},decls:3,vars:2,consts:[[3,"data","columns"],["statusTpl",""],[3,"checked"]],template:function(s,n){1&s&&(c.Pb(0,"mtx-grid",0),c.Jc(1,S,2,1,"ng-template",null,1,c.Kc)),2&s&&c.oc("data",n.list)("columns",n.columns)},directives:[i.a,T.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("zJDa"),filecontent:a("Gph4")},{file:"app.component.ts",content:a("Iomd"),filecontent:a("7lBN")},{file:"app.component.scss",content:a("FAaE"),filecontent:a("dp2V")}]};var _=a("bTqV");function G(s,n){if(1&s&&(c.Ub(0,"button",3),c.Lc(1),c.Tb()),2&s){const s=n.$implicit;c.Cb(1),c.Mc(s.mobile)}}function P(s,n){if(1&s&&(c.Ub(0,"button",4),c.Lc(1),c.Tb()),2&s){const s=n.$implicit;c.Cb(1),c.Mc(s.city)}}const L=function(s,n){return{mobile:s,city:n}},D={title:"Custom cell template 2",description:'\n  <p>There has another easiest way to custom cells. You can use property\n  <code>[cellTemplate]="{ mobile: mobileTpl, city: cityTpl }"</code>,\n  the key of cellTemplate is the column field.</p>\n  ',component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=o}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:5,vars:6,consts:[[3,"data","columns","cellTemplate"],["mobileTpl",""],["cityTpl",""],["mat-raised-button","","color","accent"],["mat-raised-button","","color","primary"]],template:function(s,n){if(1&s&&(c.Pb(0,"mtx-grid",0),c.Jc(1,G,2,1,"ng-template",null,1,c.Kc),c.Jc(3,P,2,1,"ng-template",null,2,c.Kc)),2&s){const s=c.xc(2),a=c.xc(4);c.oc("data",n.list)("columns",n.columns)("cellTemplate",c.sc(3,L,s,a))}},directives:[i.a,_.b],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("zncV"),filecontent:a("X8E8")},{file:"app.component.ts",content:a("hipC"),filecontent:a("0kP5")},{file:"app.component.scss",content:a("VwFq"),filecontent:a("NmvF")}]},U={title:"Data formatting",description:"\n  <p>The <code>name</code> field use a formatter.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",formatter:s=>`<span class="label">${s.name}</span>`},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=o}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&c.Pb(0,"mtx-grid",0),2&s&&c.oc("data",n.list)("columns",n.columns)},directives:[i.a],styles:["[_nghost-%COMP%]     .label{padding:5px 10px;border-radius:999px;background-color:#ffb74d}"]}),s})(),files:[{file:"app.component.html",content:a("IEmD"),filecontent:a("5++J")},{file:"app.component.ts",content:a("kybk"),filecontent:a("47AF")},{file:"app.component.scss",content:a("BK8i"),filecontent:a("2W1W")}]},N={title:"No result",description:'\n  <p>You can use <code>[noResultTemplate]="noResultTpl"</code> to customize it.</p>\n  ',component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=[]}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&c.Pb(0,"mtx-grid",0),2&s&&c.oc("data",n.list)("columns",n.columns)},directives:[i.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("YMBW"),filecontent:a("VbUY")},{file:"app.component.ts",content:a("fcqy"),filecontent:a("mxdz")},{file:"app.component.scss",content:a("Jq+M"),filecontent:a("2Mmh")}]};var I=a("NFeN"),H=a("Qu3c");function W(s,n){if(1&s&&(c.Lc(0),c.Ub(1,"mat-icon",2),c.Lc(2,"info"),c.Tb()),2&s){const s=n.$implicit;c.Nc(" ",s.header," "),c.Cb(1),c.oc("matTooltip",s.description)}}const F={title:"Custom header template",description:"\n  <p>If you just want to append something to header, you can try\n  <code>[headerExtraTemplate]</code> instead.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",description:"Info about the name"},{header:"Weight",field:"weight",description:"Info about the weight"},{header:"Gender",field:"gender",description:"Info about the gender"},{header:"Mobile",field:"mobile",description:"Info about the mobile"},{header:"City",field:"city",description:"Info about the city"}],this.list=o}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:3,vars:3,consts:[[3,"data","columns","headerTemplate"],["headerTpl",""],[3,"matTooltip"]],template:function(s,n){if(1&s&&(c.Pb(0,"mtx-grid",0),c.Jc(1,W,3,2,"ng-template",null,1,c.Kc)),2&s){const s=c.xc(2);c.oc("data",n.list)("columns",n.columns)("headerTemplate",s)}},directives:[i.a,I.a,H.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("iWWZ"),filecontent:a("DFLv")},{file:"app.component.ts",content:a("2t/w"),filecontent:a("6RYy")},{file:"app.component.scss",content:a("uDgr"),filecontent:a("IQjw")}]};var O=a("ofXK");function X(s,n){if(1&s&&(c.Ub(0,"div"),c.Lc(1),c.hc(2,"currency"),c.Tb()),2&s){const s=n.$implicit,a=c.gc();c.Cb(1),c.Mc(c.ic(2,1,a.getTotalCost(s)))}}const R=function(s){return{cost:s}},B={title:"Custom footer template",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:s=>Math.max(...s)},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=o}getTotalCost(s){return s.reduce((s,n)=>s+n,0)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:3,vars:6,consts:[[3,"data","columns","showSummary","summaryTemplate"],["footerTpl",""]],template:function(s,n){if(1&s&&(c.Pb(0,"mtx-grid",0),c.Jc(1,X,3,3,"ng-template",null,1,c.Kc)),2&s){const s=c.xc(2);c.oc("data",n.list)("columns",n.columns)("showSummary",!0)("summaryTemplate",c.rc(4,R,s))}},directives:[i.a],pipes:[O.d],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("Dcr1"),filecontent:a("ZEVS")},{file:"app.component.ts",content:a("oaUZ"),filecontent:a("ONhJ")},{file:"app.component.scss",content:a("VKBB"),filecontent:a("P3Cp")}]};function z(s,n){1&s&&c.Pb(0,"input",2)}const J={title:"Custom toolbar template",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:s=>Math.max(...s)},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=o}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:3,vars:5,consts:[[3,"data","columns","showToolbar","showColumnMenuButton","toolbarTemplate"],["toolbarTpl",""],["placeholder","Search"]],template:function(s,n){if(1&s&&(c.Pb(0,"mtx-grid",0),c.Jc(1,z,1,0,"ng-template",null,1,c.Kc)),2&s){const s=c.xc(2);c.oc("data",n.list)("columns",n.columns)("showToolbar",!0)("showColumnMenuButton",!1)("toolbarTemplate",s)}},directives:[i.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("CCqr"),filecontent:a("rxkg")},{file:"app.component.ts",content:a("JWQU"),filecontent:a("Tlsu")},{file:"app.component.scss",content:a("+8FP"),filecontent:a("mByh")}]};function V(s,n){if(1&s&&(c.Ub(0,"mat-radio-button",3),c.Lc(1),c.Tb()),2&s){const s=n.$implicit;c.oc("value",s.value),c.Cb(1),c.Nc(" ",s.label," ")}}const $={title:"I18n ngx-translate",component:(()=>{class s{constructor(s){this.translate=s,this.columns=[{header:this.translate.stream("name"),field:"name"},{header:this.translate.stream("weight"),field:"weight"},{header:this.translate.stream("gender"),field:"gender"},{header:this.translate.stream("mobile"),field:"mobile"},{header:this.translate.stream("city"),field:"city"},{header:this.translate.stream("operation"),field:"operation",width:"40px",pinned:"right",right:"0px",type:"button",buttons:[{type:"basic",text:this.translate.stream("delete"),icon:"delete",tooltip:this.translate.stream("delete"),color:"warn",pop:!0,popTitle:this.translate.stream("confirm_delete"),popCloseText:this.translate.stream("close"),popOkText:this.translate.stream("ok"),click:()=>{alert("delete")}}]}],this.list=o,this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",s.addLangs(this.langs.map(s=>s.value)),s.setDefaultLang(this.defaultlang)}}return s.\u0275fac=function(n){return new(n||s)(c.Ob(r.c))},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:3,vars:7,consts:[[3,"ngModel","ngModelChange","change"],[3,"value",4,"ngFor","ngForOf"],[3,"data","columns","showToolbar","columnHideable","columnMovable"],[3,"value"]],template:function(s,n){1&s&&(c.Ub(0,"mat-radio-group",0),c.cc("ngModelChange",function(s){return n.defaultlang=s})("change",function(s){return n.translate.use(s.value)}),c.Jc(1,V,2,2,"mat-radio-button",1),c.Tb(),c.Pb(2,"mtx-grid",2)),2&s&&(c.oc("ngModel",n.defaultlang),c.Cb(1),c.oc("ngForOf",n.langs),c.Cb(1),c.oc("data",n.list)("columns",n.columns)("showToolbar",!0)("columnHideable",!0)("columnMovable",!0))},directives:[x.b,m.k,m.m,O.n,i.a,x.a],styles:[".mat-radio-button[_ngcontent-%COMP%]{margin:0 1rem 1rem 0}"]}),s})(),files:[{file:"app.component.html",content:a("lRdh"),filecontent:a("nHlL")},{file:"app.component.ts",content:a("ssdK"),filecontent:a("M41J")},{file:"app.component.scss",content:a("DOz5"),filecontent:a("zwIg")},{file:"assets/zh-CN.json",content:a("Vlqv"),filecontent:a("3d+Z")},{file:"assets/en-US.json",content:a("vQaw"),filecontent:a("8I2S")}]},K=function(){return[5,10,20]},Y={title:"Remote Data",component:(()=>{class s{constructor(s){this.http=s,this.columns=[{header:"Name",field:"name",formatter:s=>`<a href="${s.html_url}" target="_blank">${s.name}</a>`},{header:"Owner",field:"owner.login"},{header:"Owner Avatar",field:"owner.avatar_url",type:"image"},{header:"Description",field:"description",width:"300px"},{header:"Stars",field:"stargazers_count"},{header:"Forks",field:"forks_count"},{header:"Score",field:"score"},{header:"Issues",field:"open_issues"},{header:"Language",field:"language"},{header:"License",field:"license.name"},{header:"Home Page",field:"homepage",type:"link"},{header:"Is forked",field:"fork",type:"boolean"},{header:"Archived",field:"archived",type:"tag",tag:{true:{text:"Yes",color:"red-100"},false:{text:"No",color:"green-100"}}},{header:"Created Date",field:"created_at"},{header:"Updated Date",field:"updated_at"}],this.list=[],this.total=0,this.isLoading=!0,this.query={q:"user:nzbin",page:0,per_page:5}}get params(){const s=Object.assign({},this.query);return s.page+=1,s}ngOnInit(){this.getData()}getData(){this.isLoading=!0,this.http.get("https://api.github.com/search/repositories",{params:this.params}).subscribe(s=>{this.list=s.items,this.total=s.total_count,this.isLoading=!1},()=>{this.isLoading=!1},()=>{this.isLoading=!1})}getNextPage(s){this.query.page=s.pageIndex,this.query.per_page=s.pageSize,this.getData()}refresh(){this.getData()}}return s.\u0275fac=function(n){return new(n||s)(c.Ob(p.b))},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:3,vars:9,consts:[["mat-raised-button","","color","primary",3,"click"],[3,"data","columns","length","loading","pageOnFront","pageIndex","pageSize","pageSizeOptions","page"]],template:function(s,n){1&s&&(c.Ub(0,"button",0),c.cc("click",function(){return n.refresh()}),c.Lc(1,"Refresh"),c.Tb(),c.Ub(2,"mtx-grid",1),c.cc("page",function(s){return n.getNextPage(s)}),c.Tb()),2&s&&(c.Cb(2),c.oc("data",n.list)("columns",n.columns)("length",n.total)("loading",n.isLoading)("pageOnFront",!1)("pageIndex",n.query.page)("pageSize",n.query.per_page)("pageSizeOptions",c.qc(8,K)))},directives:[_.b,i.a],styles:[".mat-raised-button[_ngcontent-%COMP%]{margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("vWUE"),filecontent:a("U4+i")},{file:"app.component.ts",content:a("kbSb"),filecontent:a("4nNR")},{file:"app.component.scss",content:a("dn7d"),filecontent:a("07G0")}]},Q={title:"Column resize",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",minWidth:200,maxWidth:300},{header:"Weight",field:"weight",minWidth:200},{header:"Gender",field:"gender",width:"100px",resizable:!1},{header:"Mobile",field:"mobile",maxWidth:200},{header:"City",field:"city",minWidth:200}],this.list=o}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","columnResizable"]],template:function(s,n){1&s&&c.Pb(0,"mtx-grid",0),2&s&&c.oc("data",n.list)("columns",n.columns)("columnResizable",!0)},directives:[i.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("8PZw"),filecontent:a("FT7u")},{file:"app.component.ts",content:a("TMKL"),filecontent:a("H0HN")},{file:"app.component.scss",content:a("d28E"),filecontent:a("6jbb")}]},Z={title:"Custom class for row and column",component:(()=>{class s{constructor(){this.rowClassFormatter={success:(s,n)=>"Boron"===s.name,danger:(s,n)=>1===n},this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile",class:"warning"},{header:"City",field:"city"}],this.list=o}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c.Ib({type:s,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","rowClassFormatter"]],template:function(s,n){1&s&&c.Pb(0,"mtx-grid",0),2&s&&c.oc("data",n.list)("columns",n.columns)("rowClassFormatter",n.rowClassFormatter)},directives:[i.a],styles:["[_nghost-%COMP%]     .mtx-grid .success{background-color:#d1e7dd}[_nghost-%COMP%]     .mtx-grid .danger{background-color:#f8d7da}[_nghost-%COMP%]     .mtx-grid .warning{background-color:#fff3cd}"]}),s})(),files:[{file:"app.component.html",content:a("Bgtx"),filecontent:a("HTPO")},{file:"app.component.ts",content:a("Zw9m"),filecontent:a("PwAR")},{file:"app.component.scss",content:a("QfJJ"),filecontent:a("C/Yy")}]};var ss=a("FAv5"),ns=a("/8KD");function as(s,n){if(1&s&&(c.Sb(0),c.Pb(1,"doc-heading",3),c.Pb(2,"example-viewer",4),c.Rb()),2&s){const s=n.$implicit;c.Cb(1),c.oc("text",s.title),c.Cb(1),c.oc("exampleData",s)}}function ts(s,n){if(1&s&&(c.Sb(0),c.Jc(1,as,3,2,"ng-container",2),c.Rb()),2&s){const s=n.ngIf;c.Cb(1),c.oc("ngForOf",s.examples)}}function ls(s){return new e.a(s,"assets/i18n/data-grid/","_json")}let es=(()=>{class s{constructor(s){this.route=s}}return s.\u0275fac=function(n){return new(n||s)(c.Ob(t.a))},s.\u0275cmp=c.Ib({type:s,selectors:[["app-data-grid-overview"]],decls:10,vars:3,consts:[["mat-raised-button","","color","accent","href","https://nzbin.gitbook.io/material-extensions/data-grid","target","_blank"],[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"text"],[3,"exampleData"]],template:function(s,n){1&s&&(c.Ub(0,"p"),c.Lc(1," The "),c.Ub(2,"code"),c.Lc(3,"mtx-grid"),c.Tb(),c.Lc(4," is an powerful material table component. It supports cell selectable, row selectable, multiple row selectable, row expandable, column hiding, column moving and so on.\n"),c.Tb(),c.Ub(5,"p"),c.Ub(6,"a",0),c.Lc(7,"API Reference"),c.Tb(),c.Tb(),c.Jc(8,ts,2,1,"ng-container",1),c.hc(9,"async")),2&s&&(c.Cb(8),c.oc("ngIf",c.ic(9,1,n.route.data)))},directives:[_.a,O.o,O.n,ss.a,ns.a],pipes:[O.b],encapsulation:2}),s})(),ps=(()=>{class s{constructor(s){this.route=s}}return s.\u0275fac=function(n){return new(n||s)(c.Ob(t.a))},s.\u0275cmp=c.Ib({type:s,selectors:[["app-data-grid-api"]],decls:1,vars:0,template:function(s,n){1&s&&c.Lc(0,"Coming soon\n")},encapsulation:2}),s})(),rs=(()=>{class s{}return s.\u0275mod=c.Mb({type:s}),s.\u0275inj=c.Lb({factory:function(n){return new(n||s)},imports:[[l.c,r.b.forRoot({loader:{provide:r.a,useFactory:ls,deps:[p.b]}}),t.j.forChild([{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:es,pathMatch:"full",data:{examples:[h,Q,j,g,u,f,y,k,M,q,A,E,D,U,Z,N,F,B,J,$,Y]}},{path:"api",component:ps,pathMatch:"full"},{path:"**",redirectTo:"overview"}])]]}),s})()},DFLv:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [headerTemplate]="headerTpl">\n</mtx-grid>\n\n<ng-template #headerTpl let-col>\n  {{col.header}} <mat-icon [matTooltip]="col.description">info</mat-icon>\n</ng-template>\n'},DOz5:function(s,n){s.exports='<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">1rem</span> <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},Dcr1:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showSummary</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">summaryTemplate</span>]=<span class="hljs-string">&quot;{&#x27;cost&#x27;: footerTpl}&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">footerTpl</span> <span class="hljs-attr">let-data</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{{getTotalCost(data) | currency}}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},ECYG:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"F+He":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridRowSelectionFormatter } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = <span class="hljs-literal">true</span>;\n  hideRowSelectionCheckbox = <span class="hljs-literal">false</span>;\n  rowSelectable = <span class="hljs-literal">true</span>;\n  rowSelected = EXAMPLE_DATA.slice(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    <span class="hljs-attr">disabled</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    <span class="hljs-attr">hideCheckbox</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">&#x27;John&#x27;</span>,\n  };\n\n  <span class="hljs-function"><span class="hljs-title">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},FAaE:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},FF06:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">showPaginator</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},FT7u:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [columnResizable]="true">\n</mtx-grid>\n'},FsXq:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', showExpand: true },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},G3Z9:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, ViewChild } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">&#x27;grid&#x27;</span>) grid: MtxGridComponent;\n\n  columns: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = <span class="hljs-literal">true</span>;\n  columnMovable = <span class="hljs-literal">true</span>;\n  columnHideableChecked = <span class="hljs-string">&#x27;show&#x27;</span>;\n\n  <span class="hljs-function"><span class="hljs-title">closeMenu</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.grid.columnMenu.menuTrigger.closeMenu();\n  }\n\n  <span class="hljs-function"><span class="hljs-title">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},G6KT:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowSelectable&quot;</span>&gt;</span>Row selectable<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>&gt;</span>Hide checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;multiSelectable&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>Single<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>Multiple<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">multiSelectable</span>]=<span class="hljs-string">&quot;multiSelectable&quot;</span>\n          [<span class="hljs-attr">hideRowSelectionCheckbox</span>]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;rowSelectable&quot;</span>\n          [<span class="hljs-attr">rowSelected</span>]=<span class="hljs-string">&quot;rowSelected&quot;</span>\n          [<span class="hljs-attr">rowSelectionFormatter</span>]=<span class="hljs-string">&quot;rowSelectionFormatter&quot;</span>\n          (<span class="hljs-attr">rowSelectionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>\n          (<span class="hljs-attr">cellSelectionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},Gph4:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n\n<ng-template #statusTpl let-row let-index="index" let-col="colDef">\n  <mat-slide-toggle [checked]="row.status">Slide me!</mat-slide-toggle>\n</ng-template>\n'},H0HN:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      minWidth: 200,\n      maxWidth: 300,\n    },\n    {\n      header: 'Weight',\n      field: 'weight',\n      minWidth: 200,\n    },\n    {\n      header: 'Gender',\n      field: 'gender',\n      width: '100px',\n      resizable: false\n    },\n    {\n      header: 'Mobile',\n      field: 'mobile',\n      maxWidth: 200,\n    },\n    {\n      header: 'City',\n      field: 'city',\n      minWidth: 200,\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},"H7+I":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = true;\n  rowStriped = false;\n}\n"},HTPO:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowClassFormatter]="rowClassFormatter">\n</mtx-grid>\n'},IEmD:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},IQjw:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},Ib9s:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnHideable&quot;</span>&gt;</span>Column Hiding<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnMovable&quot;</span>&gt;</span>Column Moving<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>columnHideableChecked:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnHideableChecked&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span>show<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span>hide<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span> #<span class="hljs-attr">grid</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">toolbarTitle</span>]=<span class="hljs-string">&quot;&#x27;Data Grid&#x27;&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;columnHideable&quot;</span>\n          [<span class="hljs-attr">columnHideableChecked</span>]=<span class="hljs-string">&quot;columnHideableChecked&quot;</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">&quot;columnMovable&quot;</span>\n          (<span class="hljs-attr">columnChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>\n          [<span class="hljs-attr">showColumnMenuHeader</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMenuHeaderText</span>]=<span class="hljs-string">&quot;&#x27;Title&#x27;&quot;</span>\n          [<span class="hljs-attr">showColumnMenuFooter</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMenuFooterTemplate</span>]=<span class="hljs-string">&quot;menuFooter&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">menuFooter</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>Save<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;closeMenu()&quot;</span>&gt;</span>Close<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},Iomd:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit, ViewChild, TemplateRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> <span class="hljs-title">implements</span> <span class="hljs-title">OnInit</span> </span>{\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">&#x27;statusTpl&#x27;</span>, { <span class="hljs-attr">static</span>: <span class="hljs-literal">true</span> }) statusTpl: TemplateRef&lt;<span class="hljs-built_in">any</span>&gt;;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  <span class="hljs-function"><span class="hljs-title">ngOnInit</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.columns = [\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n      { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Status&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-attr">cellTemplate</span>: <span class="hljs-built_in">this</span>.statusTpl },\n    ];\n  }\n}\n'},JWQU:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Cost&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"Jq+M":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},KPt5:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},KQ1H:function(s,n,a){"use strict";a.r(n),n.default="export const EXAMPLE_DATA: any[] = [\n  {\n    position: 1,\n    name: 'Boron',\n    tag: [\n      {\n        color: 'red',\n        value: [1, 2],\n      },\n    ],\n    weight: 10.811,\n    symbol: 'B',\n    gender: 'male',\n    mobile: '13198765432',\n    tele: '567891234',\n    city: 'Berlin',\n    address: 'Bernauer Str.111,13355',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Boron@gmail.com',\n    status: false,\n    cost: 4\n  },\n  {\n    position: 2,\n    name: 'Helium',\n    tag: [\n      {\n        color: 'blue',\n        value: [3, 4],\n      },\n    ],\n    weight: 8.0026,\n    symbol: 'He',\n    gender: 'female',\n    mobile: '13034676675',\n    tele: '80675432',\n    city: 'Shanghai',\n    address: '88 Songshan Road',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Helium@gmail.com',\n    status: true,\n    cost: 5\n  },\n  {\n    position: 3,\n    name: 'Nitrogen',\n    tag: [\n      {\n        color: 'yellow',\n        value: [5, 6],\n      },\n    ],\n    weight: 14.0067,\n    symbol: 'N',\n    gender: 'male',\n    mobile: '15811112222',\n    tele: '345678912',\n    city: 'Sydney',\n    address: 'Circular Quay, Sydney NSW 2000',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Nitrogen@gmail.com',\n    status: true,\n    cost: 2\n  },\n];\n"},KgKb:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},L1O5:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">showExpand</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  <span class="hljs-function"><span class="hljs-title">log</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},M41J:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: this.translate.stream('name'),\n      field: 'name',\n    },\n    {\n      header: this.translate.stream('weight'),\n      field: 'weight',\n    },\n    {\n      header: this.translate.stream('gender'),\n      field: 'gender',\n    },\n    {\n      header: this.translate.stream('mobile'),\n      field: 'mobile',\n    },\n    {\n      header: this.translate.stream('city'),\n      field: 'city',\n    },\n    {\n      header: this.translate.stream('operation'),\n      field: 'operation',\n      width: '40px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'basic',\n          text: this.translate.stream('delete'),\n          icon: 'delete',\n          tooltip: this.translate.stream('delete'),\n          color: 'warn',\n          pop: true,\n          popTitle: this.translate.stream('confirm_delete'),\n          popCloseText: this.translate.stream('close'),\n          popOkText: this.translate.stream('ok'),\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n  defaultlang = 'zh-CN';\n\n  constructor(public translate: TranslateService) {\n    translate.addLangs(this.langs.map(item => item.value));\n    translate.setDefaultLang(this.defaultlang);\n  }\n}\n"},MQql:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Position', field: 'position', width: '200px' },\n    { header: 'Name', field: 'name', width: '200px', pinned: 'left' },\n    { header: 'tags', field: 'tag.0.value', width: '200px' },\n    { header: 'Weight', field: 'weight', width: '200px', pinned: 'left' },\n    { header: 'Symbol', field: 'symbol', width: '200px' },\n    { header: 'Gender', field: 'gender', width: '200px' },\n    { header: 'Mobile', field: 'mobile', width: '200px' },\n    { header: 'Tele', field: 'tele', width: '200px' },\n    { header: 'City', field: 'city', width: '200px' },\n    { header: 'Address', field: 'address', width: '200px' },\n    { header: 'Date', field: 'date', width: '200px' },\n    { header: 'Website', field: 'website', width: '200px' },\n    { header: 'Company', field: 'company', width: '200px' },\n    { header: 'Email', field: 'email', width: '200px', pinned: 'right' },\n    { header: 'Status', field: 'status', type: 'boolean', width: '200px' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},NllP:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},NmvF:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},OIk0:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          <span class="hljs-attr">sortOnFront</span>=<span class="hljs-string">&quot;true&quot;</span>\n          <span class="hljs-attr">sortActive</span>=<span class="hljs-string">&quot;name&quot;</span>\n          <span class="hljs-attr">sortDirection</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          <span class="hljs-attr">sortDisableClear</span>=<span class="hljs-string">&quot;true&quot;</span>\n          <span class="hljs-attr">sortDisabled</span>=<span class="hljs-string">&quot;false&quot;</span>\n          <span class="hljs-attr">sortStart</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          (<span class="hljs-attr">sortChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},ONhJ:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: any) {\n    return data.reduce((acc: any, value: any) => acc + value, 0);\n  }\n}\n"},OuUm:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},P3Cp:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},PwAR:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowClassFormatter } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  rowClassFormatter: MtxGridRowClassFormatter = {\n    success: (data, index) => data.name === 'Boron',\n    danger: (data, index) => index === 1,\n  };\n\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile', class: 'warning' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},QROt:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [pageOnFront]="false"\n          [showPaginator]="false">\n</mtx-grid>\n'},QTPJ:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    {\n      header: 'Weight',\n      field: 'weight',\n      type: 'number',\n      typeParameter: {\n        digitsInfo: '1.2-2',\n      },\n    },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Date',\n      field: 'date',\n      type: 'date',\n      typeParameter: {\n        format: 'yyyy-MM-dd',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  trackByName(index: number, item: any) {\n    return item.name;\n  }\n}\n"},QfJJ:function(s,n){s.exports=':host ::ng-deep .mtx-grid {\n  .success {\n    background-color: <span class="hljs-number">#d1e7dd</span>;\n  }\n\n  <span class="hljs-selector-class">.danger</span> {\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f8d7da</span>;\n  }\n\n  <span class="hljs-selector-class">.warning</span> {\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff3cd</span>;\n  }\n}\n'},QkYT:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},RkN3:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},TMKL:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n      <span class="hljs-attr">maxWidth</span>: <span class="hljs-number">300</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;100px&#x27;</span>,\n      <span class="hljs-attr">resizable</span>: <span class="hljs-literal">false</span>\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n      <span class="hljs-attr">maxWidth</span>: <span class="hljs-number">200</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>,\n      <span class="hljs-attr">minWidth</span>: <span class="hljs-number">200</span>,\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},Tlsu:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},"U4+i":function(s,n,a){"use strict";a.r(n),n.default='<button mat-raised-button color="primary" (click)="refresh()">Refresh</button>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [length]="total"\n          [loading]="isLoading"\n          [pageOnFront]="false"\n          [pageIndex]="query.page"\n          [pageSize]="query.per_page"\n          [pageSizeOptions]="[5,10,20]"\n          (page)="getNextPage($event)">\n</mtx-grid>\n'},UiE9:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = <span class="hljs-literal">true</span>;\n  rowStriped = <span class="hljs-literal">false</span>;\n}\n'},UpgG:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},VKBB:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},VbUY:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},ViVp:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},Vlqv:function(s,n){s.exports='{\n  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;\u59d3\u540d&quot;</span>,\n  <span class="hljs-attr">&quot;weight&quot;</span>: <span class="hljs-string">&quot;\u4f53\u91cd&quot;</span>,\n  <span class="hljs-attr">&quot;gender&quot;</span>: <span class="hljs-string">&quot;\u6027\u522b&quot;</span>,\n  <span class="hljs-attr">&quot;mobile&quot;</span>: <span class="hljs-string">&quot;\u624b\u673a&quot;</span>,\n  <span class="hljs-attr">&quot;city&quot;</span>: <span class="hljs-string">&quot;\u57ce\u5e02&quot;</span>,\n  <span class="hljs-attr">&quot;operation&quot;</span>: <span class="hljs-string">&quot;\u64cd\u4f5c&quot;</span>,\n  <span class="hljs-attr">&quot;delete&quot;</span>: <span class="hljs-string">&quot;\u5220\u9664&quot;</span>,\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span>: <span class="hljs-string">&quot;\u786e\u8ba4\u5220\u9664\uff1f&quot;</span>,\n  <span class="hljs-attr">&quot;close&quot;</span>: <span class="hljs-string">&quot;\u5173\u95ed&quot;</span>,\n  <span class="hljs-attr">&quot;ok&quot;</span>: <span class="hljs-string">&quot;\u786e\u5b9a&quot;</span>\n}\n'},VvAg:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},VwFq:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},WigF:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},X8E8:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [cellTemplate]="{mobile: mobileTpl, city: cityTpl}">\n</mtx-grid>\n\n<ng-template #mobileTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="accent">{{row.mobile}}</button>\n</ng-template>\n\n<ng-template #cityTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="primary">{{row.city}}</button>\n</ng-template>\n'},XJC6:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [expandable]="true"\n          [expansionTemplate]="expansionTpl"\n          (expansionChange)="log($event)">\n</mtx-grid>\n\n<ng-template #expansionTpl let-row>\n  {{row.name}}\n</ng-template>\n'},Xtnc:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Operation',\n      field: 'operation',\n      width: '160px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'icon',\n          text: 'copy',\n          icon: 'file_copy',\n          tooltip: 'copy',\n          disabled: true,\n          click: () => {\n            alert('copy');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'edit',\n          icon: 'edit',\n          tooltip: 'Edit',\n          click: () => {\n            alert('edit');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'delete',\n          icon: 'delete',\n          tooltip: 'Delete',\n          color: 'warn',\n          pop: true,\n          popTitle: 'Confirm delete?',\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},YMBW:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},YvJB:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span>,\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},ZEVS:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showSummary]="true"\n          [summaryTemplate]="{\'cost\': footerTpl}">\n</mtx-grid>\n\n<ng-template #footerTpl let-data>\n  <div>{{getTotalCost(data) | currency}}</div>\n</ng-template>\n'},ZTo0:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">4px</span>;\n}\n\n<span class="hljs-selector-tag">label</span> {\n  <span class="hljs-attribute">vertical-align</span>: middle;\n}\n'},Zw9m:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridRowClassFormatter } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">rowClassFormatter</span>: MtxGridRowClassFormatter = {\n    <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">data, index</span>) =&gt;</span> data.name === <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    <span class="hljs-attr">danger</span>: <span class="hljs-function">(<span class="hljs-params">data, index</span>) =&gt;</span> index === <span class="hljs-number">1</span>,\n  };\n\n  columns: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">class</span>: <span class="hljs-string">&#x27;warning&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"aPd/":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [trackBy]="trackByName">\n</mtx-grid>\n'},b2mg:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},cqDp:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},d28E:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},dn7d:function(s,n){s.exports='<span class="hljs-selector-class">.mat-raised-button</span> {\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},dp2V:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},egaG:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox,\n.mat-radio-button {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},f6e7:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},fcqy:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = [];\n}\n'},fmkG:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowSelectionFormatter } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = true;\n  hideRowSelectionCheckbox = false;\n  rowSelectable = true;\n  rowSelected = EXAMPLE_DATA.slice(2, 3);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: data => data.name === 'Boron',\n    hideCheckbox: data => data.name === 'John',\n  };\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},gWYb:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},glgV:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowHover&quot;</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowStriped&quot;</span>&gt;</span>Striped<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">rowHover</span>]=<span class="hljs-string">&quot;rowHover&quot;</span>\n          [<span class="hljs-attr">rowStriped</span>]=<span class="hljs-string">&quot;rowStriped&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},hM8i:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="columnHideable">Column Hiding</mat-checkbox>\n  <mat-checkbox [(ngModel)]="columnMovable">Column Moving</mat-checkbox>\n\n  <label>columnHideableChecked:</label>\n  <mat-radio-group [(ngModel)]="columnHideableChecked">\n    <mat-radio-button value="show">show</mat-radio-button>\n    <mat-radio-button value="hide">hide</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list" #grid\n          [columns]="columns"\n          [showToolbar]="true"\n          [toolbarTitle]="\'Data Grid\'"\n          [columnHideable]="columnHideable"\n          [columnHideableChecked]="columnHideableChecked"\n          [columnMovable]="columnMovable"\n          (columnChange)="log($event)"\n          [showColumnMenuHeader]="true"\n          [columnMenuHeaderText]="\'Title\'"\n          [showColumnMenuFooter]="true"\n          [columnMenuFooterTemplate]="menuFooter">\n</mtx-grid>\n\n<ng-template #menuFooter>\n  <button>Save</button>\n  <button (click)="closeMenu()">Close</button>\n</ng-template>\n'},hipC:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},iWWZ:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">headerTemplate</span>]=<span class="hljs-string">&quot;headerTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">headerTpl</span> <span class="hljs-attr">let-col</span>&gt;</span>\n  {{col.header}} <span class="hljs-tag">&lt;<span class="hljs-name">mat-icon</span> [<span class="hljs-attr">matTooltip</span>]=<span class="hljs-string">&quot;col.description&quot;</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">mat-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},jIT5:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">trackBy</span>]=<span class="hljs-string">&quot;trackByName&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},jyhE:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          sortOnFront="true"\n          sortActive="name"\n          sortDirection="asc"\n          sortDisableClear="true"\n          sortDisabled="false"\n          sortStart="asc"\n          (sortChange)="log($event)">\n</mtx-grid>\n'},kbSb:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { PageEvent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/paginator&#x27;</span>;\n<span class="hljs-keyword">import</span> { HttpClient } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common/http&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> <span class="hljs-title">implements</span> <span class="hljs-title">OnInit</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">formatter</span>: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;a href=&quot;<span class="hljs-subst">${data.html_url}</span>&quot; target=&quot;_blank&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/a&gt;`</span>,\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Owner&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;owner.login&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Owner Avatar&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;owner.avatar_url&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;image&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Description&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;description&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;300px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Stars&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;stargazers_count&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Forks&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;forks_count&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Score&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;score&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Issues&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;open_issues&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Language&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;language&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;License&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;license.name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Home Page&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;homepage&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;link&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Is forked&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;fork&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Archived&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;archived&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;tag&#x27;</span>,\n      <span class="hljs-attr">tag</span>: {\n        <span class="hljs-attr">true</span>: { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Yes&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red-100&#x27;</span> },\n        <span class="hljs-attr">false</span>: { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;No&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;green-100&#x27;</span> },\n      },\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Created Date&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;created_at&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Updated Date&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;updated_at&#x27;</span> },\n  ];\n  list = [];\n  total = <span class="hljs-number">0</span>;\n  isLoading = <span class="hljs-literal">true</span>;\n\n  query = {\n    <span class="hljs-attr">q</span>: <span class="hljs-string">&#x27;user:nzbin&#x27;</span>,\n    <span class="hljs-attr">page</span>: <span class="hljs-number">0</span>,\n    <span class="hljs-attr">per_page</span>: <span class="hljs-number">5</span>,\n  };\n\n  <span class="hljs-keyword">get</span> <span class="hljs-title">params</span>() {\n    <span class="hljs-keyword">const</span> p = <span class="hljs-built_in">Object</span>.assign({}, <span class="hljs-built_in">this</span>.query);\n    p.page += <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">return</span> p;\n  }\n\n  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> http: HttpClient</span>)</span> {}\n\n  <span class="hljs-function"><span class="hljs-title">ngOnInit</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.getData();\n  }\n\n  <span class="hljs-function"><span class="hljs-title">getData</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">true</span>;\n    <span class="hljs-built_in">this</span>.http\n      .get(<span class="hljs-string">&#x27;https://api.github.com/search/repositories&#x27;</span>, { <span class="hljs-attr">params</span>: <span class="hljs-built_in">this</span>.params <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span> })\n      .subscribe(\n        <span class="hljs-function">(<span class="hljs-params">res: <span class="hljs-built_in">any</span></span>) =&gt;</span> {\n          <span class="hljs-built_in">this</span>.list = res.items;\n          <span class="hljs-built_in">this</span>.total = res.total_count;\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        }\n      );\n  }\n\n  <span class="hljs-function"><span class="hljs-title">getNextPage</span>(<span class="hljs-params">e: PageEvent</span>)</span> {\n    <span class="hljs-built_in">this</span>.query.page = e.pageIndex;\n    <span class="hljs-built_in">this</span>.query.per_page = e.pageSize;\n    <span class="hljs-built_in">this</span>.getData();\n  }\n\n  <span class="hljs-function"><span class="hljs-title">refresh</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.getData();\n  }\n}\n'},kybk:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">formatter</span>: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;span class=&quot;label&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/span&gt;`</span>,\n    },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},l3uc:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Position&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;position&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span>, <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;tags&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;tag.0.value&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span>, <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Symbol&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;symbol&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Tele&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;tele&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Address&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;address&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Date&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;date&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Website&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;website&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Company&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;company&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Email&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;email&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span>, <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;right&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Status&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;200px&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},lRdh:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let lang of langs&quot;</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>\n    {{lang.label}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},ln4j:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowHover">Hover</mat-checkbox>\n  <mat-checkbox [(ngModel)]="rowStriped">Striped</mat-checkbox>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowHover]="rowHover"\n          [rowStriped]="rowStriped"\n          [rowSelectable]="true">\n</mtx-grid>\n'},mByh:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},mnPd:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},mxdz:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = [];\n}\n"},nHlL:function(s,n,a){"use strict";a.r(n),n.default='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  <mat-radio-button *ngFor="let lang of langs" [value]="lang.value">\n    {{lang.label}}\n  </mat-radio-button>\n</mat-radio-group>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [columnHideable]="true"\n          [columnMovable]="true">\n</mtx-grid>\n'},nx1F:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">expandable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">expansionTemplate</span>]=<span class="hljs-string">&quot;expansionTpl&quot;</span>\n          (<span class="hljs-attr">expansionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">expansionTpl</span> <span class="hljs-attr">let-row</span>&gt;</span>\n  {{row.name}}\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},oaUZ:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>, <span class="hljs-attr">summary</span>: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Cost&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  <span class="hljs-function"><span class="hljs-title">getTotalCost</span>(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>)</span> {\n    <span class="hljs-keyword">return</span> data.reduce(<span class="hljs-function">(<span class="hljs-params">acc: <span class="hljs-built_in">any</span>, value: <span class="hljs-built_in">any</span></span>) =&gt;</span> acc + value, <span class="hljs-number">0</span>);\n  }\n}\n'},pcAO:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},q3F9:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Operation&#x27;</span>,\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;160px&#x27;</span>,\n      <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;right&#x27;</span>,\n      <span class="hljs-attr">right</span>: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      <span class="hljs-attr">buttons</span>: [\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;file_copy&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;copy&#x27;</span>);\n          },\n        },\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-string">&#x27;Edit&#x27;</span>,\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;edit&#x27;</span>);\n          },\n        },\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-string">&#x27;Delete&#x27;</span>,\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          <span class="hljs-attr">pop</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">popTitle</span>: <span class="hljs-string">&#x27;Confirm delete?&#x27;</span>,\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;delete&#x27;</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},rxkg:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [showColumnMenuButton]="false"\n          [toolbarTemplate]="toolbarTpl">\n</mtx-grid>\n\n<ng-template #toolbarTpl>\n  <input placeholder="Search">\n</ng-template>\n'},ssdK:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { TranslateService } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;name&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;weight&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;gender&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;mobile&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;city&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">header</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;operation&#x27;</span>),\n      <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;40px&#x27;</span>,\n      <span class="hljs-attr">pinned</span>: <span class="hljs-string">&#x27;right&#x27;</span>,\n      <span class="hljs-attr">right</span>: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      <span class="hljs-attr">buttons</span>: [\n        {\n          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;basic&#x27;</span>,\n          <span class="hljs-attr">text</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          <span class="hljs-attr">tooltip</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          <span class="hljs-attr">pop</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">popTitle</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;confirm_delete&#x27;</span>),\n          <span class="hljs-attr">popCloseText</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;close&#x27;</span>),\n          <span class="hljs-attr">popOkText</span>: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;ok&#x27;</span>),\n          <span class="hljs-attr">click</span>: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;delete&#x27;</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  langs = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;English&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n\n  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> translate: TranslateService</span>)</span> {\n    translate.addLangs(<span class="hljs-built_in">this</span>.langs.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.value));\n    translate.setDefaultLang(<span class="hljs-built_in">this</span>.defaultlang);\n  }\n}\n'},uDgr:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},vQaw:function(s,n){s.exports='{\n  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Name&quot;</span>,\n  <span class="hljs-attr">&quot;weight&quot;</span>: <span class="hljs-string">&quot;Weight&quot;</span>,\n  <span class="hljs-attr">&quot;gender&quot;</span>: <span class="hljs-string">&quot;Gender&quot;</span>,\n  <span class="hljs-attr">&quot;mobile&quot;</span>: <span class="hljs-string">&quot;Mobile&quot;</span>,\n  <span class="hljs-attr">&quot;city&quot;</span>: <span class="hljs-string">&quot;City&quot;</span>,\n  <span class="hljs-attr">&quot;operation&quot;</span>: <span class="hljs-string">&quot;Operation&quot;</span>,\n  <span class="hljs-attr">&quot;delete&quot;</span>: <span class="hljs-string">&quot;Delete&quot;</span>,\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span>: <span class="hljs-string">&quot;Confirm delete?&quot;</span>,\n  <span class="hljs-attr">&quot;close&quot;</span>: <span class="hljs-string">&quot;CLOSE&quot;</span>,\n  <span class="hljs-attr">&quot;ok&quot;</span>: <span class="hljs-string">&quot;OK&quot;</span>\n}\n'},vWUE:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;refresh()&quot;</span>&gt;</span>Refresh<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">length</span>]=<span class="hljs-string">&quot;total&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">pageIndex</span>]=<span class="hljs-string">&quot;query.page&quot;</span>\n          [<span class="hljs-attr">pageSize</span>]=<span class="hljs-string">&quot;query.per_page&quot;</span>\n          [<span class="hljs-attr">pageSizeOptions</span>]=<span class="hljs-string">&quot;[5,10,20]&quot;</span>\n          (<span class="hljs-attr">page</span>)=<span class="hljs-string">&quot;getNextPage($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},xzj5:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>Loading<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},y6Rw:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', sortable: true },\n    { header: 'Weight', field: 'weight', sortable: true },\n    { header: 'Gender', field: 'gender', sortable: true },\n    { header: 'Mobile', field: 'mobile', sortable: false },\n    {\n      header: 'City',\n      field: 'city',\n      sortable: true,\n      sortProp: {\n        arrowPosition: 'before',\n        disableClear: true,\n        start: 'desc',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},yBaH:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrls</span>: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppComponent</span> </span>{\n  <span class="hljs-attr">columns</span>: MtxGridColumn[] = [\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Weight&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Gender&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { <span class="hljs-attr">header</span>: <span class="hljs-string">&#x27;City&#x27;</span>, <span class="hljs-attr">field</span>: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = <span class="hljs-literal">true</span>;\n}\n'},z6FG:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},zJDa:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">statusTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slide-toggle</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">&quot;row.status&quot;</span>&gt;</span>Slide me!<span class="hljs-tag">&lt;/<span class="hljs-name">mat-slide-toggle</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},zncV:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">cellTemplate</span>]=<span class="hljs-string">&quot;{mobile: mobileTpl, city: cityTpl}&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">mobileTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;accent&quot;</span>&gt;</span>{{row.mobile}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">cityTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>{{row.city}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},zwIg:function(s,n,a){"use strict";a.r(n),n.default=".mat-radio-button {\n  margin: 0 1rem 1rem 0;\n}\n"}}]);