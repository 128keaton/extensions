(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"+Gtk":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>Loading<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"+wki":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"+z7n":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"/+Y5":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, summary: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, summary: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Cost&#x27;</span>, field: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"/1dg":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { PageEvent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/paginator&#x27;</span>;\n<span class="hljs-keyword">import</span> { HttpClient } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common/http&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent <span class="hljs-keyword">implements</span> OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      field: <span class="hljs-string">&#x27;name&#x27;</span>,\n      formatter: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;a href=&quot;<span class="hljs-subst">${data.html_url}</span>&quot; target=&quot;_blank&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/a&gt;`</span>,\n    },\n    { header: <span class="hljs-string">&#x27;Owner&#x27;</span>, field: <span class="hljs-string">&#x27;owner.login&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Owner Avatar&#x27;</span>, field: <span class="hljs-string">&#x27;owner.avatar_url&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;image&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Description&#x27;</span>, field: <span class="hljs-string">&#x27;description&#x27;</span>, width: <span class="hljs-string">&#x27;300px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Stars&#x27;</span>, field: <span class="hljs-string">&#x27;stargazers_count&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Forks&#x27;</span>, field: <span class="hljs-string">&#x27;forks_count&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Score&#x27;</span>, field: <span class="hljs-string">&#x27;score&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Issues&#x27;</span>, field: <span class="hljs-string">&#x27;open_issues&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Language&#x27;</span>, field: <span class="hljs-string">&#x27;language&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;License&#x27;</span>, field: <span class="hljs-string">&#x27;license.name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Home Page&#x27;</span>, field: <span class="hljs-string">&#x27;homepage&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;link&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Is forked&#x27;</span>, field: <span class="hljs-string">&#x27;fork&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Archived&#x27;</span>,\n      field: <span class="hljs-string">&#x27;archived&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;tag&#x27;</span>,\n      tag: {\n        <span class="hljs-literal">true</span>: { text: <span class="hljs-string">&#x27;Yes&#x27;</span>, color: <span class="hljs-string">&#x27;red-100&#x27;</span> },\n        <span class="hljs-literal">false</span>: { text: <span class="hljs-string">&#x27;No&#x27;</span>, color: <span class="hljs-string">&#x27;green-100&#x27;</span> },\n      },\n    },\n    { header: <span class="hljs-string">&#x27;Created Date&#x27;</span>, field: <span class="hljs-string">&#x27;created_at&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Updated Date&#x27;</span>, field: <span class="hljs-string">&#x27;updated_at&#x27;</span> },\n  ];\n  list = [];\n  total = <span class="hljs-number">0</span>;\n  isLoading = <span class="hljs-literal">true</span>;\n\n  query = {\n    q: <span class="hljs-string">&#x27;user:nzbin&#x27;</span>,\n    page: <span class="hljs-number">0</span>,\n    per_page: <span class="hljs-number">5</span>,\n  };\n\n  get params() {\n    <span class="hljs-keyword">const</span> p = <span class="hljs-built_in">Object</span>.assign({}, <span class="hljs-built_in">this</span>.query);\n    p.page += <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">return</span> p;\n  }\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> http: HttpClient</span>) {}\n\n  ngOnInit() {\n    <span class="hljs-built_in">this</span>.getData();\n  }\n\n  getData() {\n    <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">true</span>;\n    <span class="hljs-built_in">this</span>.http\n      .get(<span class="hljs-string">&#x27;https://api.github.com/search/repositories&#x27;</span>, { params: <span class="hljs-built_in">this</span>.params <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span> })\n      .subscribe(\n        <span class="hljs-function">(<span class="hljs-params">res: <span class="hljs-built_in">any</span></span>) =&gt;</span> {\n          <span class="hljs-built_in">this</span>.list = res.items;\n          <span class="hljs-built_in">this</span>.total = res.total_count;\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        }\n      );\n  }\n\n  getNextPage(e: PageEvent) {\n    <span class="hljs-built_in">this</span>.query.page = e.pageIndex;\n    <span class="hljs-built_in">this</span>.query.per_page = e.pageSize;\n    <span class="hljs-built_in">this</span>.getData();\n  }\n\n  refresh() {\n    <span class="hljs-built_in">this</span>.getData();\n  }\n}\n'},"/LrM":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [trackBy]="trackByName">\n</mtx-grid>\n'},"0LFB":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"17CO":function(s,n){s.exports='<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">1rem</span> <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},"1Lg5":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"1g1a":function(s,n,a){"use strict";a.r(n),n.default=".mat-radio-button {\n  margin: 0 1rem 1rem 0;\n}\n"},"2Gcz":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"2L3u":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"2N83":function(s,n){s.exports='{\n  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Name&quot;</span>,\n  <span class="hljs-attr">&quot;weight&quot;</span>: <span class="hljs-string">&quot;Weight&quot;</span>,\n  <span class="hljs-attr">&quot;gender&quot;</span>: <span class="hljs-string">&quot;Gender&quot;</span>,\n  <span class="hljs-attr">&quot;mobile&quot;</span>: <span class="hljs-string">&quot;Mobile&quot;</span>,\n  <span class="hljs-attr">&quot;city&quot;</span>: <span class="hljs-string">&quot;City&quot;</span>,\n  <span class="hljs-attr">&quot;operation&quot;</span>: <span class="hljs-string">&quot;Operation&quot;</span>,\n  <span class="hljs-attr">&quot;delete&quot;</span>: <span class="hljs-string">&quot;Delete&quot;</span>,\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span>: <span class="hljs-string">&quot;Confirm delete?&quot;</span>,\n  <span class="hljs-attr">&quot;close&quot;</span>: <span class="hljs-string">&quot;CLOSE&quot;</span>,\n  <span class="hljs-attr">&quot;ok&quot;</span>: <span class="hljs-string">&quot;OK&quot;</span>\n}\n'},"2OhO":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"2eyz":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = <span class="hljs-literal">true</span>;\n  columnMovable = <span class="hljs-literal">true</span>;\n}\n'},"2z1R":function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-bottom: 1rem;\n}\n"},"3qDo":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let lang of langs&quot;</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>\n    {{lang.label}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"48nt":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},"5dWc":function(s,n,a){"use strict";a.r(n),n.default=":host ::ng-deep .label {\n  padding: 5px 10px;\n  border-radius: 999px;\n  background-color: #ffb74d;\n}\n"},"5w79":function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('statusTpl', { static: true }) statusTpl: TemplateRef<any>;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    this.columns = [\n      { header: 'Name', field: 'name' },\n      { header: 'Weight', field: 'weight' },\n      { header: 'Gender', field: 'gender' },\n      { header: 'Mobile', field: 'mobile' },\n      { header: 'City', field: 'city' },\n      { header: 'Status', field: 'status', cellTemplate: this.statusTpl },\n    ];\n  }\n}\n"},"705O":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [pageOnFront]="false"\n          [showPaginator]="false">\n</mtx-grid>\n'},"7BMS":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},"8FVU":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [cellTemplate]="{ city: cityTpl }">\n</mtx-grid>\n\n<ng-template #cityTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="primary">{{row.city}}</button>\n</ng-template>\n'},"8S/e":function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowHover">Hover</mat-checkbox>\n  <mat-checkbox [(ngModel)]="rowStriped">Striped</mat-checkbox>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowHover]="rowHover"\n          [rowStriped]="rowStriped"\n          [rowSelectable]="true">\n</mtx-grid>\n'},"8cD9":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"93A+":function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span>,\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},"9QST":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = <span class="hljs-literal">true</span>;\n  rowStriped = <span class="hljs-literal">false</span>;\n}\n'},AYo8:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},AhII:function(s,n){s.exports='{\n  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;\u59d3\u540d&quot;</span>,\n  <span class="hljs-attr">&quot;weight&quot;</span>: <span class="hljs-string">&quot;\u4f53\u91cd&quot;</span>,\n  <span class="hljs-attr">&quot;gender&quot;</span>: <span class="hljs-string">&quot;\u6027\u522b&quot;</span>,\n  <span class="hljs-attr">&quot;mobile&quot;</span>: <span class="hljs-string">&quot;\u624b\u673a&quot;</span>,\n  <span class="hljs-attr">&quot;city&quot;</span>: <span class="hljs-string">&quot;\u57ce\u5e02&quot;</span>,\n  <span class="hljs-attr">&quot;operation&quot;</span>: <span class="hljs-string">&quot;\u64cd\u4f5c&quot;</span>,\n  <span class="hljs-attr">&quot;delete&quot;</span>: <span class="hljs-string">&quot;\u5220\u9664&quot;</span>,\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span>: <span class="hljs-string">&quot;\u786e\u8ba4\u5220\u9664\uff1f&quot;</span>,\n  <span class="hljs-attr">&quot;close&quot;</span>: <span class="hljs-string">&quot;\u5173\u95ed&quot;</span>,\n  <span class="hljs-attr">&quot;ok&quot;</span>: <span class="hljs-string">&quot;\u786e\u5b9a&quot;</span>\n}\n'},Aodh:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},BcXy:function(s,n,a){"use strict";a.r(n),n.default='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  <mat-radio-button *ngFor="let lang of langs" [value]="lang.value">\n    {{lang.label}}\n  </mat-radio-button>\n</mat-radio-group>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [columnHideable]="true"\n          [columnMovable]="true">\n</mtx-grid>\n'},CDYS:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', sortable: true },\n    { header: 'Weight', field: 'weight', sortable: true },\n    { header: 'Gender', field: 'gender', sortable: true },\n    { header: 'Mobile', field: 'mobile', sortable: false },\n    {\n      header: 'City',\n      field: 'city',\n      sortable: true,\n      sortProp: {\n        arrowPosition: 'before',\n        disableClear: true,\n        start: 'desc',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},CSbO:function(s,n,a){"use strict";a.r(n),n.default=".mat-raised-button {\n  margin-bottom: 1rem;\n}\n"},DJtL:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Operation&#x27;</span>,\n      field: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      width: <span class="hljs-string">&#x27;160px&#x27;</span>,\n      pinned: <span class="hljs-string">&#x27;right&#x27;</span>,\n      right: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      buttons: [\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          text: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          icon: <span class="hljs-string">&#x27;file_copy&#x27;</span>,\n          tooltip: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          disabled: <span class="hljs-literal">true</span>,\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;copy&#x27;</span>);\n          },\n        },\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          text: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          icon: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          tooltip: <span class="hljs-string">&#x27;Edit&#x27;</span>,\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;edit&#x27;</span>);\n          },\n        },\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          text: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          icon: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          tooltip: <span class="hljs-string">&#x27;Delete&#x27;</span>,\n          color: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          pop: <span class="hljs-literal">true</span>,\n          popTitle: <span class="hljs-string">&#x27;Confirm delete?&#x27;</span>,\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;delete&#x27;</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},DtCM:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},E8jj:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit, ViewChild, TemplateRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent <span class="hljs-keyword">implements</span> OnInit {\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">&#x27;statusTpl&#x27;</span>, { <span class="hljs-keyword">static</span>: <span class="hljs-literal">true</span> }) statusTpl: TemplateRef&lt;<span class="hljs-built_in">any</span>&gt;;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    <span class="hljs-built_in">this</span>.columns = [\n      { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Status&#x27;</span>, field: <span class="hljs-string">&#x27;status&#x27;</span>, cellTemplate: <span class="hljs-built_in">this</span>.statusTpl },\n    ];\n  }\n}\n'},FoZ3:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showSummary</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">summaryTemplate</span>]=<span class="hljs-string">&quot;{&#x27;cost&#x27;: footerTpl}&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">footerTpl</span> <span class="hljs-attr">let-data</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{{getTotalCost(data) | currency}}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},G7ct:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},GLZs:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">headerTemplate</span>]=<span class="hljs-string">&quot;headerTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">headerTpl</span> <span class="hljs-attr">let-col</span>&gt;</span>\n  {{col.header}} <span class="hljs-tag">&lt;<span class="hljs-name">mat-icon</span> [<span class="hljs-attr">matTooltip</span>]=<span class="hljs-string">&quot;col.description&quot;</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">mat-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},GWAD:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    {\n      header: 'Weight',\n      field: 'weight',\n      type: 'number',\n      typeParameter: {\n        digitsInfo: '1.2-2',\n      },\n    },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Date',\n      field: 'date',\n      type: 'date',\n      typeParameter: {\n        format: 'yyyy-MM-dd',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  trackByName(index: number, item: any) {\n    return item.name;\n  }\n}\n"},GgQz:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},IFLB:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = [];\n}\n'},J5dd:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"JUl+":function(s,n){s.exports='<span class="hljs-selector-class">.mat-raised-button</span> {\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},JV4J:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [headerTemplate]="headerTpl">\n</mtx-grid>\n\n<ng-template #headerTpl let-col>\n  {{col.header}} <mat-icon [matTooltip]="col.description">info</mat-icon>\n</ng-template>\n'},KXed:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},LPdT:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: any) {\n    return data.reduce((acc: any, value: any) => acc + value, 0);\n  }\n}\n"},Lj52:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = true;\n}\n"},Meuw:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},Mtr3:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},NE6O:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">statusTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slide-toggle</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">&quot;row.status&quot;</span>&gt;</span>Slide me!<span class="hljs-tag">&lt;/<span class="hljs-name">mat-slide-toggle</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},OduZ:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="columnHideable">Column Hiding</mat-checkbox>\n  <mat-checkbox [(ngModel)]="columnMovable">Column Moving</mat-checkbox>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [toolbarTitle]="\'Data Grid\'"\n          [columnHideable]="columnHideable"\n          [columnMovable]="columnMovable">\n</mtx-grid>\n'},OsdS:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, showExpand: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},PM5x:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span>, sortable: <span class="hljs-literal">false</span> },\n    {\n      header: <span class="hljs-string">&#x27;City&#x27;</span>,\n      field: <span class="hljs-string">&#x27;city&#x27;</span>,\n      sortable: <span class="hljs-literal">true</span>,\n      sortProp: {\n        arrowPosition: <span class="hljs-string">&#x27;before&#x27;</span>,\n        disableClear: <span class="hljs-literal">true</span>,\n        start: <span class="hljs-string">&#x27;desc&#x27;</span>,\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},QDm0:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},R38t:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { TranslateService } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;name&#x27;</span>),\n      field: <span class="hljs-string">&#x27;name&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;weight&#x27;</span>),\n      field: <span class="hljs-string">&#x27;weight&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;gender&#x27;</span>),\n      field: <span class="hljs-string">&#x27;gender&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;mobile&#x27;</span>),\n      field: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;city&#x27;</span>),\n      field: <span class="hljs-string">&#x27;city&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;operation&#x27;</span>),\n      field: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      width: <span class="hljs-string">&#x27;40px&#x27;</span>,\n      pinned: <span class="hljs-string">&#x27;right&#x27;</span>,\n      right: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      buttons: [\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;basic&#x27;</span>,\n          text: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          icon: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          tooltip: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          color: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          pop: <span class="hljs-literal">true</span>,\n          popTitle: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;confirm_delete&#x27;</span>),\n          popCloseText: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;close&#x27;</span>),\n          popOkText: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;ok&#x27;</span>),\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;delete&#x27;</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  langs = [\n    { label: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, value: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { label: <span class="hljs-string">&#x27;English&#x27;</span>, value: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> translate: TranslateService</span>) {\n    translate.addLangs(<span class="hljs-built_in">this</span>.langs.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.value));\n    translate.setDefaultLang(<span class="hljs-built_in">this</span>.defaultlang);\n  }\n}\n'},RMCV:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          sortOnFront="true"\n          sortActive="name"\n          sortDirection="asc"\n          sortDisableClear="true"\n          sortDisabled="false"\n          sortStart="asc"\n          (sortChange)="log($event)">\n</mtx-grid>\n'},Reqn:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Position', field: 'position', width: '200px' },\n    { header: 'Name', field: 'name', width: '200px', pinned: 'left' },\n    { header: 'tags', field: 'tag.0.value', width: '200px' },\n    { header: 'Weight', field: 'weight', width: '200px', pinned: 'left' },\n    { header: 'Symbol', field: 'symbol', width: '200px' },\n    { header: 'Gender', field: 'gender', width: '200px' },\n    { header: 'Mobile', field: 'mobile', width: '200px' },\n    { header: 'Tele', field: 'tele', width: '200px' },\n    { header: 'City', field: 'city', width: '200px' },\n    { header: 'Address', field: 'address', width: '200px' },\n    { header: 'Date', field: 'date', width: '200px' },\n    { header: 'Website', field: 'website', width: '200px' },\n    { header: 'Company', field: 'company', width: '200px' },\n    { header: 'Email', field: 'email', width: '200px', pinned: 'right' },\n    { header: 'Status', field: 'status', type: 'boolean', width: '200px' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},ReuQ:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},SXGs:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = [];\n}\n"},TGGQ:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnHideable&quot;</span>&gt;</span>Column Hiding<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnMovable&quot;</span>&gt;</span>Column Moving<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">toolbarTitle</span>]=<span class="hljs-string">&quot;&#x27;Data Grid&#x27;&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;columnHideable&quot;</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">&quot;columnMovable&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},TafY:function(s,n){s.exports='<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> EXAMPLE_DATA: <span class="hljs-built_in">any</span>[] = [\n  {\n    position: <span class="hljs-number">1</span>,\n    name: <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">&#x27;red&#x27;</span>,\n        value: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],\n      },\n    ],\n    weight: <span class="hljs-number">10.811</span>,\n    symbol: <span class="hljs-string">&#x27;B&#x27;</span>,\n    gender: <span class="hljs-string">&#x27;male&#x27;</span>,\n    mobile: <span class="hljs-string">&#x27;13198765432&#x27;</span>,\n    tele: <span class="hljs-string">&#x27;567891234&#x27;</span>,\n    city: <span class="hljs-string">&#x27;Berlin&#x27;</span>,\n    address: <span class="hljs-string">&#x27;Bernauer Str.111,13355&#x27;</span>,\n    date: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    website: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    company: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    email: <span class="hljs-string">&#x27;Boron@gmail.com&#x27;</span>,\n    status: <span class="hljs-literal">false</span>,\n    cost: <span class="hljs-number">4</span>\n  },\n  {\n    position: <span class="hljs-number">2</span>,\n    name: <span class="hljs-string">&#x27;Helium&#x27;</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">&#x27;blue&#x27;</span>,\n        value: [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>],\n      },\n    ],\n    weight: <span class="hljs-number">8.0026</span>,\n    symbol: <span class="hljs-string">&#x27;He&#x27;</span>,\n    gender: <span class="hljs-string">&#x27;female&#x27;</span>,\n    mobile: <span class="hljs-string">&#x27;13034676675&#x27;</span>,\n    tele: <span class="hljs-string">&#x27;80675432&#x27;</span>,\n    city: <span class="hljs-string">&#x27;Shanghai&#x27;</span>,\n    address: <span class="hljs-string">&#x27;88 Songshan Road&#x27;</span>,\n    date: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    website: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    company: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    email: <span class="hljs-string">&#x27;Helium@gmail.com&#x27;</span>,\n    status: <span class="hljs-literal">true</span>,\n    cost: <span class="hljs-number">5</span>\n  },\n  {\n    position: <span class="hljs-number">3</span>,\n    name: <span class="hljs-string">&#x27;Nitrogen&#x27;</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">&#x27;yellow&#x27;</span>,\n        value: [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>],\n      },\n    ],\n    weight: <span class="hljs-number">14.0067</span>,\n    symbol: <span class="hljs-string">&#x27;N&#x27;</span>,\n    gender: <span class="hljs-string">&#x27;male&#x27;</span>,\n    mobile: <span class="hljs-string">&#x27;15811112222&#x27;</span>,\n    tele: <span class="hljs-string">&#x27;345678912&#x27;</span>,\n    city: <span class="hljs-string">&#x27;Sydney&#x27;</span>,\n    address: <span class="hljs-string">&#x27;Circular Quay, Sydney NSW 2000&#x27;</span>,\n    date: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    website: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    company: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    email: <span class="hljs-string">&#x27;Nitrogen@gmail.com&#x27;</span>,\n    status: <span class="hljs-literal">true</span>,\n    cost: <span class="hljs-number">2</span>\n  },\n];\n'},"UN+l":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Position&#x27;</span>, field: <span class="hljs-string">&#x27;position&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span>, pinned: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;tags&#x27;</span>, field: <span class="hljs-string">&#x27;tag.0.value&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span>, pinned: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Symbol&#x27;</span>, field: <span class="hljs-string">&#x27;symbol&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Tele&#x27;</span>, field: <span class="hljs-string">&#x27;tele&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Address&#x27;</span>, field: <span class="hljs-string">&#x27;address&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Date&#x27;</span>, field: <span class="hljs-string">&#x27;date&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Website&#x27;</span>, field: <span class="hljs-string">&#x27;website&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Company&#x27;</span>, field: <span class="hljs-string">&#x27;company&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Email&#x27;</span>, field: <span class="hljs-string">&#x27;email&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span>, pinned: <span class="hljs-string">&#x27;right&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Status&#x27;</span>, field: <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},UXFV:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},W9LF:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [showColumnMenuButton]="false"\n          [toolbarTemplate]="toolbarTpl">\n</mtx-grid>\n\n<ng-template #toolbarTpl>\n  <input placeholder="Search">\n</ng-template>\n'},WJ6K:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},XHzA:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},YPR1:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowSelectable&quot;</span>&gt;</span>Row selectable<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>&gt;</span>Hide checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;multiSelectable&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>Single<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>Multiple<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">multiSelectable</span>]=<span class="hljs-string">&quot;multiSelectable&quot;</span>\n          [<span class="hljs-attr">hideRowSelectionCheckbox</span>]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;rowSelectable&quot;</span>\n          [<span class="hljs-attr">rowSelected</span>]=<span class="hljs-string">&quot;rowSelected&quot;</span>\n          [<span class="hljs-attr">rowSelectionFormatter</span>]=<span class="hljs-string">&quot;rowSelectionFormatter&quot;</span>\n          (<span class="hljs-attr">rowSelectionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>\n          (<span class="hljs-attr">cellSelectionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},YYJN:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},Z61D:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},ZjNe:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = true;\n  columnMovable = true;\n}\n"},ai1J:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;refresh()&quot;</span>&gt;</span>Refresh<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">length</span>]=<span class="hljs-string">&quot;total&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">pageIndex</span>]=<span class="hljs-string">&quot;query.page&quot;</span>\n          [<span class="hljs-attr">pageSize</span>]=<span class="hljs-string">&quot;query.per_page&quot;</span>\n          [<span class="hljs-attr">pageSizeOptions</span>]=<span class="hljs-string">&quot;[5,10,20]&quot;</span>\n          (<span class="hljs-attr">page</span>)=<span class="hljs-string">&quot;getNextPage($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},bxlB:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},cBui:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, summary: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, summary: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Cost&#x27;</span>, field: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-keyword">return</span> data.reduce(<span class="hljs-function">(<span class="hljs-params">acc: <span class="hljs-built_in">any</span>, value: <span class="hljs-built_in">any</span></span>) =&gt;</span> acc + value, <span class="hljs-number">0</span>);\n  }\n}\n'},"df+T":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowHover&quot;</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowStriped&quot;</span>&gt;</span>Striped<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">rowHover</span>]=<span class="hljs-string">&quot;rowHover&quot;</span>\n          [<span class="hljs-attr">rowStriped</span>]=<span class="hljs-string">&quot;rowStriped&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},dzW7:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = true;\n  rowStriped = false;\n}\n"},ec7O:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},ecK2:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">showPaginator</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},gcNB:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [expandable]="true"\n          [expansionTemplate]="expansionTpl"\n          (expansionChange)="log($event)">\n</mtx-grid>\n\n<ng-template #expansionTpl let-row>\n  {{row.name}}\n</ng-template>\n'},gfyD:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = <span class="hljs-literal">true</span>;\n}\n'},ggKf:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},gqKb:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<span class=\"label\">${data.name}</span>`,\n    },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},h5uV:function(s,n,a){"use strict";a.r(n),n.default='<mat-checkbox [(ngModel)]="isLoading">Loading</mat-checkbox>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [loading]="isLoading">\n</mtx-grid>\n'},hilW:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">trackBy</span>]=<span class="hljs-string">&quot;trackByName&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},hkiY:function(s,n,a){"use strict";a.r(n),n.default='<button mat-raised-button color="primary" (click)="refresh()">Refresh</button>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [length]="total"\n          [loading]="isLoading"\n          [pageOnFront]="false"\n          [pageIndex]="query.page"\n          [pageSize]="query.per_page"\n          [pageSizeOptions]="[5,10,20]"\n          (page)="getNextPage($event)">\n</mtx-grid>\n'},i0wx:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          <span class="hljs-attr">sortOnFront</span>=<span class="hljs-string">&quot;true&quot;</span>\n          <span class="hljs-attr">sortActive</span>=<span class="hljs-string">&quot;name&quot;</span>\n          <span class="hljs-attr">sortDirection</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          <span class="hljs-attr">sortDisableClear</span>=<span class="hljs-string">&quot;true&quot;</span>\n          <span class="hljs-attr">sortDisabled</span>=<span class="hljs-string">&quot;false&quot;</span>\n          <span class="hljs-attr">sortStart</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          (<span class="hljs-attr">sortChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},iBo5:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', showExpand: true },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},jH17:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},"jXi+":function(s,n,a){"use strict";a.r(n),n.default='{\n  "name": "Name",\n  "weight": "Weight",\n  "gender": "Gender",\n  "mobile": "Mobile",\n  "city": "City",\n  "operation": "Operation",\n  "delete": "Delete",\n  "confirm_delete": "Confirm delete?",\n  "close": "CLOSE",\n  "ok": "OK"\n}\n'},lKjp:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Operation',\n      field: 'operation',\n      width: '160px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'icon',\n          text: 'copy',\n          icon: 'file_copy',\n          tooltip: 'copy',\n          disabled: true,\n          click: () => {\n            alert('copy');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'edit',\n          icon: 'edit',\n          tooltip: 'Edit',\n          click: () => {\n            alert('edit');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'delete',\n          icon: 'delete',\n          tooltip: 'Delete',\n          color: 'warn',\n          pop: true,\n          popTitle: 'Confirm delete?',\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},lZ76:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">cellTemplate</span>]=<span class="hljs-string">&quot;{ city: cityTpl }&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">cityTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>{{row.city}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},m8xE:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridRowSelectionFormatter } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = <span class="hljs-literal">true</span>;\n  hideRowSelectionCheckbox = <span class="hljs-literal">false</span>;\n  rowSelectable = <span class="hljs-literal">true</span>;\n  rowSelected = EXAMPLE_DATA.slice(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    hideCheckbox: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">&#x27;John&#x27;</span>,\n  };\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},nJyt:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},nga3:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},oC3v:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},oXCI:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},oioM:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},pxEU:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">showColumnMenuButton</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">toolbarTemplate</span>]=<span class="hljs-string">&quot;toolbarTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">toolbarTpl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Search&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},qJlr:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      field: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;number&#x27;</span>,\n      typeParameter: {\n        digitsInfo: <span class="hljs-string">&#x27;1.2-2&#x27;</span>,\n      },\n    },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Date&#x27;</span>,\n      field: <span class="hljs-string">&#x27;date&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;date&#x27;</span>,\n      typeParameter: {\n        format: <span class="hljs-string">&#x27;yyyy-MM-dd&#x27;</span>,\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  trackByName(index: <span class="hljs-built_in">number</span>, item: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-keyword">return</span> item.name;\n  }\n}\n'},qQdu:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showSummary]="true"\n          [summaryTemplate]="{\'cost\': footerTpl}">\n</mtx-grid>\n\n<ng-template #footerTpl let-data>\n  <div>{{getTotalCost(data) | currency}}</div>\n</ng-template>\n'},r6oY:function(s,n){s.exports=':host ::ng-deep .label {\n  padding: <span class="hljs-number">5px</span> <span class="hljs-number">10px</span>;\n  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">999px</span>;\n  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ffb74d</span>;\n}\n'},rTxb:function(s,n,a){"use strict";a.r(n),a.d(n,"TranslateHttpLoaderFactory",(function(){return vs})),a.d(n,"DataGridModule",(function(){return Ls}));var t=a("sEIs"),e=a("vobO"),l=a("M0ag"),p=a("EM62"),r=a("ROBh"),o=a("9bRT"),i=a("P4Xx"),c=a("qZtG"),h=a("i9xl"),d=a("J+dc"),m=a("wqq/"),g=a("YtkY"),u=a("5uDM"),x=a("TLy2");class j{}let f=(()=>{class s extends j{getTranslation(s){return Object(r.a)({})}}return s.\u0275fac=function(n){return b(n||s)},s.\u0275prov=p.Jb({token:s,factory:s.\u0275fac}),s})();const b=p.Vb(f);class y{}let w=(()=>{class s{handle(s){return s.key}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275prov=p.Jb({token:s,factory:s.\u0275fac}),s})();function C(s){return null!=s}function k(s){return s&&"object"==typeof s&&!Array.isArray(s)}class M{}let q=(()=>{class s extends M{constructor(){super(...arguments),this.templateMatcher=/{{\s?([^{}\s]*)\s?}}/g}interpolate(s,n){let a;return a="string"==typeof s?this.interpolateString(s,n):"function"==typeof s?this.interpolateFunction(s,n):s,a}getValue(s,n){let a="string"==typeof n?n.split("."):[n];n="";do{n+=a.shift(),!C(s)||!C(s[n])||"object"!=typeof s[n]&&a.length?a.length?n+=".":s=void 0:(s=s[n],n="")}while(a.length);return s}interpolateFunction(s,n){return s(n)}interpolateString(s,n){return n?s.replace(this.templateMatcher,(s,a)=>{let t=this.getValue(n,a);return C(t)?t:s}):s}}return s.\u0275fac=function(n){return A(n||s)},s.\u0275prov=p.Jb({token:s,factory:s.\u0275fac}),s})();const A=p.Vb(q);class T{}let S=(()=>{class s extends T{compile(s,n){return s}compileTranslations(s,n){return s}}return s.\u0275fac=function(n){return v(n||s)},s.\u0275prov=p.Jb({token:s,factory:s.\u0275fac}),s})();const v=p.Vb(S);class L{constructor(){this.currentLang=this.defaultLang,this.translations={},this.langs=[],this.onTranslationChange=new p.o,this.onLangChange=new p.o,this.onDefaultLangChange=new p.o}}const _=new p.s("USE_STORE"),E=new p.s("USE_DEFAULT_LANG"),D=new p.s("DEFAULT_LANGUAGE"),G=new p.s("USE_EXTEND");let O=(()=>{class s{constructor(s,n,a,t,e,l=!0,r=!1,o=!1,i){this.store=s,this.currentLoader=n,this.compiler=a,this.parser=t,this.missingTranslationHandler=e,this.useDefaultLang=l,this.isolate=r,this.extend=o,this.pending=!1,this._onTranslationChange=new p.o,this._onLangChange=new p.o,this._onDefaultLangChange=new p.o,this._langs=[],this._translations={},this._translationRequests={},i&&this.setDefaultLang(i)}get onTranslationChange(){return this.isolate?this._onTranslationChange:this.store.onTranslationChange}get onLangChange(){return this.isolate?this._onLangChange:this.store.onLangChange}get onDefaultLangChange(){return this.isolate?this._onDefaultLangChange:this.store.onDefaultLangChange}get defaultLang(){return this.isolate?this._defaultLang:this.store.defaultLang}set defaultLang(s){this.isolate?this._defaultLang=s:this.store.defaultLang=s}get currentLang(){return this.isolate?this._currentLang:this.store.currentLang}set currentLang(s){this.isolate?this._currentLang=s:this.store.currentLang=s}get langs(){return this.isolate?this._langs:this.store.langs}set langs(s){this.isolate?this._langs=s:this.store.langs=s}get translations(){return this.isolate?this._translations:this.store.translations}set translations(s){this.isolate?this._translations=s:this.store.translations=s}setDefaultLang(s){if(s===this.defaultLang)return;let n=this.retrieveTranslations(s);void 0!==n?(null==this.defaultLang&&(this.defaultLang=s),n.pipe(Object(d.a)(1)).subscribe(n=>{this.changeDefaultLang(s)})):this.changeDefaultLang(s)}getDefaultLang(){return this.defaultLang}use(s){if(s===this.currentLang)return Object(r.a)(this.translations[s]);let n=this.retrieveTranslations(s);return void 0!==n?(this.currentLang||(this.currentLang=s),n.pipe(Object(d.a)(1)).subscribe(n=>{this.changeLang(s)}),n):(this.changeLang(s),Object(r.a)(this.translations[s]))}retrieveTranslations(s){let n;return(void 0===this.translations[s]||this.extend)&&(this._translationRequests[s]=this._translationRequests[s]||this.getTranslation(s),n=this._translationRequests[s]),n}getTranslation(s){this.pending=!0;const n=this.currentLoader.getTranslation(s).pipe(Object(m.a)(1),Object(d.a)(1));return this.loadingTranslations=n.pipe(Object(g.a)(n=>this.compiler.compileTranslations(n,s)),Object(m.a)(1),Object(d.a)(1)),this.loadingTranslations.subscribe({next:n=>{this.translations[s]=this.extend&&this.translations[s]?Object.assign(Object.assign({},n),this.translations[s]):n,this.updateLangs(),this.pending=!1},error:s=>{this.pending=!1}}),n}setTranslation(s,n,a=!1){n=this.compiler.compileTranslations(n,s),this.translations[s]=(a||this.extend)&&this.translations[s]?function s(n,a){let t=Object.assign({},n);return k(n)&&k(a)&&Object.keys(a).forEach(e=>{k(a[e])?e in n?t[e]=s(n[e],a[e]):Object.assign(t,{[e]:a[e]}):Object.assign(t,{[e]:a[e]})}),t}(this.translations[s],n):n,this.updateLangs(),this.onTranslationChange.emit({lang:s,translations:this.translations[s]})}getLangs(){return this.langs}addLangs(s){s.forEach(s=>{-1===this.langs.indexOf(s)&&this.langs.push(s)})}updateLangs(){this.addLangs(Object.keys(this.translations))}getParsedResult(s,n,a){let t;if(n instanceof Array){let t={},e=!1;for(let l of n)t[l]=this.getParsedResult(s,l,a),Object(o.a)(t[l])&&(e=!0);if(e){const s=n.map(s=>Object(o.a)(t[s])?t[s]:Object(r.a)(t[s]));return Object(i.a)(s).pipe(Object(g.a)(s=>{let a={};return s.forEach((s,t)=>{a[n[t]]=s}),a}))}return t}if(s&&(t=this.parser.interpolate(this.parser.getValue(s,n),a)),void 0===t&&null!=this.defaultLang&&this.defaultLang!==this.currentLang&&this.useDefaultLang&&(t=this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang],n),a)),void 0===t){let s={key:n,translateService:this};void 0!==a&&(s.interpolateParams=a),t=this.missingTranslationHandler.handle(s)}return void 0!==t?t:n}get(s,n){if(!C(s)||!s.length)throw new Error('Parameter "key" required');if(this.pending)return this.loadingTranslations.pipe(Object(u.a)(a=>(a=this.getParsedResult(a,s,n),Object(o.a)(a)?a:Object(r.a)(a))));{let a=this.getParsedResult(this.translations[this.currentLang],s,n);return Object(o.a)(a)?a:Object(r.a)(a)}}getStreamOnTranslationChange(s,n){if(!C(s)||!s.length)throw new Error('Parameter "key" required');return Object(c.a)(Object(h.a)(()=>this.get(s,n)),this.onTranslationChange.pipe(Object(x.a)(a=>{const t=this.getParsedResult(a.translations,s,n);return"function"==typeof t.subscribe?t:Object(r.a)(t)})))}stream(s,n){if(!C(s)||!s.length)throw new Error('Parameter "key" required');return Object(c.a)(Object(h.a)(()=>this.get(s,n)),this.onLangChange.pipe(Object(x.a)(a=>{const t=this.getParsedResult(a.translations,s,n);return Object(o.a)(t)?t:Object(r.a)(t)})))}instant(s,n){if(!C(s)||!s.length)throw new Error('Parameter "key" required');let a=this.getParsedResult(this.translations[this.currentLang],s,n);if(Object(o.a)(a)){if(s instanceof Array){let n={};return s.forEach((a,t)=>{n[s[t]]=s[t]}),n}return s}return a}set(s,n,a=this.currentLang){this.translations[a][s]=this.compiler.compile(n,a),this.updateLangs(),this.onTranslationChange.emit({lang:a,translations:this.translations[a]})}changeLang(s){this.currentLang=s,this.onLangChange.emit({lang:s,translations:this.translations[s]}),null==this.defaultLang&&this.changeDefaultLang(s)}changeDefaultLang(s){this.defaultLang=s,this.onDefaultLangChange.emit({lang:s,translations:this.translations[s]})}reloadLang(s){return this.resetLang(s),this.getTranslation(s)}resetLang(s){this._translationRequests[s]=void 0,this.translations[s]=void 0}getBrowserLang(){if("undefined"==typeof window||void 0===window.navigator)return;let s=window.navigator.languages?window.navigator.languages[0]:null;return s=s||window.navigator.language||window.navigator.browserLanguage||window.navigator.userLanguage,void 0!==s?(-1!==s.indexOf("-")&&(s=s.split("-")[0]),-1!==s.indexOf("_")&&(s=s.split("_")[0]),s):void 0}getBrowserCultureLang(){if("undefined"==typeof window||void 0===window.navigator)return;let s=window.navigator.languages?window.navigator.languages[0]:null;return s=s||window.navigator.language||window.navigator.browserLanguage||window.navigator.userLanguage,s}}return s.\u0275fac=function(n){return new(n||s)(p.Xb(L),p.Xb(j),p.Xb(T),p.Xb(M),p.Xb(y),p.Xb(E),p.Xb(_),p.Xb(G),p.Xb(D))},s.\u0275prov=p.Jb({token:s,factory:s.\u0275fac}),s})(),N=(()=>{class s{static forRoot(n={}){return{ngModule:s,providers:[n.loader||{provide:j,useClass:f},n.compiler||{provide:T,useClass:S},n.parser||{provide:M,useClass:q},n.missingTranslationHandler||{provide:y,useClass:w},L,{provide:_,useValue:n.isolate},{provide:E,useValue:n.useDefaultLang},{provide:G,useValue:n.extend},{provide:D,useValue:n.defaultLanguage},O]}}static forChild(n={}){return{ngModule:s,providers:[n.loader||{provide:j,useClass:f},n.compiler||{provide:T,useClass:S},n.parser||{provide:M,useClass:q},n.missingTranslationHandler||{provide:y,useClass:w},{provide:_,useValue:n.isolate},{provide:E,useValue:n.useDefaultLang},{provide:G,useValue:n.extend},{provide:D,useValue:n.defaultLanguage},O]}}}return s.\u0275mod=p.Lb({type:s}),s.\u0275inj=p.Kb({factory:function(n){return new(n||s)}}),s})();class P{constructor(s,n="/assets/i18n/",a=".json"){this.http=s,this.prefix=n,this.suffix=a}getTranslation(s){return this.http.get(`${this.prefix}${s}${this.suffix}`)}}var X=a("PBFl"),U=a("2kYt"),H=a("5S+f"),B=a("Pg5x");function W(s,n){if(1&s&&(p.Rb(0),p.Ob(1,"doc-heading",3),p.Ob(2,"example-viewer",4),p.Qb()),2&s){const s=n.$implicit;p.Bb(1),p.nc("text",s.title),p.Bb(1),p.nc("exampleData",s)}}function R(s,n){if(1&s&&(p.Rb(0),p.Kc(1,W,3,2,"ng-container",2),p.Qb()),2&s){const s=n.ngIf;p.Bb(1),p.nc("ngForOf",s.examples)}}let F=(()=>{class s{constructor(s){this.route=s;let n=s;for(;!n.routeConfig.path;)n=n.parent}}return s.\u0275fac=function(n){return new(n||s)(p.Nb(t.a))},s.\u0275cmp=p.Hb({type:s,selectors:[["app-data-grid"]],decls:10,vars:3,consts:[["mat-raised-button","","color","accent","href","https://nzbin.gitbook.io/material-extensions/data-grid","target","_blank"],[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"text"],[3,"exampleData"]],template:function(s,n){1&s&&(p.Tb(0,"p"),p.Mc(1," The "),p.Tb(2,"code"),p.Mc(3,"mtx-grid"),p.Sb(),p.Mc(4," is an powerful material table component. It supports cell selectable, row selectable, multiple row selectable, row expandable, column hiding, column moving and so on.\n"),p.Sb(),p.Tb(5,"p"),p.Tb(6,"a",0),p.Mc(7,"API Reference"),p.Sb(),p.Sb(),p.Kc(8,R,2,1,"ng-container",1),p.gc(9,"async")),2&s&&(p.Bb(8),p.nc("ngIf",p.hc(9,1,n.route.data)))},directives:[X.a,U.t,U.s,H.a,B.a],pipes:[U.b],styles:[""]}),s})();const I=[{position:1,name:"Boron",tag:[{color:"red",value:[1,2]}],weight:10.811,symbol:"B",gender:"male",mobile:"13198765432",tele:"567891234",city:"Berlin",address:"Bernauer Str.111,13355",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Boron@gmail.com",status:!1,cost:4},{position:2,name:"Helium",tag:[{color:"blue",value:[3,4]}],weight:8.0026,symbol:"He",gender:"female",mobile:"13034676675",tele:"80675432",city:"Shanghai",address:"88 Songshan Road",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Helium@gmail.com",status:!0,cost:5},{position:3,name:"Nitrogen",tag:[{color:"yellow",value:[5,6]}],weight:14.0067,symbol:"N",gender:"male",mobile:"15811112222",tele:"345678912",city:"Sydney",address:"Circular Quay, Sydney NSW 2000",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Nitrogen@gmail.com",status:!0,cost:2}];var z=a("CGrA");const J={title:"Basic",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight",type:"number",typeParameter:{digitsInfo:"1.2-2"}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Date",field:"date",type:"date",typeParameter:{format:"yyyy-MM-dd"}}],this.list=I}trackByName(s,n){return n.name}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","trackBy"]],template:function(s,n){1&s&&p.Ob(0,"mtx-grid",0),2&s&&p.nc("data",n.list)("columns",n.columns)("trackBy",n.trackByName)},directives:[z.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("hilW"),filecontent:a("/LrM")},{file:"app.component.ts",content:a("qJlr"),filecontent:a("GWAD")},{file:"app.component.scss",content:a("0LFB"),filecontent:a("2Gcz")},{file:"data.ts",content:a("TafY"),filecontent:a("tD0s")}]};var $=a("+Tre"),K=a("nIj0");const V={title:"Loading status",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=I,this.isLoading=!0}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","loading"]],template:function(s,n){1&s&&(p.Tb(0,"mat-checkbox",0),p.bc("ngModelChange",(function(s){return n.isLoading=s})),p.Mc(1,"Loading"),p.Sb(),p.Ob(2,"mtx-grid",1)),2&s&&(p.nc("ngModel",n.isLoading),p.Bb(2),p.nc("data",n.list)("columns",n.columns)("loading",n.isLoading))},directives:[$.a,K.m,K.p,z.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("+Gtk"),filecontent:a("h5uV")},{file:"app.component.ts",content:a("gfyD"),filecontent:a("Lj52")},{file:"app.component.scss",content:a("QDm0"),filecontent:a("2z1R")}]},Y={title:"Hide pagination",description:"\n  <p>If you hide the pagination, you should set <code>pageOnFront</code> false to show all the data.\n  </p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=I}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:4,consts:[[3,"data","columns","pageOnFront","showPaginator"]],template:function(s,n){1&s&&p.Ob(0,"mtx-grid",0),2&s&&p.nc("data",n.list)("columns",n.columns)("pageOnFront",!1)("showPaginator",!1)},directives:[z.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("ecK2"),filecontent:a("705O")},{file:"app.component.ts",content:a("2OhO"),filecontent:a("WJ6K")},{file:"app.component.scss",content:a("oC3v"),filecontent:a("s9C1")}]},Q={title:"Sortable",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",sortable:!0},{header:"Weight",field:"weight",sortable:!0},{header:"Gender",field:"gender",sortable:!0},{header:"Mobile",field:"mobile",sortable:!1},{header:"City",field:"city",sortable:!0,sortProp:{arrowPosition:"before",disableClear:!0,start:"desc"}}],this.list=I}log(s){console.log(s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[["sortOnFront","true","sortActive","name","sortDirection","asc","sortDisableClear","true","sortDisabled","false","sortStart","asc",3,"data","columns","sortChange"]],template:function(s,n){1&s&&(p.Tb(0,"mtx-grid",0),p.bc("sortChange",(function(s){return n.log(s)})),p.Sb()),2&s&&p.nc("data",n.list)("columns",n.columns)},directives:[z.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("i0wx"),filecontent:a("RMCV")},{file:"app.component.ts",content:a("PM5x"),filecontent:a("CDYS")},{file:"app.component.scss",content:a("UXFV"),filecontent:a("oioM")}]};var Z=a("F1o0");const ss={title:"Row selectable",description:"\n  <p>If you choose multiple option, you can press <kbd>ctrl</kbd>/<kbd>command</kbd> +\n  click or select checkboxs to choose multiple row.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=I,this.multiSelectable=!0,this.hideRowSelectionCheckbox=!1,this.rowSelectable=!0,this.rowSelected=I.slice(2,3),this.rowSelectionFormatter={disabled:s=>"Boron"===s.name,hideCheckbox:s=>"John"===s.name}}log(s){console.log(s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:11,vars:12,consts:[[3,"ngModel","ngModelChange"],[3,"value"],[3,"data","columns","multiSelectable","hideRowSelectionCheckbox","rowSelectable","rowSelected","rowSelectionFormatter","rowSelectionChange","cellSelectionChange"]],template:function(s,n){1&s&&(p.Tb(0,"div"),p.Tb(1,"mat-checkbox",0),p.bc("ngModelChange",(function(s){return n.rowSelectable=s})),p.Mc(2,"Row selectable"),p.Sb(),p.Tb(3,"mat-checkbox",0),p.bc("ngModelChange",(function(s){return n.hideRowSelectionCheckbox=s})),p.Mc(4,"Hide checkbox"),p.Sb(),p.Tb(5,"mat-radio-group",0),p.bc("ngModelChange",(function(s){return n.multiSelectable=s})),p.Tb(6,"mat-radio-button",1),p.Mc(7,"Single"),p.Sb(),p.Tb(8,"mat-radio-button",1),p.Mc(9,"Multiple"),p.Sb(),p.Sb(),p.Sb(),p.Tb(10,"mtx-grid",2),p.bc("rowSelectionChange",(function(s){return n.log(s)}))("cellSelectionChange",(function(s){return n.log(s)})),p.Sb()),2&s&&(p.Bb(1),p.nc("ngModel",n.rowSelectable),p.Bb(2),p.nc("ngModel",n.hideRowSelectionCheckbox),p.Bb(2),p.nc("ngModel",n.multiSelectable),p.Bb(1),p.nc("value",!1),p.Bb(2),p.nc("value",!0),p.Bb(2),p.nc("data",n.list)("columns",n.columns)("multiSelectable",n.multiSelectable)("hideRowSelectionCheckbox",n.hideRowSelectionCheckbox)("rowSelectable",n.rowSelectable)("rowSelected",n.rowSelected)("rowSelectionFormatter",n.rowSelectionFormatter))},directives:[$.a,K.m,K.p,Z.b,Z.a,z.a],styles:[".mat-checkbox[_ngcontent-%COMP%], .mat-radio-button[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("YPR1"),filecontent:a("up5s")},{file:"app.component.ts",content:a("m8xE"),filecontent:a("tF9F")},{file:"app.component.scss",content:a("93A+"),filecontent:a("rvl2")}]};function ns(s,n){1&s&&p.Mc(0),2&s&&p.Oc(" ",n.$implicit.name,"\n")}const as={title:"Expandable row",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",showExpand:!0},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=I}log(s){console.log(s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"data","columns","expandable","expansionTemplate","expansionChange"],["expansionTpl",""]],template:function(s,n){if(1&s&&(p.Tb(0,"mtx-grid",0),p.bc("expansionChange",(function(s){return n.log(s)})),p.Sb(),p.Kc(1,ns,1,1,"ng-template",null,1,p.Lc)),2&s){const s=p.wc(2);p.nc("data",n.list)("columns",n.columns)("expandable",!0)("expansionTemplate",s)}},directives:[z.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("sg0B"),filecontent:a("gcNB")},{file:"app.component.ts",content:a("OsdS"),filecontent:a("iBo5")},{file:"app.component.scss",content:a("ggKf"),filecontent:a("XHzA")}]},ts={title:"Column hiding & moving",description:"\n  <p>Click the <kbd>Column Shown</kbd> button, you can select or drag the columns.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=I,this.columnHideable=!0,this.columnMovable=!0}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:6,vars:8,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","showToolbar","toolbarTitle","columnHideable","columnMovable"]],template:function(s,n){1&s&&(p.Tb(0,"div"),p.Tb(1,"mat-checkbox",0),p.bc("ngModelChange",(function(s){return n.columnHideable=s})),p.Mc(2,"Column Hiding"),p.Sb(),p.Tb(3,"mat-checkbox",0),p.bc("ngModelChange",(function(s){return n.columnMovable=s})),p.Mc(4,"Column Moving"),p.Sb(),p.Sb(),p.Ob(5,"mtx-grid",1)),2&s&&(p.Bb(1),p.nc("ngModel",n.columnHideable),p.Bb(2),p.nc("ngModel",n.columnMovable),p.Bb(2),p.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("toolbarTitle","Data Grid")("columnHideable",n.columnHideable)("columnMovable",n.columnMovable))},directives:[$.a,K.m,K.p,z.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("TGGQ"),filecontent:a("OduZ")},{file:"app.component.ts",content:a("2eyz"),filecontent:a("ZjNe")},{file:"app.component.scss",content:a("jH17"),filecontent:a("vbzM")}]},es={title:"Column pinnable",component:(()=>{class s{constructor(){this.columns=[{header:"Position",field:"position",width:"200px"},{header:"Name",field:"name",width:"200px",pinned:"left"},{header:"tags",field:"tag.0.value",width:"200px"},{header:"Weight",field:"weight",width:"200px",pinned:"left"},{header:"Symbol",field:"symbol",width:"200px"},{header:"Gender",field:"gender",width:"200px"},{header:"Mobile",field:"mobile",width:"200px"},{header:"Tele",field:"tele",width:"200px"},{header:"City",field:"city",width:"200px"},{header:"Address",field:"address",width:"200px"},{header:"Date",field:"date",width:"200px"},{header:"Website",field:"website",width:"200px"},{header:"Company",field:"company",width:"200px"},{header:"Email",field:"email",width:"200px",pinned:"right"},{header:"Status",field:"status",type:"boolean",width:"200px"}],this.list=I}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&p.Ob(0,"mtx-grid",0),2&s&&p.nc("data",n.list)("columns",n.columns)},directives:[z.a],styles:[""]}),s})(),description:"\n  <p>The <code>name</code> and <code>weight</code> column pinned left, the <code>email</code> column\n  pinned right. Scroll the columns to test.</p>\n  ",files:[{file:"app.component.html",content:a("vSoS"),filecontent:a("KXed")},{file:"app.component.ts",content:a("UN+l"),filecontent:a("Reqn")},{file:"app.component.scss",content:a("2L3u"),filecontent:a("8cD9")}]},ls={title:"Hover & striped",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=I,this.rowHover=!0,this.rowStriped=!1}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:6,vars:7,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","rowHover","rowStriped","rowSelectable"]],template:function(s,n){1&s&&(p.Tb(0,"div"),p.Tb(1,"mat-checkbox",0),p.bc("ngModelChange",(function(s){return n.rowHover=s})),p.Mc(2,"Hover"),p.Sb(),p.Tb(3,"mat-checkbox",0),p.bc("ngModelChange",(function(s){return n.rowStriped=s})),p.Mc(4,"Striped"),p.Sb(),p.Sb(),p.Ob(5,"mtx-grid",1)),2&s&&(p.Bb(1),p.nc("ngModel",n.rowHover),p.Bb(2),p.nc("ngModel",n.rowStriped),p.Bb(2),p.nc("data",n.list)("columns",n.columns)("rowHover",n.rowHover)("rowStriped",n.rowStriped)("rowSelectable",!0))},directives:[$.a,K.m,K.p,z.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("df+T"),filecontent:a("8S/e")},{file:"app.component.ts",content:a("9QST"),filecontent:a("dzW7")},{file:"app.component.scss",content:a("nJyt"),filecontent:a("ec7O")}]},ps={title:"Row with buttons",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Operation",field:"operation",width:"160px",pinned:"right",right:"0px",type:"button",buttons:[{type:"icon",text:"copy",icon:"file_copy",tooltip:"copy",disabled:!0,click:()=>{alert("copy")}},{type:"icon",text:"edit",icon:"edit",tooltip:"Edit",click:()=>{alert("edit")}},{type:"icon",text:"delete",icon:"delete",tooltip:"Delete",color:"warn",pop:!0,popTitle:"Confirm delete?",click:()=>{alert("delete")}}]}],this.list=I}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&p.Ob(0,"mtx-grid",0),2&s&&p.nc("data",n.list)("columns",n.columns)},directives:[z.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("+wki"),filecontent:a("Z61D")},{file:"app.component.ts",content:a("DJtL"),filecontent:a("lKjp")},{file:"app.component.scss",content:a("ReuQ"),filecontent:a("1Lg5")}]};var rs=a("k8N0");const os=["statusTpl"];function is(s,n){1&s&&(p.Tb(0,"mat-slide-toggle",2),p.Mc(1,"Slide me!"),p.Sb()),2&s&&p.nc("checked",n.$implicit.status)}const cs={title:"Custom cell template",description:"\n  <p>The status column are custom cells.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[],this.list=I}ngOnInit(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Status",field:"status",cellTemplate:this.statusTpl}]}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],viewQuery:function(s,n){var a;1&s&&p.Fc(os,!0),2&s&&p.vc(a=p.cc())&&(n.statusTpl=a.first)},decls:3,vars:2,consts:[[3,"data","columns"],["statusTpl",""],[3,"checked"]],template:function(s,n){1&s&&(p.Ob(0,"mtx-grid",0),p.Kc(1,is,2,1,"ng-template",null,1,p.Lc)),2&s&&p.nc("data",n.list)("columns",n.columns)},directives:[z.a,rs.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("NE6O"),filecontent:a("tEOP")},{file:"app.component.ts",content:a("E8jj"),filecontent:a("5w79")},{file:"app.component.scss",content:a("YYJN"),filecontent:a("wvfp")}]};function hs(s,n){if(1&s&&(p.Tb(0,"button",2),p.Mc(1),p.Sb()),2&s){const s=n.$implicit;p.Bb(1),p.Nc(s.city)}}const ds=function(s){return{city:s}},ms={title:"Custom cell template 2",description:'\n  <p>There has another easiest way to custom cells. You can use property\n  <code>[cellTemplate]="{ city: cityTpl }"</code></p>\n  ',component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=I}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:5,consts:[[3,"data","columns","cellTemplate"],["cityTpl",""],["mat-raised-button","","color","primary"]],template:function(s,n){if(1&s&&(p.Ob(0,"mtx-grid",0),p.Kc(1,hs,2,1,"ng-template",null,1,p.Lc)),2&s){const s=p.wc(2);p.nc("data",n.list)("columns",n.columns)("cellTemplate",p.qc(3,ds,s))}},directives:[z.a,X.b],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("lZ76"),filecontent:a("8FVU")},{file:"app.component.ts",content:a("Aodh"),filecontent:a("xX41")},{file:"app.component.scss",content:a("Meuw"),filecontent:a("nga3")}]},gs={title:"Data formatting",description:"\n  <p>The <code>name</code> field use a formatter.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",formatter:s=>`<span class="label">${s.name}</span>`},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=I}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&p.Ob(0,"mtx-grid",0),2&s&&p.nc("data",n.list)("columns",n.columns)},directives:[z.a],styles:["[_nghost-%COMP%]     .label{padding:5px 10px;border-radius:999px;background-color:#ffb74d}"]}),s})(),files:[{file:"app.component.html",content:a("J5dd"),filecontent:a("7BMS")},{file:"app.component.ts",content:a("za2W"),filecontent:a("gqKb")},{file:"app.component.scss",content:a("r6oY"),filecontent:a("5dWc")}]},us={title:"No result",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=[]}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&p.Ob(0,"mtx-grid",0),2&s&&p.nc("data",n.list)("columns",n.columns)},directives:[z.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("Mtr3"),filecontent:a("oXCI")},{file:"app.component.ts",content:a("IFLB"),filecontent:a("SXGs")},{file:"app.component.scss",content:a("wPQT"),filecontent:a("AYo8")}]};var xs=a("bFHC"),js=a("Y2X+");function fs(s,n){if(1&s&&(p.Mc(0),p.Tb(1,"mat-icon",2),p.Mc(2,"info"),p.Sb()),2&s){const s=n.$implicit;p.Oc(" ",s.header," "),p.Bb(1),p.nc("matTooltip",s.description)}}const bs={title:"Custom header template",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",description:"Info about the name"},{header:"Weight",field:"weight",description:"Info about the weight"},{header:"Gender",field:"gender",description:"Info about the gender"},{header:"Mobile",field:"mobile",description:"Info about the mobile"},{header:"City",field:"city",description:"Info about the city"}],this.list=I}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:3,consts:[[3,"data","columns","headerTemplate"],["headerTpl",""],[3,"matTooltip"]],template:function(s,n){if(1&s&&(p.Ob(0,"mtx-grid",0),p.Kc(1,fs,3,2,"ng-template",null,1,p.Lc)),2&s){const s=p.wc(2);p.nc("data",n.list)("columns",n.columns)("headerTemplate",s)}},directives:[z.a,xs.a,js.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("GLZs"),filecontent:a("JV4J")},{file:"app.component.ts",content:a("GgQz"),filecontent:a("ysK1")},{file:"app.component.scss",content:a("t8N4"),filecontent:a("vns6")}]};function ys(s,n){if(1&s&&(p.Tb(0,"div"),p.Mc(1),p.gc(2,"currency"),p.Sb()),2&s){const s=n.$implicit,a=p.fc();p.Bb(1),p.Nc(p.hc(2,1,a.getTotalCost(s)))}}const ws=function(s){return{cost:s}},Cs={title:"Custom footer template",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:s=>Math.max(...s)},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=I}getTotalCost(s){return s.reduce((s,n)=>s+n,0)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:6,consts:[[3,"data","columns","showSummary","summaryTemplate"],["footerTpl",""]],template:function(s,n){if(1&s&&(p.Ob(0,"mtx-grid",0),p.Kc(1,ys,3,3,"ng-template",null,1,p.Lc)),2&s){const s=p.wc(2);p.nc("data",n.list)("columns",n.columns)("showSummary",!0)("summaryTemplate",p.qc(4,ws,s))}},directives:[z.a],pipes:[U.d],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("FoZ3"),filecontent:a("qQdu")},{file:"app.component.ts",content:a("cBui"),filecontent:a("LPdT")},{file:"app.component.scss",content:a("bxlB"),filecontent:a("DtCM")}]};function ks(s,n){1&s&&p.Ob(0,"input",2)}const Ms={title:"Custom toolbar template",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:s=>Math.max(...s)},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=I}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:5,consts:[[3,"data","columns","showToolbar","showColumnMenuButton","toolbarTemplate"],["toolbarTpl",""],["placeholder","Search"]],template:function(s,n){if(1&s&&(p.Ob(0,"mtx-grid",0),p.Kc(1,ks,1,0,"ng-template",null,1,p.Lc)),2&s){const s=p.wc(2);p.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("showColumnMenuButton",!1)("toolbarTemplate",s)}},directives:[z.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("pxEU"),filecontent:a("W9LF")},{file:"app.component.ts",content:a("/+Y5"),filecontent:a("48nt")},{file:"app.component.scss",content:a("+z7n"),filecontent:a("G7ct")}]};function qs(s,n){if(1&s&&(p.Tb(0,"mat-radio-button",3),p.Mc(1),p.Sb()),2&s){const s=n.$implicit;p.nc("value",s.value),p.Bb(1),p.Oc(" ",s.label," ")}}const As={title:"I18n ngx-translate",component:(()=>{class s{constructor(s){this.translate=s,this.columns=[{header:this.translate.stream("name"),field:"name"},{header:this.translate.stream("weight"),field:"weight"},{header:this.translate.stream("gender"),field:"gender"},{header:this.translate.stream("mobile"),field:"mobile"},{header:this.translate.stream("city"),field:"city"},{header:this.translate.stream("operation"),field:"operation",width:"40px",pinned:"right",right:"0px",type:"button",buttons:[{type:"basic",text:this.translate.stream("delete"),icon:"delete",tooltip:this.translate.stream("delete"),color:"warn",pop:!0,popTitle:this.translate.stream("confirm_delete"),popCloseText:this.translate.stream("close"),popOkText:this.translate.stream("ok"),click:()=>{alert("delete")}}]}],this.list=I,this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",s.addLangs(this.langs.map(s=>s.value)),s.setDefaultLang(this.defaultlang)}}return s.\u0275fac=function(n){return new(n||s)(p.Nb(O))},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:7,consts:[[3,"ngModel","ngModelChange","change"],[3,"value",4,"ngFor","ngForOf"],[3,"data","columns","showToolbar","columnHideable","columnMovable"],[3,"value"]],template:function(s,n){1&s&&(p.Tb(0,"mat-radio-group",0),p.bc("ngModelChange",(function(s){return n.defaultlang=s}))("change",(function(s){return n.translate.use(s.value)})),p.Kc(1,qs,2,2,"mat-radio-button",1),p.Sb(),p.Ob(2,"mtx-grid",2)),2&s&&(p.nc("ngModel",n.defaultlang),p.Bb(1),p.nc("ngForOf",n.langs),p.Bb(1),p.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("columnHideable",!0)("columnMovable",!0))},directives:[Z.b,K.m,K.p,U.s,z.a,Z.a],styles:[".mat-radio-button[_ngcontent-%COMP%]{margin:0 1rem 1rem 0}"]}),s})(),files:[{file:"app.component.html",content:a("3qDo"),filecontent:a("BcXy")},{file:"app.component.ts",content:a("R38t"),filecontent:a("zjlK")},{file:"app.component.scss",content:a("17CO"),filecontent:a("1g1a")},{file:"assets/zh-CN.json",content:a("AhII"),filecontent:a("rnHd")},{file:"assets/en-US.json",content:a("2N83"),filecontent:a("jXi+")}]},Ts=function(){return[5,10,20]},Ss={title:"Remote Data",component:(()=>{class s{constructor(s){this.http=s,this.columns=[{header:"Name",field:"name",formatter:s=>`<a href="${s.html_url}" target="_blank">${s.name}</a>`},{header:"Owner",field:"owner.login"},{header:"Owner Avatar",field:"owner.avatar_url",type:"image"},{header:"Description",field:"description",width:"300px"},{header:"Stars",field:"stargazers_count"},{header:"Forks",field:"forks_count"},{header:"Score",field:"score"},{header:"Issues",field:"open_issues"},{header:"Language",field:"language"},{header:"License",field:"license.name"},{header:"Home Page",field:"homepage",type:"link"},{header:"Is forked",field:"fork",type:"boolean"},{header:"Archived",field:"archived",type:"tag",tag:{true:{text:"Yes",color:"red-100"},false:{text:"No",color:"green-100"}}},{header:"Created Date",field:"created_at"},{header:"Updated Date",field:"updated_at"}],this.list=[],this.total=0,this.isLoading=!0,this.query={q:"user:nzbin",page:0,per_page:5}}get params(){const s=Object.assign({},this.query);return s.page+=1,s}ngOnInit(){this.getData()}getData(){this.isLoading=!0,this.http.get("https://api.github.com/search/repositories",{params:this.params}).subscribe(s=>{this.list=s.items,this.total=s.total_count,this.isLoading=!1},()=>{this.isLoading=!1},()=>{this.isLoading=!1})}getNextPage(s){this.query.page=s.pageIndex,this.query.per_page=s.pageSize,this.getData()}refresh(){this.getData()}}return s.\u0275fac=function(n){return new(n||s)(p.Nb(e.b))},s.\u0275cmp=p.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:9,consts:[["mat-raised-button","","color","primary",3,"click"],[3,"data","columns","length","loading","pageOnFront","pageIndex","pageSize","pageSizeOptions","page"]],template:function(s,n){1&s&&(p.Tb(0,"button",0),p.bc("click",(function(){return n.refresh()})),p.Mc(1,"Refresh"),p.Sb(),p.Tb(2,"mtx-grid",1),p.bc("page",(function(s){return n.getNextPage(s)})),p.Sb()),2&s&&(p.Bb(2),p.nc("data",n.list)("columns",n.columns)("length",n.total)("loading",n.isLoading)("pageOnFront",!1)("pageIndex",n.query.page)("pageSize",n.query.per_page)("pageSizeOptions",p.pc(8,Ts)))},directives:[X.b,z.a],styles:[".mat-raised-button[_ngcontent-%COMP%]{margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("ai1J"),filecontent:a("hkiY")},{file:"app.component.ts",content:a("/1dg"),filecontent:a("yHEx")},{file:"app.component.scss",content:a("JUl+"),filecontent:a("CSbO")}]};function vs(s){return new P(s,"assets/i18n/","_json")}let Ls=(()=>{class s{}return s.\u0275mod=p.Lb({type:s}),s.\u0275inj=p.Kb({factory:function(n){return new(n||s)},imports:[[l.a,N.forRoot({loader:{provide:j,useFactory:vs,deps:[e.b]}}),t.i.forChild([{path:"",component:F,data:{examples:[J,V,Y,Q,ss,as,ts,es,ls,ps,cs,ms,gs,us,bs,Cs,Ms,As,Ss]}}])]]}),s})()},rnHd:function(s,n,a){"use strict";a.r(n),n.default='{\n  "name": "\u59d3\u540d",\n  "weight": "\u4f53\u91cd",\n  "gender": "\u6027\u522b",\n  "mobile": "\u624b\u673a",\n  "city": "\u57ce\u5e02",\n  "operation": "\u64cd\u4f5c",\n  "delete": "\u5220\u9664",\n  "confirm_delete": "\u786e\u8ba4\u5220\u9664\uff1f",\n  "close": "\u5173\u95ed",\n  "ok": "\u786e\u5b9a"\n}\n'},rvl2:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox,\n.mat-radio-button {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},s9C1:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},sg0B:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">expandable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">expansionTemplate</span>]=<span class="hljs-string">&quot;expansionTpl&quot;</span>\n          (<span class="hljs-attr">expansionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">expansionTpl</span> <span class="hljs-attr">let-row</span>&gt;</span>\n  {{row.name}}\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},t8N4:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},tD0s:function(s,n,a){"use strict";a.r(n),n.default="export const EXAMPLE_DATA: any[] = [\n  {\n    position: 1,\n    name: 'Boron',\n    tag: [\n      {\n        color: 'red',\n        value: [1, 2],\n      },\n    ],\n    weight: 10.811,\n    symbol: 'B',\n    gender: 'male',\n    mobile: '13198765432',\n    tele: '567891234',\n    city: 'Berlin',\n    address: 'Bernauer Str.111,13355',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Boron@gmail.com',\n    status: false,\n    cost: 4\n  },\n  {\n    position: 2,\n    name: 'Helium',\n    tag: [\n      {\n        color: 'blue',\n        value: [3, 4],\n      },\n    ],\n    weight: 8.0026,\n    symbol: 'He',\n    gender: 'female',\n    mobile: '13034676675',\n    tele: '80675432',\n    city: 'Shanghai',\n    address: '88 Songshan Road',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Helium@gmail.com',\n    status: true,\n    cost: 5\n  },\n  {\n    position: 3,\n    name: 'Nitrogen',\n    tag: [\n      {\n        color: 'yellow',\n        value: [5, 6],\n      },\n    ],\n    weight: 14.0067,\n    symbol: 'N',\n    gender: 'male',\n    mobile: '15811112222',\n    tele: '345678912',\n    city: 'Sydney',\n    address: 'Circular Quay, Sydney NSW 2000',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Nitrogen@gmail.com',\n    status: true,\n    cost: 2\n  },\n];\n"},tEOP:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n\n<ng-template #statusTpl let-row let-index="index" let-col="colDef">\n  <mat-slide-toggle [checked]="row.status">Slide me!</mat-slide-toggle>\n</ng-template>\n'},tF9F:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowSelectionFormatter } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = true;\n  hideRowSelectionCheckbox = false;\n  rowSelectable = true;\n  rowSelected = EXAMPLE_DATA.slice(2, 3);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: data => data.name === 'Boron',\n    hideCheckbox: data => data.name === 'John',\n  };\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},up5s:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowSelectable">Row selectable</mat-checkbox>\n  <mat-checkbox [(ngModel)]="hideRowSelectionCheckbox">Hide checkbox</mat-checkbox>\n  <mat-radio-group [(ngModel)]="multiSelectable">\n    <mat-radio-button [value]="false">Single</mat-radio-button>\n    <mat-radio-button [value]="true">Multiple</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [multiSelectable]="multiSelectable"\n          [hideRowSelectionCheckbox]="hideRowSelectionCheckbox"\n          [rowSelectable]="rowSelectable"\n          [rowSelected]="rowSelected"\n          [rowSelectionFormatter]="rowSelectionFormatter"\n          (rowSelectionChange)="log($event)"\n          (cellSelectionChange)="log($event)">\n</mtx-grid>\n'},vSoS:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},vbzM:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},vns6:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},wPQT:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},wvfp:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},xX41:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},yHEx:function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { PageEvent } from '@angular/material/paginator';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\n    },\n    { header: 'Owner', field: 'owner.login' },\n    { header: 'Owner Avatar', field: 'owner.avatar_url', type: 'image' },\n    { header: 'Description', field: 'description', width: '300px' },\n    { header: 'Stars', field: 'stargazers_count' },\n    { header: 'Forks', field: 'forks_count' },\n    { header: 'Score', field: 'score' },\n    { header: 'Issues', field: 'open_issues' },\n    { header: 'Language', field: 'language' },\n    { header: 'License', field: 'license.name' },\n    { header: 'Home Page', field: 'homepage', type: 'link' },\n    { header: 'Is forked', field: 'fork', type: 'boolean' },\n    {\n      header: 'Archived',\n      field: 'archived',\n      type: 'tag',\n      tag: {\n        true: { text: 'Yes', color: 'red-100' },\n        false: { text: 'No', color: 'green-100' },\n      },\n    },\n    { header: 'Created Date', field: 'created_at' },\n    { header: 'Updated Date', field: 'updated_at' },\n  ];\n  list = [];\n  total = 0;\n  isLoading = true;\n\n  query = {\n    q: 'user:nzbin',\n    page: 0,\n    per_page: 5,\n  };\n\n  get params() {\n    const p = Object.assign({}, this.query);\n    p.page += 1;\n    return p;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  getData() {\n    this.isLoading = true;\n    this.http\n      .get('https://api.github.com/search/repositories', { params: this.params as any })\n      .subscribe(\n        (res: any) => {\n          this.list = res.items;\n          this.total = res.total_count;\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n  }\n\n  getNextPage(e: PageEvent) {\n    this.query.page = e.pageIndex;\n    this.query.per_page = e.pageSize;\n    this.getData();\n  }\n\n  refresh() {\n    this.getData();\n  }\n}\n"},ysK1:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', description: 'Info about the name' },\n    { header: 'Weight', field: 'weight', description: 'Info about the weight' },\n    { header: 'Gender', field: 'gender', description: 'Info about the gender' },\n    { header: 'Mobile', field: 'mobile', description: 'Info about the mobile' },\n    { header: 'City', field: 'city', description: 'Info about the city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},za2W:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      field: <span class="hljs-string">&#x27;name&#x27;</span>,\n      formatter: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;span class=&quot;label&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/span&gt;`</span>,\n    },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},zjlK:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: this.translate.stream('name'),\n      field: 'name',\n    },\n    {\n      header: this.translate.stream('weight'),\n      field: 'weight',\n    },\n    {\n      header: this.translate.stream('gender'),\n      field: 'gender',\n    },\n    {\n      header: this.translate.stream('mobile'),\n      field: 'mobile',\n    },\n    {\n      header: this.translate.stream('city'),\n      field: 'city',\n    },\n    {\n      header: this.translate.stream('operation'),\n      field: 'operation',\n      width: '40px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'basic',\n          text: this.translate.stream('delete'),\n          icon: 'delete',\n          tooltip: this.translate.stream('delete'),\n          color: 'warn',\n          pop: true,\n          popTitle: this.translate.stream('confirm_delete'),\n          popCloseText: this.translate.stream('close'),\n          popOkText: this.translate.stream('ok'),\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n\n  defaultlang = 'zh-CN';\n\n  constructor(public translate: TranslateService) {\n    translate.addLangs(this.langs.map(item => item.value));\n    translate.setDefaultLang(this.defaultlang);\n  }\n}\n"}}]);