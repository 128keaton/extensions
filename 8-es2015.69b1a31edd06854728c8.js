(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"1TTv":function(s,n){s.exports='mat-divider {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},"1ocj":function(s,n,a){"use strict";a.r(n),n.default="mat-checkbox {\n  margin: 0 1rem;\n}\n"},"1xpx":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"9b73":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { MtxCheckboxGroupOption } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  foods: MtxCheckboxGroupOption[] = [\n    { label: 'Steak', value: 'steak', color: 'primary' },\n    { label: 'Pizza', value: 'pizza', color: 'accent' },\n    { label: 'Tacos', value: 'tacos', color: 'warn' },\n  ];\n  selectedFoods = ['steak', 'pizza'];\n\n  cars = ['Ford', 'Chevrolet', 'Dodge'];\n  selectedCars = ['Dodge'];\n}\n"},"D6/H":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;toggleOptionDisabled()&quot;</span>&gt;</span>Toggle Option[1] Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;disabled&quot;</span>&gt;</span>Disabled checkbox group<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>\n                    [<span class="hljs-attr">disabled</span>]=<span class="hljs-string">&quot;disabled&quot;</span>\n                    [<span class="hljs-attr">showSelectAll</span>]=<span class="hljs-string">&quot;true&quot;</span>\n                    <span class="hljs-attr">selectAllLabel</span>=<span class="hljs-string">&quot;Select all foods&quot;</span>\n                    (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;onOptionChange($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},G0q7:function(s,n,a){"use strict";a.r(n),n.default="mat-divider {\n  margin: 1rem 0;\n}\n"},GpZE:function(s,n,a){"use strict";a.r(n),n.default='<mtx-checkbox-group [items]="foods"\n                    [(ngModel)]="selectedFoods"\n                    [compareWith]="compareWith">\n</mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n\n<mat-divider></mat-divider>\n\n<mtx-checkbox-group [items]="cars"\n                    bindLabel="name"\n                    [(ngModel)]="selectedCars"\n                    [compareWith]="compareWith2">\n</mtx-checkbox-group>\n<p>{{selectedCars|json}}</p>\n'},"I+yF":function(s,n,a){"use strict";a.r(n),n.default='<mtx-checkbox-group [items]="foods" [(ngModel)]="selectedFoods"></mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n\n<mat-divider></mat-divider>\n\n<mtx-checkbox-group [items]="cars" [(ngModel)]="selectedCars"></mtx-checkbox-group>\n<p>{{selectedCars|json}}</p>\n'},J2oN:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mat-divider</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedCars|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},KQWg:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  foods = [\n    { label: <span class="hljs-string">&#x27;Steak&#x27;</span>, value: <span class="hljs-string">&#x27;steak&#x27;</span> },\n    { label: <span class="hljs-string">&#x27;Pizza&#x27;</span>, value: <span class="hljs-string">&#x27;pizza&#x27;</span>, disabled: <span class="hljs-literal">true</span> },\n    { label: <span class="hljs-string">&#x27;Tacos&#x27;</span>, value: <span class="hljs-string">&#x27;tacos&#x27;</span> },\n  ];\n\n  selectedFoods = [<span class="hljs-string">&#x27;tacos&#x27;</span>];\n\n  disabled = <span class="hljs-literal">false</span>;\n\n  onOptionChange(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n\n  toggleOptionDisabled() {\n    <span class="hljs-built_in">this</span>.foods[<span class="hljs-number">1</span>].disabled = !<span class="hljs-built_in">this</span>.foods[<span class="hljs-number">1</span>].disabled;\n    <span class="hljs-built_in">this</span>.foods = <span class="hljs-built_in">this</span>.foods.filter(<span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> <span class="hljs-literal">true</span>);\n  }\n}\n'},KRsb:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>\n                    [<span class="hljs-attr">compareWith</span>]=<span class="hljs-string">&quot;compareWith&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mat-divider</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span>\n                    <span class="hljs-attr">bindLabel</span>=<span class="hljs-string">&quot;name&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>\n                    [<span class="hljs-attr">compareWith</span>]=<span class="hljs-string">&quot;compareWith2&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedCars|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},Ot2m:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  cars = [\n    { id: <span class="hljs-number">1</span>, name: <span class="hljs-string">&#x27;Ford&#x27;</span> },\n    { id: <span class="hljs-number">2</span>, name: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { id: <span class="hljs-number">3</span>, name: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n\n  selectedCars = [<span class="hljs-number">3</span>];\n}\n'},TTXl:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span>\n                    <span class="hljs-attr">bindLabel</span>=<span class="hljs-string">&quot;name&quot;</span>\n                    <span class="hljs-attr">bindValue</span>=<span class="hljs-string">&quot;id&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedCars|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},UFK8:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  foods = [\n    { label: 'Steak', value: 'steak' },\n    { label: 'Pizza', value: 'pizza', disabled: true },\n    { label: 'Tacos', value: 'tacos' },\n  ];\n\n  selectedFoods = ['tacos'];\n\n  disabled = false;\n\n  onOptionChange(e: any) {\n    console.log(e);\n  }\n\n  toggleOptionDisabled() {\n    this.foods[1].disabled = !this.foods[1].disabled;\n    this.foods = this.foods.filter(_ => true);\n  }\n}\n"},Wnot:function(s,n,a){"use strict";a.r(n),n.default='<p>\n  <button mat-raised-button (click)="toggleOptionDisabled()">Toggle Option[1] Disabled</button>\n  <mat-checkbox [(ngModel)]="disabled">Disabled checkbox group</mat-checkbox>\n</p>\n\n<mtx-checkbox-group [items]="foods"\n                    [(ngModel)]="selectedFoods"\n                    [disabled]="disabled"\n                    [showSelectAll]="true"\n                    selectAllLabel="Select all foods"\n                    (change)="onOptionChange($event)">\n</mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n'},fWuN:function(s,n,a){"use strict";a.r(n),n.default="mat-divider {\n  margin: 1rem 0;\n}\n"},ixpG:function(s,n,a){"use strict";a.r(n),a.d(n,"CheckboxGroupModule",(function(){return C}));var e=a("sEIs"),l=a("M0ag"),t=a("EM62"),p=a("2kYt"),o=a("5S+f"),c=a("Pg5x");function r(s,n){if(1&s&&(t.Rb(0),t.Ob(1,"doc-heading",2),t.Ob(2,"example-viewer",3),t.Qb()),2&s){const s=n.$implicit;t.Bb(1),t.nc("text",s.title),t.Bb(1),t.nc("exampleData",s)}}function i(s,n){if(1&s&&(t.Rb(0),t.Kc(1,r,3,2,"ng-container",1),t.Qb()),2&s){const s=n.ngIf;t.Bb(1),t.nc("ngForOf",s.examples)}}let h=(()=>{class s{constructor(s){this.route=s}}return s.\u0275fac=function(n){return new(n||s)(t.Nb(e.a))},s.\u0275cmp=t.Hb({type:s,selectors:[["app-checkbox-group"]],decls:2,vars:3,consts:[[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"text"],[3,"exampleData"]],template:function(s,n){1&s&&(t.Kc(0,i,2,1,"ng-container",0),t.gc(1,"async")),2&s&&t.nc("ngIf",t.hc(1,1,n.route.data))},directives:[p.t,p.s,o.a,c.a],pipes:[p.b],styles:[""]}),s})();var d=a("k6Z1"),m=a("nIj0"),g=a("zmEM");const u={title:"Basic",component:(()=>{class s{constructor(){this.foods=[{label:"Steak",value:"steak",color:"primary"},{label:"Pizza",value:"pizza",color:"accent"},{label:"Tacos",value:"tacos",color:"warn"}],this.selectedFoods=["steak","pizza"],this.cars=["Ford","Chevrolet","Dodge"],this.selectedCars=["Dodge"]}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=t.Hb({type:s,selectors:[["checkbox-group-example"]],decls:9,vars:10,consts:[[3,"items","ngModel","ngModelChange"]],template:function(s,n){1&s&&(t.Tb(0,"mtx-checkbox-group",0),t.bc("ngModelChange",(function(s){return n.selectedFoods=s})),t.Sb(),t.Tb(1,"p"),t.Mc(2),t.gc(3,"json"),t.Sb(),t.Ob(4,"mat-divider"),t.Tb(5,"mtx-checkbox-group",0),t.bc("ngModelChange",(function(s){return n.selectedCars=s})),t.Sb(),t.Tb(6,"p"),t.Mc(7),t.gc(8,"json"),t.Sb()),2&s&&(t.nc("items",n.foods)("ngModel",n.selectedFoods),t.Bb(2),t.Nc(t.hc(3,6,n.selectedFoods)),t.Bb(3),t.nc("items",n.cars)("ngModel",n.selectedCars),t.Bb(2),t.Nc(t.hc(8,8,n.selectedCars)))},directives:[d.a,m.m,m.p,g.a],pipes:[p.k],styles:["mat-divider[_ngcontent-%COMP%]{margin:1rem 0}"]}),s})(),files:[{file:"app.component.html",content:a("J2oN"),filecontent:a("I+yF")},{file:"app.component.ts",content:a("lnpx"),filecontent:a("9b73")},{file:"app.component.scss",content:a("tEoh"),filecontent:a("fWuN")}]},b={title:"BindLabel & BindValue",component:(()=>{class s{constructor(){this.cars=[{id:1,name:"Ford"},{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}],this.selectedCars=[3]}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=t.Hb({type:s,selectors:[["checkbox-group-example"]],decls:4,vars:5,consts:[["bindLabel","name","bindValue","id",3,"items","ngModel","ngModelChange"]],template:function(s,n){1&s&&(t.Tb(0,"mtx-checkbox-group",0),t.bc("ngModelChange",(function(s){return n.selectedCars=s})),t.Sb(),t.Tb(1,"p"),t.Mc(2),t.gc(3,"json"),t.Sb()),2&s&&(t.nc("items",n.cars)("ngModel",n.selectedCars),t.Bb(2),t.Nc(t.hc(3,3,n.selectedCars)))},directives:[d.a,m.m,m.p],pipes:[p.k],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("TTXl"),filecontent:a("xGpK")},{file:"app.component.ts",content:a("Ot2m"),filecontent:a("lNAz")},{file:"app.component.scss",content:a("vo/R"),filecontent:a("1xpx")}]},x={title:"CompareWith",component:(()=>{class s{constructor(){this.foods=[{label:"Steak",value:"steak"},{label:"Pizza",value:"pizza"},{label:"Tacos",value:"tacos"}],this.selectedFoods=[{label:"Pizza",value:"pizza"}],this.cars=[{id:1,name:"Ford"},{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}],this.selectedCars=[{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}]}compareWith(s,n){return s.value===n.value}compareWith2(s,n){return s.id===n.id}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=t.Hb({type:s,selectors:[["checkbox-group-example"]],decls:9,vars:12,consts:[[3,"items","ngModel","compareWith","ngModelChange"],["bindLabel","name",3,"items","ngModel","compareWith","ngModelChange"]],template:function(s,n){1&s&&(t.Tb(0,"mtx-checkbox-group",0),t.bc("ngModelChange",(function(s){return n.selectedFoods=s})),t.Sb(),t.Tb(1,"p"),t.Mc(2),t.gc(3,"json"),t.Sb(),t.Ob(4,"mat-divider"),t.Tb(5,"mtx-checkbox-group",1),t.bc("ngModelChange",(function(s){return n.selectedCars=s})),t.Sb(),t.Tb(6,"p"),t.Mc(7),t.gc(8,"json"),t.Sb()),2&s&&(t.nc("items",n.foods)("ngModel",n.selectedFoods)("compareWith",n.compareWith),t.Bb(2),t.Nc(t.hc(3,8,n.selectedFoods)),t.Bb(3),t.nc("items",n.cars)("ngModel",n.selectedCars)("compareWith",n.compareWith2),t.Bb(2),t.Nc(t.hc(8,10,n.selectedCars)))},directives:[d.a,m.m,m.p,g.a],pipes:[p.k],styles:["mat-divider[_ngcontent-%COMP%]{margin:1rem 0}"]}),s})(),files:[{file:"app.component.html",content:a("KRsb"),filecontent:a("GpZE")},{file:"app.component.ts",content:a("nl94"),filecontent:a("jcod")},{file:"app.component.scss",content:a("1TTv"),filecontent:a("G0q7")}]};var j=a("PBFl"),f=a("+Tre");const k={title:"SelectAll",component:(()=>{class s{constructor(){this.foods=[{label:"Steak",value:"steak"},{label:"Pizza",value:"pizza",disabled:!0},{label:"Tacos",value:"tacos"}],this.selectedFoods=["tacos"],this.disabled=!1}onOptionChange(s){console.log(s)}toggleOptionDisabled(){this.foods[1].disabled=!this.foods[1].disabled,this.foods=this.foods.filter(s=>!0)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=t.Hb({type:s,selectors:[["checkbox-group-example"]],decls:9,vars:8,consts:[["mat-raised-button","",3,"click"],[3,"ngModel","ngModelChange"],["selectAllLabel","Select all foods",3,"items","ngModel","disabled","showSelectAll","ngModelChange","change"]],template:function(s,n){1&s&&(t.Tb(0,"p"),t.Tb(1,"button",0),t.bc("click",(function(){return n.toggleOptionDisabled()})),t.Mc(2,"Toggle Option[1] Disabled"),t.Sb(),t.Tb(3,"mat-checkbox",1),t.bc("ngModelChange",(function(s){return n.disabled=s})),t.Mc(4,"Disabled checkbox group"),t.Sb(),t.Sb(),t.Tb(5,"mtx-checkbox-group",2),t.bc("ngModelChange",(function(s){return n.selectedFoods=s}))("change",(function(s){return n.onOptionChange(s)})),t.Sb(),t.Tb(6,"p"),t.Mc(7),t.gc(8,"json"),t.Sb()),2&s&&(t.Bb(3),t.nc("ngModel",n.disabled),t.Bb(2),t.nc("items",n.foods)("ngModel",n.selectedFoods)("disabled",n.disabled)("showSelectAll",!0),t.Bb(2),t.Nc(t.hc(8,6,n.selectedFoods)))},directives:[j.b,f.a,m.m,m.p,d.a],pipes:[p.k],styles:["mat-checkbox[_ngcontent-%COMP%]{margin:0 1rem}"]}),s})(),files:[{file:"app.component.html",content:a("D6/H"),filecontent:a("Wnot")},{file:"app.component.ts",content:a("KQWg"),filecontent:a("UFK8")},{file:"app.component.scss",content:a("nNM7"),filecontent:a("1ocj")}]};let C=(()=>{class s{}return s.\u0275mod=t.Lb({type:s}),s.\u0275inj=t.Kb({factory:function(n){return new(n||s)},imports:[[l.a,e.i.forChild([{path:"",component:h,data:{examples:[u,b,x,k]}}])]]}),s})()},jcod:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  foods = [\n    { label: 'Steak', value: 'steak' },\n    { label: 'Pizza', value: 'pizza' },\n    { label: 'Tacos', value: 'tacos' },\n  ];\n  selectedFoods = [{ label: 'Pizza', value: 'pizza' }];\n  compareWith(a: any, b: any) {\n    return a.value === b.value;\n  }\n\n  cars = [\n    { id: 1, name: 'Ford' },\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n  selectedCars = [\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n  compareWith2(a: any, b: any) {\n    return a.id === b.id;\n  }\n}\n"},lNAz:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  cars = [\n    { id: 1, name: 'Ford' },\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n\n  selectedCars = [3];\n}\n"},lnpx:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxCheckboxGroupOption } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  foods: MtxCheckboxGroupOption[] = [\n    { label: <span class="hljs-string">&#x27;Steak&#x27;</span>, value: <span class="hljs-string">&#x27;steak&#x27;</span>, color: <span class="hljs-string">&#x27;primary&#x27;</span> },\n    { label: <span class="hljs-string">&#x27;Pizza&#x27;</span>, value: <span class="hljs-string">&#x27;pizza&#x27;</span>, color: <span class="hljs-string">&#x27;accent&#x27;</span> },\n    { label: <span class="hljs-string">&#x27;Tacos&#x27;</span>, value: <span class="hljs-string">&#x27;tacos&#x27;</span>, color: <span class="hljs-string">&#x27;warn&#x27;</span> },\n  ];\n  selectedFoods = [<span class="hljs-string">&#x27;steak&#x27;</span>, <span class="hljs-string">&#x27;pizza&#x27;</span>];\n\n  cars = [<span class="hljs-string">&#x27;Ford&#x27;</span>, <span class="hljs-string">&#x27;Chevrolet&#x27;</span>, <span class="hljs-string">&#x27;Dodge&#x27;</span>];\n  selectedCars = [<span class="hljs-string">&#x27;Dodge&#x27;</span>];\n}\n'},nNM7:function(s,n){s.exports='mat-checkbox {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">1rem</span>;\n}\n'},nl94:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  foods = [\n    { label: <span class="hljs-string">&#x27;Steak&#x27;</span>, value: <span class="hljs-string">&#x27;steak&#x27;</span> },\n    { label: <span class="hljs-string">&#x27;Pizza&#x27;</span>, value: <span class="hljs-string">&#x27;pizza&#x27;</span> },\n    { label: <span class="hljs-string">&#x27;Tacos&#x27;</span>, value: <span class="hljs-string">&#x27;tacos&#x27;</span> },\n  ];\n  selectedFoods = [{ label: <span class="hljs-string">&#x27;Pizza&#x27;</span>, value: <span class="hljs-string">&#x27;pizza&#x27;</span> }];\n  compareWith(a: <span class="hljs-built_in">any</span>, b: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-keyword">return</span> a.value === b.value;\n  }\n\n  cars = [\n    { id: <span class="hljs-number">1</span>, name: <span class="hljs-string">&#x27;Ford&#x27;</span> },\n    { id: <span class="hljs-number">2</span>, name: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { id: <span class="hljs-number">3</span>, name: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n  selectedCars = [\n    { id: <span class="hljs-number">2</span>, name: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { id: <span class="hljs-number">3</span>, name: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n  compareWith2(a: <span class="hljs-built_in">any</span>, b: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-keyword">return</span> a.id === b.id;\n  }\n}\n'},tEoh:function(s,n){s.exports='mat-divider {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},"vo/R":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},xGpK:function(s,n,a){"use strict";a.r(n),n.default='<mtx-checkbox-group [items]="cars"\n                    bindLabel="name"\n                    bindValue="id"\n                    [(ngModel)]="selectedCars">\n</mtx-checkbox-group>\n<p>{{selectedCars|json}}</p>\n'}}]);