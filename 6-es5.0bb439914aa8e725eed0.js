!function(){function s(s){return function(s){if(Array.isArray(s))return a(s)}(s)||function(s){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(s))return Array.from(s)}(s)||n(s)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(s,n){if(s){if("string"==typeof s)return a(s,n);var t=Object.prototype.toString.call(s).slice(8,-1);return"Object"===t&&s.constructor&&(t=s.constructor.name),"Map"===t||"Set"===t?Array.from(s):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?a(s,n):void 0}}function a(s,n){(null==n||n>s.length)&&(n=s.length);for(var a=0,t=new Array(n);a<n;a++)t[a]=s[a];return t}function t(s,n,a){return n in s?Object.defineProperty(s,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):s[n]=a,s}function e(s,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(s,t.key,t)}}function l(s,n,a){return n&&e(s.prototype,n),a&&e(s,a),s}function r(s,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");s.prototype=Object.create(n&&n.prototype,{constructor:{value:s,writable:!0,configurable:!0}}),n&&p(s,n)}function p(s,n){return(p=Object.setPrototypeOf||function(s,n){return s.__proto__=n,s})(s,n)}function o(s){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(s){return!1}}();return function(){var a,t=c(s);if(n){var e=c(this).constructor;a=Reflect.construct(t,arguments,e)}else a=t.apply(this,arguments);return i(this,a)}}function i(s,n){return!n||"object"!=typeof n&&"function"!=typeof n?function(s){if(void 0===s)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return s}(s):n}function c(s){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(s){return s.__proto__||Object.getPrototypeOf(s)})(s)}function h(s,n){if(!(s instanceof n))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"+Gtk":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>Loading<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"+wki":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"+z7n":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"/+Y5":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, summary: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, summary: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Cost&#x27;</span>, field: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"/1dg":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { PageEvent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/paginator&#x27;</span>;\n<span class="hljs-keyword">import</span> { HttpClient } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common/http&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent <span class="hljs-keyword">implements</span> OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      field: <span class="hljs-string">&#x27;name&#x27;</span>,\n      formatter: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;a href=&quot;<span class="hljs-subst">${data.html_url}</span>&quot; target=&quot;_blank&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/a&gt;`</span>,\n    },\n    { header: <span class="hljs-string">&#x27;Owner&#x27;</span>, field: <span class="hljs-string">&#x27;owner.login&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Owner Avatar&#x27;</span>, field: <span class="hljs-string">&#x27;owner.avatar_url&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;image&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Description&#x27;</span>, field: <span class="hljs-string">&#x27;description&#x27;</span>, width: <span class="hljs-string">&#x27;300px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Stars&#x27;</span>, field: <span class="hljs-string">&#x27;stargazers_count&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Forks&#x27;</span>, field: <span class="hljs-string">&#x27;forks_count&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Score&#x27;</span>, field: <span class="hljs-string">&#x27;score&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Issues&#x27;</span>, field: <span class="hljs-string">&#x27;open_issues&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Language&#x27;</span>, field: <span class="hljs-string">&#x27;language&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;License&#x27;</span>, field: <span class="hljs-string">&#x27;license.name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Home Page&#x27;</span>, field: <span class="hljs-string">&#x27;homepage&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;link&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Is forked&#x27;</span>, field: <span class="hljs-string">&#x27;fork&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Archived&#x27;</span>,\n      field: <span class="hljs-string">&#x27;archived&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;tag&#x27;</span>,\n      tag: {\n        <span class="hljs-literal">true</span>: { text: <span class="hljs-string">&#x27;Yes&#x27;</span>, color: <span class="hljs-string">&#x27;red-100&#x27;</span> },\n        <span class="hljs-literal">false</span>: { text: <span class="hljs-string">&#x27;No&#x27;</span>, color: <span class="hljs-string">&#x27;green-100&#x27;</span> },\n      },\n    },\n    { header: <span class="hljs-string">&#x27;Created Date&#x27;</span>, field: <span class="hljs-string">&#x27;created_at&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Updated Date&#x27;</span>, field: <span class="hljs-string">&#x27;updated_at&#x27;</span> },\n  ];\n  list = [];\n  total = <span class="hljs-number">0</span>;\n  isLoading = <span class="hljs-literal">true</span>;\n\n  query = {\n    q: <span class="hljs-string">&#x27;user:nzbin&#x27;</span>,\n    page: <span class="hljs-number">0</span>,\n    per_page: <span class="hljs-number">5</span>,\n  };\n\n  get params() {\n    <span class="hljs-keyword">const</span> p = <span class="hljs-built_in">Object</span>.assign({}, <span class="hljs-built_in">this</span>.query);\n    p.page += <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">return</span> p;\n  }\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> http: HttpClient</span>) {}\n\n  ngOnInit() {\n    <span class="hljs-built_in">this</span>.getData();\n  }\n\n  getData() {\n    <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">true</span>;\n    <span class="hljs-built_in">this</span>.http\n      .get(<span class="hljs-string">&#x27;https://api.github.com/search/repositories&#x27;</span>, { params: <span class="hljs-built_in">this</span>.params <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span> })\n      .subscribe(\n        <span class="hljs-function">(<span class="hljs-params">res: <span class="hljs-built_in">any</span></span>) =&gt;</span> {\n          <span class="hljs-built_in">this</span>.list = res.items;\n          <span class="hljs-built_in">this</span>.total = res.total_count;\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        }\n      );\n  }\n\n  getNextPage(e: PageEvent) {\n    <span class="hljs-built_in">this</span>.query.page = e.pageIndex;\n    <span class="hljs-built_in">this</span>.query.per_page = e.pageSize;\n    <span class="hljs-built_in">this</span>.getData();\n  }\n\n  refresh() {\n    <span class="hljs-built_in">this</span>.getData();\n  }\n}\n'},"/LrM":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [trackBy]="trackByName">\n</mtx-grid>\n'},"0LFB":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"17CO":function(s,n){s.exports='<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">1rem</span> <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},"1Lg5":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"1g1a":function(s,n,a){"use strict";a.r(n),n.default=".mat-radio-button {\n  margin: 0 1rem 1rem 0;\n}\n"},"2Gcz":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"2L3u":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"2N83":function(s,n){s.exports='{\n  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Name&quot;</span>,\n  <span class="hljs-attr">&quot;weight&quot;</span>: <span class="hljs-string">&quot;Weight&quot;</span>,\n  <span class="hljs-attr">&quot;gender&quot;</span>: <span class="hljs-string">&quot;Gender&quot;</span>,\n  <span class="hljs-attr">&quot;mobile&quot;</span>: <span class="hljs-string">&quot;Mobile&quot;</span>,\n  <span class="hljs-attr">&quot;city&quot;</span>: <span class="hljs-string">&quot;City&quot;</span>,\n  <span class="hljs-attr">&quot;operation&quot;</span>: <span class="hljs-string">&quot;Operation&quot;</span>,\n  <span class="hljs-attr">&quot;delete&quot;</span>: <span class="hljs-string">&quot;Delete&quot;</span>,\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span>: <span class="hljs-string">&quot;Confirm delete?&quot;</span>,\n  <span class="hljs-attr">&quot;close&quot;</span>: <span class="hljs-string">&quot;CLOSE&quot;</span>,\n  <span class="hljs-attr">&quot;ok&quot;</span>: <span class="hljs-string">&quot;OK&quot;</span>\n}\n'},"2OhO":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"2eyz":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = <span class="hljs-literal">true</span>;\n  columnMovable = <span class="hljs-literal">true</span>;\n}\n'},"2z1R":function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-bottom: 1rem;\n}\n"},"3qDo":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let lang of langs&quot;</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>\n    {{lang.label}}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"48nt":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},"5dWc":function(s,n,a){"use strict";a.r(n),n.default=":host ::ng-deep .label {\n  padding: 5px 10px;\n  border-radius: 999px;\n  background-color: #ffb74d;\n}\n"},"5w79":function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('statusTpl', { static: true }) statusTpl: TemplateRef<any>;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    this.columns = [\n      { header: 'Name', field: 'name' },\n      { header: 'Weight', field: 'weight' },\n      { header: 'Gender', field: 'gender' },\n      { header: 'Mobile', field: 'mobile' },\n      { header: 'City', field: 'city' },\n      { header: 'Status', field: 'status', cellTemplate: this.statusTpl },\n    ];\n  }\n}\n"},"705O":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [pageOnFront]="false"\n          [showPaginator]="false">\n</mtx-grid>\n'},"7BMS":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},"8FVU":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [cellTemplate]="{ city: cityTpl }">\n</mtx-grid>\n\n<ng-template #cityTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="primary">{{row.city}}</button>\n</ng-template>\n'},"8S/e":function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowHover">Hover</mat-checkbox>\n  <mat-checkbox [(ngModel)]="rowStriped">Striped</mat-checkbox>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowHover]="rowHover"\n          [rowStriped]="rowStriped"\n          [rowSelectable]="true">\n</mtx-grid>\n'},"8cD9":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"93A+":function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span>,\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},"9QST":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = <span class="hljs-literal">true</span>;\n  rowStriped = <span class="hljs-literal">false</span>;\n}\n'},AYo8:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},AhII:function(s,n){s.exports='{\n  <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;\u59d3\u540d&quot;</span>,\n  <span class="hljs-attr">&quot;weight&quot;</span>: <span class="hljs-string">&quot;\u4f53\u91cd&quot;</span>,\n  <span class="hljs-attr">&quot;gender&quot;</span>: <span class="hljs-string">&quot;\u6027\u522b&quot;</span>,\n  <span class="hljs-attr">&quot;mobile&quot;</span>: <span class="hljs-string">&quot;\u624b\u673a&quot;</span>,\n  <span class="hljs-attr">&quot;city&quot;</span>: <span class="hljs-string">&quot;\u57ce\u5e02&quot;</span>,\n  <span class="hljs-attr">&quot;operation&quot;</span>: <span class="hljs-string">&quot;\u64cd\u4f5c&quot;</span>,\n  <span class="hljs-attr">&quot;delete&quot;</span>: <span class="hljs-string">&quot;\u5220\u9664&quot;</span>,\n  <span class="hljs-attr">&quot;confirm_delete&quot;</span>: <span class="hljs-string">&quot;\u786e\u8ba4\u5220\u9664\uff1f&quot;</span>,\n  <span class="hljs-attr">&quot;close&quot;</span>: <span class="hljs-string">&quot;\u5173\u95ed&quot;</span>,\n  <span class="hljs-attr">&quot;ok&quot;</span>: <span class="hljs-string">&quot;\u786e\u5b9a&quot;</span>\n}\n'},Aodh:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},BcXy:function(s,n,a){"use strict";a.r(n),n.default='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  <mat-radio-button *ngFor="let lang of langs" [value]="lang.value">\n    {{lang.label}}\n  </mat-radio-button>\n</mat-radio-group>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [columnHideable]="true"\n          [columnMovable]="true">\n</mtx-grid>\n'},CDYS:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', sortable: true },\n    { header: 'Weight', field: 'weight', sortable: true },\n    { header: 'Gender', field: 'gender', sortable: true },\n    { header: 'Mobile', field: 'mobile', sortable: false },\n    {\n      header: 'City',\n      field: 'city',\n      sortable: true,\n      sortProp: {\n        arrowPosition: 'before',\n        disableClear: true,\n        start: 'desc',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},CSbO:function(s,n,a){"use strict";a.r(n),n.default=".mat-raised-button {\n  margin-bottom: 1rem;\n}\n"},DJtL:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Operation&#x27;</span>,\n      field: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      width: <span class="hljs-string">&#x27;160px&#x27;</span>,\n      pinned: <span class="hljs-string">&#x27;right&#x27;</span>,\n      right: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      buttons: [\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          text: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          icon: <span class="hljs-string">&#x27;file_copy&#x27;</span>,\n          tooltip: <span class="hljs-string">&#x27;copy&#x27;</span>,\n          disabled: <span class="hljs-literal">true</span>,\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;copy&#x27;</span>);\n          },\n        },\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          text: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          icon: <span class="hljs-string">&#x27;edit&#x27;</span>,\n          tooltip: <span class="hljs-string">&#x27;Edit&#x27;</span>,\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;edit&#x27;</span>);\n          },\n        },\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;icon&#x27;</span>,\n          text: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          icon: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          tooltip: <span class="hljs-string">&#x27;Delete&#x27;</span>,\n          color: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          pop: <span class="hljs-literal">true</span>,\n          popTitle: <span class="hljs-string">&#x27;Confirm delete?&#x27;</span>,\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;delete&#x27;</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},DtCM:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},E8jj:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit, ViewChild, TemplateRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent <span class="hljs-keyword">implements</span> OnInit {\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">&#x27;statusTpl&#x27;</span>, { <span class="hljs-keyword">static</span>: <span class="hljs-literal">true</span> }) statusTpl: TemplateRef&lt;<span class="hljs-built_in">any</span>&gt;;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    <span class="hljs-built_in">this</span>.columns = [\n      { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n      { header: <span class="hljs-string">&#x27;Status&#x27;</span>, field: <span class="hljs-string">&#x27;status&#x27;</span>, cellTemplate: <span class="hljs-built_in">this</span>.statusTpl },\n    ];\n  }\n}\n'},FoZ3:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showSummary</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">summaryTemplate</span>]=<span class="hljs-string">&quot;{&#x27;cost&#x27;: footerTpl}&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">footerTpl</span> <span class="hljs-attr">let-data</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{{getTotalCost(data) | currency}}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},G7ct:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},GLZs:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">headerTemplate</span>]=<span class="hljs-string">&quot;headerTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">headerTpl</span> <span class="hljs-attr">let-col</span>&gt;</span>\n  {{col.header}} <span class="hljs-tag">&lt;<span class="hljs-name">mat-icon</span> [<span class="hljs-attr">matTooltip</span>]=<span class="hljs-string">&quot;col.description&quot;</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">mat-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},GWAD:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    {\n      header: 'Weight',\n      field: 'weight',\n      type: 'number',\n      typeParameter: {\n        digitsInfo: '1.2-2',\n      },\n    },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Date',\n      field: 'date',\n      type: 'date',\n      typeParameter: {\n        format: 'yyyy-MM-dd',\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  trackByName(index: number, item: any) {\n    return item.name;\n  }\n}\n"},GgQz:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span>, description: <span class="hljs-string">&#x27;Info about the city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},IFLB:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = [];\n}\n'},J5dd:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"JUl+":function(s,n){s.exports='<span class="hljs-selector-class">.mat-raised-button</span> {\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},JV4J:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [headerTemplate]="headerTpl">\n</mtx-grid>\n\n<ng-template #headerTpl let-col>\n  {{col.header}} <mat-icon [matTooltip]="col.description">info</mat-icon>\n</ng-template>\n'},KXed:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},LPdT:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: any) {\n    return data.reduce((acc: any, value: any) => acc + value, 0);\n  }\n}\n"},Lj52:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = true;\n}\n"},Meuw:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},Mtr3:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},NE6O:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">statusTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slide-toggle</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">&quot;row.status&quot;</span>&gt;</span>Slide me!<span class="hljs-tag">&lt;/<span class="hljs-name">mat-slide-toggle</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},OduZ:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="columnHideable">Column Hiding</mat-checkbox>\n  <mat-checkbox [(ngModel)]="columnMovable">Column Moving</mat-checkbox>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [toolbarTitle]="\'Data Grid\'"\n          [columnHideable]="columnHideable"\n          [columnMovable]="columnMovable">\n</mtx-grid>\n'},OsdS:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, showExpand: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},PM5x:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span>, sortable: <span class="hljs-literal">false</span> },\n    {\n      header: <span class="hljs-string">&#x27;City&#x27;</span>,\n      field: <span class="hljs-string">&#x27;city&#x27;</span>,\n      sortable: <span class="hljs-literal">true</span>,\n      sortProp: {\n        arrowPosition: <span class="hljs-string">&#x27;before&#x27;</span>,\n        disableClear: <span class="hljs-literal">true</span>,\n        start: <span class="hljs-string">&#x27;desc&#x27;</span>,\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},QDm0:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},R38t:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n<span class="hljs-keyword">import</span> { TranslateService } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;name&#x27;</span>),\n      field: <span class="hljs-string">&#x27;name&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;weight&#x27;</span>),\n      field: <span class="hljs-string">&#x27;weight&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;gender&#x27;</span>),\n      field: <span class="hljs-string">&#x27;gender&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;mobile&#x27;</span>),\n      field: <span class="hljs-string">&#x27;mobile&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;city&#x27;</span>),\n      field: <span class="hljs-string">&#x27;city&#x27;</span>,\n    },\n    {\n      header: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;operation&#x27;</span>),\n      field: <span class="hljs-string">&#x27;operation&#x27;</span>,\n      width: <span class="hljs-string">&#x27;40px&#x27;</span>,\n      pinned: <span class="hljs-string">&#x27;right&#x27;</span>,\n      right: <span class="hljs-string">&#x27;0px&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;button&#x27;</span>,\n      buttons: [\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;basic&#x27;</span>,\n          text: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          icon: <span class="hljs-string">&#x27;delete&#x27;</span>,\n          tooltip: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;delete&#x27;</span>),\n          color: <span class="hljs-string">&#x27;warn&#x27;</span>,\n          pop: <span class="hljs-literal">true</span>,\n          popTitle: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;confirm_delete&#x27;</span>),\n          popCloseText: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;close&#x27;</span>),\n          popOkText: <span class="hljs-built_in">this</span>.translate.stream(<span class="hljs-string">&#x27;ok&#x27;</span>),\n          click: <span class="hljs-function">() =&gt;</span> {\n            alert(<span class="hljs-string">&#x27;delete&#x27;</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  langs = [\n    { label: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, value: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { label: <span class="hljs-string">&#x27;English&#x27;</span>, value: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> translate: TranslateService</span>) {\n    translate.addLangs(<span class="hljs-built_in">this</span>.langs.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.value));\n    translate.setDefaultLang(<span class="hljs-built_in">this</span>.defaultlang);\n  }\n}\n'},RMCV:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          sortOnFront="true"\n          sortActive="name"\n          sortDirection="asc"\n          sortDisableClear="true"\n          sortDisabled="false"\n          sortStart="asc"\n          (sortChange)="log($event)">\n</mtx-grid>\n'},Reqn:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Position', field: 'position', width: '200px' },\n    { header: 'Name', field: 'name', width: '200px', pinned: 'left' },\n    { header: 'tags', field: 'tag.0.value', width: '200px' },\n    { header: 'Weight', field: 'weight', width: '200px', pinned: 'left' },\n    { header: 'Symbol', field: 'symbol', width: '200px' },\n    { header: 'Gender', field: 'gender', width: '200px' },\n    { header: 'Mobile', field: 'mobile', width: '200px' },\n    { header: 'Tele', field: 'tele', width: '200px' },\n    { header: 'City', field: 'city', width: '200px' },\n    { header: 'Address', field: 'address', width: '200px' },\n    { header: 'Date', field: 'date', width: '200px' },\n    { header: 'Website', field: 'website', width: '200px' },\n    { header: 'Company', field: 'company', width: '200px' },\n    { header: 'Email', field: 'email', width: '200px', pinned: 'right' },\n    { header: 'Status', field: 'status', type: 'boolean', width: '200px' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},ReuQ:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},SXGs:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = [];\n}\n"},TGGQ:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnHideable&quot;</span>&gt;</span>Column Hiding<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;columnMovable&quot;</span>&gt;</span>Column Moving<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">toolbarTitle</span>]=<span class="hljs-string">&quot;&#x27;Data Grid&#x27;&quot;</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">&quot;columnHideable&quot;</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">&quot;columnMovable&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},TafY:function(s,n){s.exports='<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> EXAMPLE_DATA: <span class="hljs-built_in">any</span>[] = [\n  {\n    position: <span class="hljs-number">1</span>,\n    name: <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">&#x27;red&#x27;</span>,\n        value: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],\n      },\n    ],\n    weight: <span class="hljs-number">10.811</span>,\n    symbol: <span class="hljs-string">&#x27;B&#x27;</span>,\n    gender: <span class="hljs-string">&#x27;male&#x27;</span>,\n    mobile: <span class="hljs-string">&#x27;13198765432&#x27;</span>,\n    tele: <span class="hljs-string">&#x27;567891234&#x27;</span>,\n    city: <span class="hljs-string">&#x27;Berlin&#x27;</span>,\n    address: <span class="hljs-string">&#x27;Bernauer Str.111,13355&#x27;</span>,\n    date: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    website: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    company: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    email: <span class="hljs-string">&#x27;Boron@gmail.com&#x27;</span>,\n    status: <span class="hljs-literal">false</span>,\n    cost: <span class="hljs-number">4</span>\n  },\n  {\n    position: <span class="hljs-number">2</span>,\n    name: <span class="hljs-string">&#x27;Helium&#x27;</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">&#x27;blue&#x27;</span>,\n        value: [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>],\n      },\n    ],\n    weight: <span class="hljs-number">8.0026</span>,\n    symbol: <span class="hljs-string">&#x27;He&#x27;</span>,\n    gender: <span class="hljs-string">&#x27;female&#x27;</span>,\n    mobile: <span class="hljs-string">&#x27;13034676675&#x27;</span>,\n    tele: <span class="hljs-string">&#x27;80675432&#x27;</span>,\n    city: <span class="hljs-string">&#x27;Shanghai&#x27;</span>,\n    address: <span class="hljs-string">&#x27;88 Songshan Road&#x27;</span>,\n    date: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    website: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    company: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    email: <span class="hljs-string">&#x27;Helium@gmail.com&#x27;</span>,\n    status: <span class="hljs-literal">true</span>,\n    cost: <span class="hljs-number">5</span>\n  },\n  {\n    position: <span class="hljs-number">3</span>,\n    name: <span class="hljs-string">&#x27;Nitrogen&#x27;</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">&#x27;yellow&#x27;</span>,\n        value: [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>],\n      },\n    ],\n    weight: <span class="hljs-number">14.0067</span>,\n    symbol: <span class="hljs-string">&#x27;N&#x27;</span>,\n    gender: <span class="hljs-string">&#x27;male&#x27;</span>,\n    mobile: <span class="hljs-string">&#x27;15811112222&#x27;</span>,\n    tele: <span class="hljs-string">&#x27;345678912&#x27;</span>,\n    city: <span class="hljs-string">&#x27;Sydney&#x27;</span>,\n    address: <span class="hljs-string">&#x27;Circular Quay, Sydney NSW 2000&#x27;</span>,\n    date: <span class="hljs-string">&#x27;1423456765768&#x27;</span>,\n    website: <span class="hljs-string">&#x27;www.matero.com&#x27;</span>,\n    company: <span class="hljs-string">&#x27;matero&#x27;</span>,\n    email: <span class="hljs-string">&#x27;Nitrogen@gmail.com&#x27;</span>,\n    status: <span class="hljs-literal">true</span>,\n    cost: <span class="hljs-number">2</span>\n  },\n];\n'},"UN+l":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Position&#x27;</span>, field: <span class="hljs-string">&#x27;position&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span>, pinned: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;tags&#x27;</span>, field: <span class="hljs-string">&#x27;tag.0.value&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span>, pinned: <span class="hljs-string">&#x27;left&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Symbol&#x27;</span>, field: <span class="hljs-string">&#x27;symbol&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Tele&#x27;</span>, field: <span class="hljs-string">&#x27;tele&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Address&#x27;</span>, field: <span class="hljs-string">&#x27;address&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Date&#x27;</span>, field: <span class="hljs-string">&#x27;date&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Website&#x27;</span>, field: <span class="hljs-string">&#x27;website&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Company&#x27;</span>, field: <span class="hljs-string">&#x27;company&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Email&#x27;</span>, field: <span class="hljs-string">&#x27;email&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span>, pinned: <span class="hljs-string">&#x27;right&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Status&#x27;</span>, field: <span class="hljs-string">&#x27;status&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;boolean&#x27;</span>, width: <span class="hljs-string">&#x27;200px&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},UXFV:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},W9LF:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [showColumnMenuButton]="false"\n          [toolbarTemplate]="toolbarTpl">\n</mtx-grid>\n\n<ng-template #toolbarTpl>\n  <input placeholder="Search">\n</ng-template>\n'},WJ6K:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},XHzA:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},YPR1:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowSelectable&quot;</span>&gt;</span>Row selectable<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>&gt;</span>Hide checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;multiSelectable&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>Single<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>Multiple<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">multiSelectable</span>]=<span class="hljs-string">&quot;multiSelectable&quot;</span>\n          [<span class="hljs-attr">hideRowSelectionCheckbox</span>]=<span class="hljs-string">&quot;hideRowSelectionCheckbox&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;rowSelectable&quot;</span>\n          [<span class="hljs-attr">rowSelected</span>]=<span class="hljs-string">&quot;rowSelected&quot;</span>\n          [<span class="hljs-attr">rowSelectionFormatter</span>]=<span class="hljs-string">&quot;rowSelectionFormatter&quot;</span>\n          (<span class="hljs-attr">rowSelectionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>\n          (<span class="hljs-attr">cellSelectionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},YYJN:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},Z61D:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},ZjNe:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = true;\n  columnMovable = true;\n}\n"},ai1J:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;refresh()&quot;</span>&gt;</span>Refresh<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">length</span>]=<span class="hljs-string">&quot;total&quot;</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">&quot;isLoading&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">pageIndex</span>]=<span class="hljs-string">&quot;query.page&quot;</span>\n          [<span class="hljs-attr">pageSize</span>]=<span class="hljs-string">&quot;query.per_page&quot;</span>\n          [<span class="hljs-attr">pageSizeOptions</span>]=<span class="hljs-string">&quot;[5,10,20]&quot;</span>\n          (<span class="hljs-attr">page</span>)=<span class="hljs-string">&quot;getNextPage($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},bxlB:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},cBui:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span>, summary: <span class="hljs-string">&#x27;Total&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span>, summary: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Cost&#x27;</span>, field: <span class="hljs-string">&#x27;cost&#x27;</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;currency&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-keyword">return</span> data.reduce(<span class="hljs-function">(<span class="hljs-params">acc: <span class="hljs-built_in">any</span>, value: <span class="hljs-built_in">any</span></span>) =&gt;</span> acc + value, <span class="hljs-number">0</span>);\n  }\n}\n'},"df+T":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowHover&quot;</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;rowStriped&quot;</span>&gt;</span>Striped<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">rowHover</span>]=<span class="hljs-string">&quot;rowHover&quot;</span>\n          [<span class="hljs-attr">rowStriped</span>]=<span class="hljs-string">&quot;rowStriped&quot;</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},dzW7:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = true;\n  rowStriped = false;\n}\n"},ec7O:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},ecK2:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">showPaginator</span>]=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},gcNB:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [expandable]="true"\n          [expansionTemplate]="expansionTpl"\n          (expansionChange)="log($event)">\n</mtx-grid>\n\n<ng-template #expansionTpl let-row>\n  {{row.name}}\n</ng-template>\n'},gfyD:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = <span class="hljs-literal">true</span>;\n}\n'},ggKf:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},gqKb:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<span class=\"label\">${data.name}</span>`,\n    },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},h5uV:function(s,n,a){"use strict";a.r(n),n.default='<mat-checkbox [(ngModel)]="isLoading">Loading</mat-checkbox>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [loading]="isLoading">\n</mtx-grid>\n'},hilW:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">trackBy</span>]=<span class="hljs-string">&quot;trackByName&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},hkiY:function(s,n,a){"use strict";a.r(n),n.default='<button mat-raised-button color="primary" (click)="refresh()">Refresh</button>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [length]="total"\n          [loading]="isLoading"\n          [pageOnFront]="false"\n          [pageIndex]="query.page"\n          [pageSize]="query.per_page"\n          [pageSizeOptions]="[5,10,20]"\n          (page)="getNextPage($event)">\n</mtx-grid>\n'},i0wx:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          <span class="hljs-attr">sortOnFront</span>=<span class="hljs-string">&quot;true&quot;</span>\n          <span class="hljs-attr">sortActive</span>=<span class="hljs-string">&quot;name&quot;</span>\n          <span class="hljs-attr">sortDirection</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          <span class="hljs-attr">sortDisableClear</span>=<span class="hljs-string">&quot;true&quot;</span>\n          <span class="hljs-attr">sortDisabled</span>=<span class="hljs-string">&quot;false&quot;</span>\n          <span class="hljs-attr">sortStart</span>=<span class="hljs-string">&quot;asc&quot;</span>\n          (<span class="hljs-attr">sortChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},iBo5:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', showExpand: true },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},jH17:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},"jXi+":function(s,n,a){"use strict";a.r(n),n.default='{\n  "name": "Name",\n  "weight": "Weight",\n  "gender": "Gender",\n  "mobile": "Mobile",\n  "city": "City",\n  "operation": "Operation",\n  "delete": "Delete",\n  "confirm_delete": "Confirm delete?",\n  "close": "CLOSE",\n  "ok": "OK"\n}\n'},lKjp:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Operation',\n      field: 'operation',\n      width: '160px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'icon',\n          text: 'copy',\n          icon: 'file_copy',\n          tooltip: 'copy',\n          disabled: true,\n          click: () => {\n            alert('copy');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'edit',\n          icon: 'edit',\n          tooltip: 'Edit',\n          click: () => {\n            alert('edit');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'delete',\n          icon: 'delete',\n          tooltip: 'Delete',\n          color: 'warn',\n          pop: true,\n          popTitle: 'Confirm delete?',\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},lZ76:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">cellTemplate</span>]=<span class="hljs-string">&quot;{ city: cityTpl }&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">cityTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">&quot;colDef&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>{{row.city}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},m8xE:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridRowSelectionFormatter } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = <span class="hljs-literal">true</span>;\n  hideRowSelectionCheckbox = <span class="hljs-literal">false</span>;\n  rowSelectable = <span class="hljs-literal">true</span>;\n  rowSelected = EXAMPLE_DATA.slice(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">&#x27;Boron&#x27;</span>,\n    hideCheckbox: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">&#x27;John&#x27;</span>,\n  };\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},nJyt:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},nga3:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},oC3v:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},oXCI:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},oioM:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},pxEU:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">showColumnMenuButton</span>]=<span class="hljs-string">&quot;false&quot;</span>\n          [<span class="hljs-attr">toolbarTemplate</span>]=<span class="hljs-string">&quot;toolbarTpl&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">toolbarTpl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Search&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},qJlr:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">&#x27;Name&#x27;</span>, field: <span class="hljs-string">&#x27;name&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Weight&#x27;</span>,\n      field: <span class="hljs-string">&#x27;weight&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;number&#x27;</span>,\n      typeParameter: {\n        digitsInfo: <span class="hljs-string">&#x27;1.2-2&#x27;</span>,\n      },\n    },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n    {\n      header: <span class="hljs-string">&#x27;Date&#x27;</span>,\n      field: <span class="hljs-string">&#x27;date&#x27;</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;date&#x27;</span>,\n      typeParameter: {\n        format: <span class="hljs-string">&#x27;yyyy-MM-dd&#x27;</span>,\n      },\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  trackByName(index: <span class="hljs-built_in">number</span>, item: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-keyword">return</span> item.name;\n  }\n}\n'},qQdu:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showSummary]="true"\n          [summaryTemplate]="{\'cost\': footerTpl}">\n</mtx-grid>\n\n<ng-template #footerTpl let-data>\n  <div>{{getTotalCost(data) | currency}}</div>\n</ng-template>\n'},r6oY:function(s,n){s.exports=':host ::ng-deep .label {\n  padding: <span class="hljs-number">5px</span> <span class="hljs-number">10px</span>;\n  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">999px</span>;\n  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ffb74d</span>;\n}\n'},rTxb:function(a,e,p){"use strict";p.r(e),p.d(e,"TranslateHttpLoaderFactory",(function(){return Is})),p.d(e,"DataGridModule",(function(){return zs}));var i,c,d=p("sEIs"),m=p("vobO"),u=p("M0ag"),g=p("EM62"),x=p("ROBh"),f=p("9bRT"),j=p("P4Xx"),b=p("qZtG"),y=p("i9xl"),w=p("J+dc"),C=p("wqq/"),k=p("YtkY"),v=p("5uDM"),M=p("TLy2"),q=function s(){h(this,s)},A=((i=function(s){r(a,s);var n=o(a);function a(){return h(this,a),n.apply(this,arguments)}return l(a,[{key:"getTranslation",value:function(s){return Object(x.a)({})}}]),a}(q)).\u0275fac=function(s){return S(s||i)},i.\u0275prov=g.Jb({token:i,factory:i.\u0275fac}),i),S=g.Vb(A),T=function s(){h(this,s)},L=((c=function(){function s(){h(this,s)}return l(s,[{key:"handle",value:function(s){return s.key}}]),s}()).\u0275fac=function(s){return new(s||c)},c.\u0275prov=g.Jb({token:c,factory:c.\u0275fac}),c);function _(s){return null!=s}function E(s){return s&&"object"==typeof s&&!Array.isArray(s)}var D,O,G,P,N=function s(){h(this,s)},U=((D=function(s){r(a,s);var n=o(a);function a(){var s;return h(this,a),(s=n.apply(this,arguments)).templateMatcher=/{{\s?([^{}\s]*)\s?}}/g,s}return l(a,[{key:"interpolate",value:function(s,n){return"string"==typeof s?this.interpolateString(s,n):"function"==typeof s?this.interpolateFunction(s,n):s}},{key:"getValue",value:function(s,n){var a="string"==typeof n?n.split("."):[n];n="";do{n+=a.shift(),!_(s)||!_(s[n])||"object"!=typeof s[n]&&a.length?a.length?n+=".":s=void 0:(s=s[n],n="")}while(a.length);return s}},{key:"interpolateFunction",value:function(s,n){return s(n)}},{key:"interpolateString",value:function(s,n){var a=this;return n?s.replace(this.templateMatcher,(function(s,t){var e=a.getValue(n,t);return _(e)?e:s})):s}}]),a}(N)).\u0275fac=function(s){return X(s||D)},D.\u0275prov=g.Jb({token:D,factory:D.\u0275fac}),D),X=g.Vb(U),H=function s(){h(this,s)},B=((O=function(s){r(a,s);var n=o(a);function a(){return h(this,a),n.apply(this,arguments)}return l(a,[{key:"compile",value:function(s,n){return s}},{key:"compileTranslations",value:function(s,n){return s}}]),a}(H)).\u0275fac=function(s){return W(s||O)},O.\u0275prov=g.Jb({token:O,factory:O.\u0275fac}),O),W=g.Vb(B),R=function s(){h(this,s),this.currentLang=this.defaultLang,this.translations={},this.langs=[],this.onTranslationChange=new g.o,this.onLangChange=new g.o,this.onDefaultLangChange=new g.o},I=new g.s("USE_STORE"),F=new g.s("USE_DEFAULT_LANG"),z=new g.s("DEFAULT_LANGUAGE"),J=new g.s("USE_EXTEND"),K=((P=function(){function s(n,a,t,e,l){var r=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],p=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],i=arguments.length>8?arguments[8]:void 0;h(this,s),this.store=n,this.currentLoader=a,this.compiler=t,this.parser=e,this.missingTranslationHandler=l,this.useDefaultLang=r,this.isolate=p,this.extend=o,this.pending=!1,this._onTranslationChange=new g.o,this._onLangChange=new g.o,this._onDefaultLangChange=new g.o,this._langs=[],this._translations={},this._translationRequests={},i&&this.setDefaultLang(i)}return l(s,[{key:"setDefaultLang",value:function(s){var n=this;if(s!==this.defaultLang){var a=this.retrieveTranslations(s);void 0!==a?(null==this.defaultLang&&(this.defaultLang=s),a.pipe(Object(w.a)(1)).subscribe((function(a){n.changeDefaultLang(s)}))):this.changeDefaultLang(s)}}},{key:"getDefaultLang",value:function(){return this.defaultLang}},{key:"use",value:function(s){var n=this;if(s===this.currentLang)return Object(x.a)(this.translations[s]);var a=this.retrieveTranslations(s);return void 0!==a?(this.currentLang||(this.currentLang=s),a.pipe(Object(w.a)(1)).subscribe((function(a){n.changeLang(s)})),a):(this.changeLang(s),Object(x.a)(this.translations[s]))}},{key:"retrieveTranslations",value:function(s){var n;return(void 0===this.translations[s]||this.extend)&&(this._translationRequests[s]=this._translationRequests[s]||this.getTranslation(s),n=this._translationRequests[s]),n}},{key:"getTranslation",value:function(s){var n=this;this.pending=!0;var a=this.currentLoader.getTranslation(s).pipe(Object(C.a)(1),Object(w.a)(1));return this.loadingTranslations=a.pipe(Object(k.a)((function(a){return n.compiler.compileTranslations(a,s)})),Object(C.a)(1),Object(w.a)(1)),this.loadingTranslations.subscribe({next:function(a){n.translations[s]=n.extend&&n.translations[s]?Object.assign(Object.assign({},a),n.translations[s]):a,n.updateLangs(),n.pending=!1},error:function(s){n.pending=!1}}),a}},{key:"setTranslation",value:function(s,n){var a=arguments.length>2&&void 0!==arguments[2]&&arguments[2];n=this.compiler.compileTranslations(n,s),this.translations[s]=(a||this.extend)&&this.translations[s]?function s(n,a){var e=Object.assign({},n);return E(n)&&E(a)&&Object.keys(a).forEach((function(l){E(a[l])&&l in n?e[l]=s(n[l],a[l]):Object.assign(e,t({},l,a[l]))})),e}(this.translations[s],n):n,this.updateLangs(),this.onTranslationChange.emit({lang:s,translations:this.translations[s]})}},{key:"getLangs",value:function(){return this.langs}},{key:"addLangs",value:function(s){var n=this;s.forEach((function(s){-1===n.langs.indexOf(s)&&n.langs.push(s)}))}},{key:"updateLangs",value:function(){this.addLangs(Object.keys(this.translations))}},{key:"getParsedResult",value:function(s,a,t){var e;if(a instanceof Array){var l,r={},p=!1,o=function(s,a){var t;if("undefined"==typeof Symbol||null==s[Symbol.iterator]){if(Array.isArray(s)||(t=n(s))||a&&s&&"number"==typeof s.length){t&&(s=t);var e=0,l=function(){};return{s:l,n:function(){return e>=s.length?{done:!0}:{done:!1,value:s[e++]}},e:function(s){throw s},f:l}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,p=!0,o=!1;return{s:function(){t=s[Symbol.iterator]()},n:function(){var s=t.next();return p=s.done,s},e:function(s){o=!0,r=s},f:function(){try{p||null==t.return||t.return()}finally{if(o)throw r}}}}(a);try{for(o.s();!(l=o.n()).done;){var i=l.value;r[i]=this.getParsedResult(s,i,t),Object(f.a)(r[i])&&(p=!0)}}catch(d){o.e(d)}finally{o.f()}if(p){var c=a.map((function(s){return Object(f.a)(r[s])?r[s]:Object(x.a)(r[s])}));return Object(j.a)(c).pipe(Object(k.a)((function(s){var n={};return s.forEach((function(s,t){n[a[t]]=s})),n})))}return r}if(s&&(e=this.parser.interpolate(this.parser.getValue(s,a),t)),void 0===e&&null!=this.defaultLang&&this.defaultLang!==this.currentLang&&this.useDefaultLang&&(e=this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang],a),t)),void 0===e){var h={key:a,translateService:this};void 0!==t&&(h.interpolateParams=t),e=this.missingTranslationHandler.handle(h)}return void 0!==e?e:a}},{key:"get",value:function(s,n){var a=this;if(!_(s)||!s.length)throw new Error('Parameter "key" required');if(this.pending)return this.loadingTranslations.pipe(Object(v.a)((function(t){return t=a.getParsedResult(t,s,n),Object(f.a)(t)?t:Object(x.a)(t)})));var t=this.getParsedResult(this.translations[this.currentLang],s,n);return Object(f.a)(t)?t:Object(x.a)(t)}},{key:"getStreamOnTranslationChange",value:function(s,n){var a=this;if(!_(s)||!s.length)throw new Error('Parameter "key" required');return Object(b.a)(Object(y.a)((function(){return a.get(s,n)})),this.onTranslationChange.pipe(Object(M.a)((function(t){var e=a.getParsedResult(t.translations,s,n);return"function"==typeof e.subscribe?e:Object(x.a)(e)}))))}},{key:"stream",value:function(s,n){var a=this;if(!_(s)||!s.length)throw new Error('Parameter "key" required');return Object(b.a)(Object(y.a)((function(){return a.get(s,n)})),this.onLangChange.pipe(Object(M.a)((function(t){var e=a.getParsedResult(t.translations,s,n);return Object(f.a)(e)?e:Object(x.a)(e)}))))}},{key:"instant",value:function(s,n){if(!_(s)||!s.length)throw new Error('Parameter "key" required');var a=this.getParsedResult(this.translations[this.currentLang],s,n);if(Object(f.a)(a)){if(s instanceof Array){var t={};return s.forEach((function(n,a){t[s[a]]=s[a]})),t}return s}return a}},{key:"set",value:function(s,n){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.currentLang;this.translations[a][s]=this.compiler.compile(n,a),this.updateLangs(),this.onTranslationChange.emit({lang:a,translations:this.translations[a]})}},{key:"changeLang",value:function(s){this.currentLang=s,this.onLangChange.emit({lang:s,translations:this.translations[s]}),null==this.defaultLang&&this.changeDefaultLang(s)}},{key:"changeDefaultLang",value:function(s){this.defaultLang=s,this.onDefaultLangChange.emit({lang:s,translations:this.translations[s]})}},{key:"reloadLang",value:function(s){return this.resetLang(s),this.getTranslation(s)}},{key:"resetLang",value:function(s){this._translationRequests[s]=void 0,this.translations[s]=void 0}},{key:"getBrowserLang",value:function(){if("undefined"!=typeof window&&void 0!==window.navigator){var s=window.navigator.languages?window.navigator.languages[0]:null;return void 0!==(s=s||window.navigator.language||window.navigator.browserLanguage||window.navigator.userLanguage)?(-1!==s.indexOf("-")&&(s=s.split("-")[0]),-1!==s.indexOf("_")&&(s=s.split("_")[0]),s):void 0}}},{key:"getBrowserCultureLang",value:function(){if("undefined"!=typeof window&&void 0!==window.navigator){var s=window.navigator.languages?window.navigator.languages[0]:null;return s=s||window.navigator.language||window.navigator.browserLanguage||window.navigator.userLanguage}}},{key:"onTranslationChange",get:function(){return this.isolate?this._onTranslationChange:this.store.onTranslationChange}},{key:"onLangChange",get:function(){return this.isolate?this._onLangChange:this.store.onLangChange}},{key:"onDefaultLangChange",get:function(){return this.isolate?this._onDefaultLangChange:this.store.onDefaultLangChange}},{key:"defaultLang",get:function(){return this.isolate?this._defaultLang:this.store.defaultLang},set:function(s){this.isolate?this._defaultLang=s:this.store.defaultLang=s}},{key:"currentLang",get:function(){return this.isolate?this._currentLang:this.store.currentLang},set:function(s){this.isolate?this._currentLang=s:this.store.currentLang=s}},{key:"langs",get:function(){return this.isolate?this._langs:this.store.langs},set:function(s){this.isolate?this._langs=s:this.store.langs=s}},{key:"translations",get:function(){return this.isolate?this._translations:this.store.translations},set:function(s){this.isolate?this._translations=s:this.store.translations=s}}]),s}()).\u0275fac=function(s){return new(s||P)(g.Xb(R),g.Xb(q),g.Xb(H),g.Xb(N),g.Xb(T),g.Xb(F),g.Xb(I),g.Xb(J),g.Xb(z))},P.\u0275prov=g.Jb({token:P,factory:P.\u0275fac}),P),V=((G=function(){function s(){h(this,s)}return l(s,null,[{key:"forRoot",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{ngModule:s,providers:[n.loader||{provide:q,useClass:A},n.compiler||{provide:H,useClass:B},n.parser||{provide:N,useClass:U},n.missingTranslationHandler||{provide:T,useClass:L},R,{provide:I,useValue:n.isolate},{provide:F,useValue:n.useDefaultLang},{provide:J,useValue:n.extend},{provide:z,useValue:n.defaultLanguage},K]}}},{key:"forChild",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{ngModule:s,providers:[n.loader||{provide:q,useClass:A},n.compiler||{provide:H,useClass:B},n.parser||{provide:N,useClass:U},n.missingTranslationHandler||{provide:T,useClass:L},{provide:I,useValue:n.isolate},{provide:F,useValue:n.useDefaultLang},{provide:J,useValue:n.extend},{provide:z,useValue:n.defaultLanguage},K]}}}]),s}()).\u0275mod=g.Lb({type:G}),G.\u0275inj=g.Kb({factory:function(s){return new(s||G)}}),G),Y=function(){function s(n){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"/assets/i18n/",t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".json";h(this,s),this.http=n,this.prefix=a,this.suffix=t}return l(s,[{key:"getTranslation",value:function(s){return this.http.get("".concat(this.prefix).concat(s).concat(this.suffix))}}]),s}(),$=p("PBFl"),Q=p("2kYt"),Z=p("5S+f"),ss=p("Pg5x");function ns(s,n){if(1&s&&(g.Rb(0),g.Ob(1,"doc-heading",3),g.Ob(2,"example-viewer",4),g.Qb()),2&s){var a=n.$implicit;g.Bb(1),g.nc("text",a.title),g.Bb(1),g.nc("exampleData",a)}}function as(s,n){if(1&s&&(g.Rb(0),g.Kc(1,ns,3,2,"ng-container",2),g.Qb()),2&s){var a=n.ngIf;g.Bb(1),g.nc("ngForOf",a.examples)}}var ts,es,ls=((ts=function s(n){h(this,s),this.route=n;for(var a=n;!a.routeConfig.path;)a=a.parent}).\u0275fac=function(s){return new(s||ts)(g.Nb(d.a))},ts.\u0275cmp=g.Hb({type:ts,selectors:[["app-data-grid"]],decls:10,vars:3,consts:[["mat-raised-button","","color","accent","href","https://nzbin.gitbook.io/material-extensions/data-grid","target","_blank"],[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"text"],[3,"exampleData"]],template:function(s,n){1&s&&(g.Tb(0,"p"),g.Mc(1," The "),g.Tb(2,"code"),g.Mc(3,"mtx-grid"),g.Sb(),g.Mc(4," is an powerful material table component. It supports cell selectable, row selectable, multiple row selectable, row expandable, column hiding, column moving and so on.\n"),g.Sb(),g.Tb(5,"p"),g.Tb(6,"a",0),g.Mc(7,"API Reference"),g.Sb(),g.Sb(),g.Kc(8,as,2,1,"ng-container",1),g.gc(9,"async")),2&s&&(g.Bb(8),g.nc("ngIf",g.hc(9,1,n.route.data)))},directives:[$.a,Q.t,Q.s,Z.a,ss.a],pipes:[Q.b],styles:[""]}),ts),rs=[{position:1,name:"Boron",tag:[{color:"red",value:[1,2]}],weight:10.811,symbol:"B",gender:"male",mobile:"13198765432",tele:"567891234",city:"Berlin",address:"Bernauer Str.111,13355",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Boron@gmail.com",status:!1,cost:4},{position:2,name:"Helium",tag:[{color:"blue",value:[3,4]}],weight:8.0026,symbol:"He",gender:"female",mobile:"13034676675",tele:"80675432",city:"Shanghai",address:"88 Songshan Road",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Helium@gmail.com",status:!0,cost:5},{position:3,name:"Nitrogen",tag:[{color:"yellow",value:[5,6]}],weight:14.0067,symbol:"N",gender:"male",mobile:"15811112222",tele:"345678912",city:"Sydney",address:"Circular Quay, Sydney NSW 2000",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Nitrogen@gmail.com",status:!0,cost:2}],ps=p("CGrA"),os={title:"Basic",component:(es=function(){function s(){h(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight",type:"number",typeParameter:{digitsInfo:"1.2-2"}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Date",field:"date",type:"date",typeParameter:{format:"yyyy-MM-dd"}}],this.list=rs}return l(s,[{key:"trackByName",value:function(s,n){return n.name}}]),s}(),es.\u0275fac=function(s){return new(s||es)},es.\u0275cmp=g.Hb({type:es,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","trackBy"]],template:function(s,n){1&s&&g.Ob(0,"mtx-grid",0),2&s&&g.nc("data",n.list)("columns",n.columns)("trackBy",n.trackByName)},directives:[ps.a],styles:[""]}),es),files:[{file:"app.component.html",content:p("hilW"),filecontent:p("/LrM")},{file:"app.component.ts",content:p("qJlr"),filecontent:p("GWAD")},{file:"app.component.scss",content:p("0LFB"),filecontent:p("2Gcz")},{file:"data.ts",content:p("TafY"),filecontent:p("tD0s")}]},is=p("+Tre"),cs=p("nIj0"),hs={title:"Loading status",component:function(){var s=function s(){h(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=rs,this.isLoading=!0};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","loading"]],template:function(s,n){1&s&&(g.Tb(0,"mat-checkbox",0),g.bc("ngModelChange",(function(s){return n.isLoading=s})),g.Mc(1,"Loading"),g.Sb(),g.Ob(2,"mtx-grid",1)),2&s&&(g.nc("ngModel",n.isLoading),g.Bb(2),g.nc("data",n.list)("columns",n.columns)("loading",n.isLoading))},directives:[is.a,cs.m,cs.p,ps.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:p("+Gtk"),filecontent:p("h5uV")},{file:"app.component.ts",content:p("gfyD"),filecontent:p("Lj52")},{file:"app.component.scss",content:p("QDm0"),filecontent:p("2z1R")}]},ds={title:"Hide pagination",description:"\n  <p>If you hide the pagination, you should set <code>pageOnFront</code> false to show all the data.\n  </p>\n  ",component:function(){var s=function s(){h(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=rs};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:4,consts:[[3,"data","columns","pageOnFront","showPaginator"]],template:function(s,n){1&s&&g.Ob(0,"mtx-grid",0),2&s&&g.nc("data",n.list)("columns",n.columns)("pageOnFront",!1)("showPaginator",!1)},directives:[ps.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:p("ecK2"),filecontent:p("705O")},{file:"app.component.ts",content:p("2OhO"),filecontent:p("WJ6K")},{file:"app.component.scss",content:p("oC3v"),filecontent:p("s9C1")}]},ms={title:"Sortable",component:function(){var s=function(){function s(){h(this,s),this.columns=[{header:"Name",field:"name",sortable:!0},{header:"Weight",field:"weight",sortable:!0},{header:"Gender",field:"gender",sortable:!0},{header:"Mobile",field:"mobile",sortable:!1},{header:"City",field:"city",sortable:!0,sortProp:{arrowPosition:"before",disableClear:!0,start:"desc"}}],this.list=rs}return l(s,[{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[["sortOnFront","true","sortActive","name","sortDirection","asc","sortDisableClear","true","sortDisabled","false","sortStart","asc",3,"data","columns","sortChange"]],template:function(s,n){1&s&&(g.Tb(0,"mtx-grid",0),g.bc("sortChange",(function(s){return n.log(s)})),g.Sb()),2&s&&g.nc("data",n.list)("columns",n.columns)},directives:[ps.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:p("i0wx"),filecontent:p("RMCV")},{file:"app.component.ts",content:p("PM5x"),filecontent:p("CDYS")},{file:"app.component.scss",content:p("UXFV"),filecontent:p("oioM")}]},us=p("F1o0"),gs={title:"Row selectable",description:"\n  <p>If you choose multiple option, you can press <kbd>ctrl</kbd>/<kbd>command</kbd> +\n  click or select checkboxs to choose multiple row.</p>\n  ",component:function(){var s=function(){function s(){h(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=rs,this.multiSelectable=!0,this.hideRowSelectionCheckbox=!1,this.rowSelectable=!0,this.rowSelected=rs.slice(2,3),this.rowSelectionFormatter={disabled:function(s){return"Boron"===s.name},hideCheckbox:function(s){return"John"===s.name}}}return l(s,[{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:11,vars:12,consts:[[3,"ngModel","ngModelChange"],[3,"value"],[3,"data","columns","multiSelectable","hideRowSelectionCheckbox","rowSelectable","rowSelected","rowSelectionFormatter","rowSelectionChange","cellSelectionChange"]],template:function(s,n){1&s&&(g.Tb(0,"div"),g.Tb(1,"mat-checkbox",0),g.bc("ngModelChange",(function(s){return n.rowSelectable=s})),g.Mc(2,"Row selectable"),g.Sb(),g.Tb(3,"mat-checkbox",0),g.bc("ngModelChange",(function(s){return n.hideRowSelectionCheckbox=s})),g.Mc(4,"Hide checkbox"),g.Sb(),g.Tb(5,"mat-radio-group",0),g.bc("ngModelChange",(function(s){return n.multiSelectable=s})),g.Tb(6,"mat-radio-button",1),g.Mc(7,"Single"),g.Sb(),g.Tb(8,"mat-radio-button",1),g.Mc(9,"Multiple"),g.Sb(),g.Sb(),g.Sb(),g.Tb(10,"mtx-grid",2),g.bc("rowSelectionChange",(function(s){return n.log(s)}))("cellSelectionChange",(function(s){return n.log(s)})),g.Sb()),2&s&&(g.Bb(1),g.nc("ngModel",n.rowSelectable),g.Bb(2),g.nc("ngModel",n.hideRowSelectionCheckbox),g.Bb(2),g.nc("ngModel",n.multiSelectable),g.Bb(1),g.nc("value",!1),g.Bb(2),g.nc("value",!0),g.Bb(2),g.nc("data",n.list)("columns",n.columns)("multiSelectable",n.multiSelectable)("hideRowSelectionCheckbox",n.hideRowSelectionCheckbox)("rowSelectable",n.rowSelectable)("rowSelected",n.rowSelected)("rowSelectionFormatter",n.rowSelectionFormatter))},directives:[is.a,cs.m,cs.p,us.b,us.a,ps.a],styles:[".mat-checkbox[_ngcontent-%COMP%], .mat-radio-button[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:p("YPR1"),filecontent:p("up5s")},{file:"app.component.ts",content:p("m8xE"),filecontent:p("tF9F")},{file:"app.component.scss",content:p("93A+"),filecontent:p("rvl2")}]};function xs(s,n){1&s&&g.Mc(0),2&s&&g.Oc(" ",n.$implicit.name,"\n")}var fs={title:"Expandable row",component:function(){var s=function(){function s(){h(this,s),this.columns=[{header:"Name",field:"name",showExpand:!0},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=rs}return l(s,[{key:"log",value:function(s){console.log(s)}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"data","columns","expandable","expansionTemplate","expansionChange"],["expansionTpl",""]],template:function(s,n){if(1&s&&(g.Tb(0,"mtx-grid",0),g.bc("expansionChange",(function(s){return n.log(s)})),g.Sb(),g.Kc(1,xs,1,1,"ng-template",null,1,g.Lc)),2&s){var a=g.wc(2);g.nc("data",n.list)("columns",n.columns)("expandable",!0)("expansionTemplate",a)}},directives:[ps.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:p("sg0B"),filecontent:p("gcNB")},{file:"app.component.ts",content:p("OsdS"),filecontent:p("iBo5")},{file:"app.component.scss",content:p("ggKf"),filecontent:p("XHzA")}]},js={title:"Column hiding & moving",description:"\n  <p>Click the <kbd>Column Shown</kbd> button, you can select or drag the columns.</p>\n  ",component:function(){var s=function s(){h(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=rs,this.columnHideable=!0,this.columnMovable=!0};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:6,vars:8,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","showToolbar","toolbarTitle","columnHideable","columnMovable"]],template:function(s,n){1&s&&(g.Tb(0,"div"),g.Tb(1,"mat-checkbox",0),g.bc("ngModelChange",(function(s){return n.columnHideable=s})),g.Mc(2,"Column Hiding"),g.Sb(),g.Tb(3,"mat-checkbox",0),g.bc("ngModelChange",(function(s){return n.columnMovable=s})),g.Mc(4,"Column Moving"),g.Sb(),g.Sb(),g.Ob(5,"mtx-grid",1)),2&s&&(g.Bb(1),g.nc("ngModel",n.columnHideable),g.Bb(2),g.nc("ngModel",n.columnMovable),g.Bb(2),g.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("toolbarTitle","Data Grid")("columnHideable",n.columnHideable)("columnMovable",n.columnMovable))},directives:[is.a,cs.m,cs.p,ps.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:p("TGGQ"),filecontent:p("OduZ")},{file:"app.component.ts",content:p("2eyz"),filecontent:p("ZjNe")},{file:"app.component.scss",content:p("jH17"),filecontent:p("vbzM")}]},bs={title:"Column pinnable",component:function(){var s=function s(){h(this,s),this.columns=[{header:"Position",field:"position",width:"200px"},{header:"Name",field:"name",width:"200px",pinned:"left"},{header:"tags",field:"tag.0.value",width:"200px"},{header:"Weight",field:"weight",width:"200px",pinned:"left"},{header:"Symbol",field:"symbol",width:"200px"},{header:"Gender",field:"gender",width:"200px"},{header:"Mobile",field:"mobile",width:"200px"},{header:"Tele",field:"tele",width:"200px"},{header:"City",field:"city",width:"200px"},{header:"Address",field:"address",width:"200px"},{header:"Date",field:"date",width:"200px"},{header:"Website",field:"website",width:"200px"},{header:"Company",field:"company",width:"200px"},{header:"Email",field:"email",width:"200px",pinned:"right"},{header:"Status",field:"status",type:"boolean",width:"200px"}],this.list=rs};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&g.Ob(0,"mtx-grid",0),2&s&&g.nc("data",n.list)("columns",n.columns)},directives:[ps.a],styles:[""]}),s}(),description:"\n  <p>The <code>name</code> and <code>weight</code> column pinned left, the <code>email</code> column\n  pinned right. Scroll the columns to test.</p>\n  ",files:[{file:"app.component.html",content:p("vSoS"),filecontent:p("KXed")},{file:"app.component.ts",content:p("UN+l"),filecontent:p("Reqn")},{file:"app.component.scss",content:p("2L3u"),filecontent:p("8cD9")}]},ys={title:"Hover & striped",component:function(){var s=function s(){h(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=rs,this.rowHover=!0,this.rowStriped=!1};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:6,vars:7,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","rowHover","rowStriped","rowSelectable"]],template:function(s,n){1&s&&(g.Tb(0,"div"),g.Tb(1,"mat-checkbox",0),g.bc("ngModelChange",(function(s){return n.rowHover=s})),g.Mc(2,"Hover"),g.Sb(),g.Tb(3,"mat-checkbox",0),g.bc("ngModelChange",(function(s){return n.rowStriped=s})),g.Mc(4,"Striped"),g.Sb(),g.Sb(),g.Ob(5,"mtx-grid",1)),2&s&&(g.Bb(1),g.nc("ngModel",n.rowHover),g.Bb(2),g.nc("ngModel",n.rowStriped),g.Bb(2),g.nc("data",n.list)("columns",n.columns)("rowHover",n.rowHover)("rowStriped",n.rowStriped)("rowSelectable",!0))},directives:[is.a,cs.m,cs.p,ps.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:p("df+T"),filecontent:p("8S/e")},{file:"app.component.ts",content:p("9QST"),filecontent:p("dzW7")},{file:"app.component.scss",content:p("nJyt"),filecontent:p("ec7O")}]},ws={title:"Row with buttons",component:function(){var s=function s(){h(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Operation",field:"operation",width:"160px",pinned:"right",right:"0px",type:"button",buttons:[{type:"icon",text:"copy",icon:"file_copy",tooltip:"copy",disabled:!0,click:function(){alert("copy")}},{type:"icon",text:"edit",icon:"edit",tooltip:"Edit",click:function(){alert("edit")}},{type:"icon",text:"delete",icon:"delete",tooltip:"Delete",color:"warn",pop:!0,popTitle:"Confirm delete?",click:function(){alert("delete")}}]}],this.list=rs};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&g.Ob(0,"mtx-grid",0),2&s&&g.nc("data",n.list)("columns",n.columns)},directives:[ps.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:p("+wki"),filecontent:p("Z61D")},{file:"app.component.ts",content:p("DJtL"),filecontent:p("lKjp")},{file:"app.component.scss",content:p("ReuQ"),filecontent:p("1Lg5")}]},Cs=p("k8N0"),ks=["statusTpl"];function vs(s,n){1&s&&(g.Tb(0,"mat-slide-toggle",2),g.Mc(1,"Slide me!"),g.Sb()),2&s&&g.nc("checked",n.$implicit.status)}var Ms={title:"Custom cell template",description:"\n  <p>The status column are custom cells.</p>\n  ",component:function(){var s=function(){function s(){h(this,s),this.columns=[],this.list=rs}return l(s,[{key:"ngOnInit",value:function(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Status",field:"status",cellTemplate:this.statusTpl}]}}]),s}();return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],viewQuery:function(s,n){var a;1&s&&g.Fc(ks,!0),2&s&&g.vc(a=g.cc())&&(n.statusTpl=a.first)},decls:3,vars:2,consts:[[3,"data","columns"],["statusTpl",""],[3,"checked"]],template:function(s,n){1&s&&(g.Ob(0,"mtx-grid",0),g.Kc(1,vs,2,1,"ng-template",null,1,g.Lc)),2&s&&g.nc("data",n.list)("columns",n.columns)},directives:[ps.a,Cs.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:p("NE6O"),filecontent:p("tEOP")},{file:"app.component.ts",content:p("E8jj"),filecontent:p("5w79")},{file:"app.component.scss",content:p("YYJN"),filecontent:p("wvfp")}]};function qs(s,n){if(1&s&&(g.Tb(0,"button",2),g.Mc(1),g.Sb()),2&s){var a=n.$implicit;g.Bb(1),g.Nc(a.city)}}var As=function(s){return{city:s}},Ss={title:"Custom cell template 2",description:'\n  <p>There has another easiest way to custom cells. You can use property\n  <code>[cellTemplate]="{ city: cityTpl }"</code></p>\n  ',component:function(){var s=function s(){h(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=rs};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:5,consts:[[3,"data","columns","cellTemplate"],["cityTpl",""],["mat-raised-button","","color","primary"]],template:function(s,n){if(1&s&&(g.Ob(0,"mtx-grid",0),g.Kc(1,qs,2,1,"ng-template",null,1,g.Lc)),2&s){var a=g.wc(2);g.nc("data",n.list)("columns",n.columns)("cellTemplate",g.qc(3,As,a))}},directives:[ps.a,$.b],styles:[""]}),s}(),files:[{file:"app.component.html",content:p("lZ76"),filecontent:p("8FVU")},{file:"app.component.ts",content:p("Aodh"),filecontent:p("xX41")},{file:"app.component.scss",content:p("Meuw"),filecontent:p("nga3")}]},Ts={title:"Data formatting",description:"\n  <p>The <code>name</code> field use a formatter.</p>\n  ",component:function(){var s=function s(){h(this,s),this.columns=[{header:"Name",field:"name",formatter:function(s){return'<span class="label">'.concat(s.name,"</span>")}},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=rs};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&g.Ob(0,"mtx-grid",0),2&s&&g.nc("data",n.list)("columns",n.columns)},directives:[ps.a],styles:["[_nghost-%COMP%]     .label{padding:5px 10px;border-radius:999px;background-color:#ffb74d}"]}),s}(),files:[{file:"app.component.html",content:p("J5dd"),filecontent:p("7BMS")},{file:"app.component.ts",content:p("za2W"),filecontent:p("gqKb")},{file:"app.component.scss",content:p("r6oY"),filecontent:p("5dWc")}]},Ls={title:"No result",component:function(){var s=function s(){h(this,s),this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=[]};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&g.Ob(0,"mtx-grid",0),2&s&&g.nc("data",n.list)("columns",n.columns)},directives:[ps.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:p("Mtr3"),filecontent:p("oXCI")},{file:"app.component.ts",content:p("IFLB"),filecontent:p("SXGs")},{file:"app.component.scss",content:p("wPQT"),filecontent:p("AYo8")}]},_s=p("bFHC"),Es=p("Y2X+");function Ds(s,n){if(1&s&&(g.Mc(0),g.Tb(1,"mat-icon",2),g.Mc(2,"info"),g.Sb()),2&s){var a=n.$implicit;g.Oc(" ",a.header," "),g.Bb(1),g.nc("matTooltip",a.description)}}var Os={title:"Custom header template",component:function(){var s=function s(){h(this,s),this.columns=[{header:"Name",field:"name",description:"Info about the name"},{header:"Weight",field:"weight",description:"Info about the weight"},{header:"Gender",field:"gender",description:"Info about the gender"},{header:"Mobile",field:"mobile",description:"Info about the mobile"},{header:"City",field:"city",description:"Info about the city"}],this.list=rs};return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:3,consts:[[3,"data","columns","headerTemplate"],["headerTpl",""],[3,"matTooltip"]],template:function(s,n){if(1&s&&(g.Ob(0,"mtx-grid",0),g.Kc(1,Ds,3,2,"ng-template",null,1,g.Lc)),2&s){var a=g.wc(2);g.nc("data",n.list)("columns",n.columns)("headerTemplate",a)}},directives:[ps.a,_s.a,Es.a],styles:[""]}),s}(),files:[{file:"app.component.html",content:p("GLZs"),filecontent:p("JV4J")},{file:"app.component.ts",content:p("GgQz"),filecontent:p("ysK1")},{file:"app.component.scss",content:p("t8N4"),filecontent:p("vns6")}]};function Gs(s,n){if(1&s&&(g.Tb(0,"div"),g.Mc(1),g.gc(2,"currency"),g.Sb()),2&s){var a=n.$implicit,t=g.fc();g.Bb(1),g.Nc(g.hc(2,1,t.getTotalCost(a)))}}var Ps=function(s){return{cost:s}},Ns={title:"Custom footer template",component:function(){var n=function(){function n(){h(this,n),this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:function(n){return Math.max.apply(Math,s(n))}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=rs}return l(n,[{key:"getTotalCost",value:function(s){return s.reduce((function(s,n){return s+n}),0)}}]),n}();return n.\u0275fac=function(s){return new(s||n)},n.\u0275cmp=g.Hb({type:n,selectors:[["data-grid-example"]],decls:3,vars:6,consts:[[3,"data","columns","showSummary","summaryTemplate"],["footerTpl",""]],template:function(s,n){if(1&s&&(g.Ob(0,"mtx-grid",0),g.Kc(1,Gs,3,3,"ng-template",null,1,g.Lc)),2&s){var a=g.wc(2);g.nc("data",n.list)("columns",n.columns)("showSummary",!0)("summaryTemplate",g.qc(4,Ps,a))}},directives:[ps.a],pipes:[Q.d],styles:[""]}),n}(),files:[{file:"app.component.html",content:p("FoZ3"),filecontent:p("qQdu")},{file:"app.component.ts",content:p("cBui"),filecontent:p("LPdT")},{file:"app.component.scss",content:p("bxlB"),filecontent:p("DtCM")}]};function Us(s,n){1&s&&g.Ob(0,"input",2)}var Xs={title:"Custom toolbar template",component:function(){var n=function n(){h(this,n),this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:function(n){return Math.max.apply(Math,s(n))}},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=rs};return n.\u0275fac=function(s){return new(s||n)},n.\u0275cmp=g.Hb({type:n,selectors:[["data-grid-example"]],decls:3,vars:5,consts:[[3,"data","columns","showToolbar","showColumnMenuButton","toolbarTemplate"],["toolbarTpl",""],["placeholder","Search"]],template:function(s,n){if(1&s&&(g.Ob(0,"mtx-grid",0),g.Kc(1,Us,1,0,"ng-template",null,1,g.Lc)),2&s){var a=g.wc(2);g.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("showColumnMenuButton",!1)("toolbarTemplate",a)}},directives:[ps.a],styles:[""]}),n}(),files:[{file:"app.component.html",content:p("pxEU"),filecontent:p("W9LF")},{file:"app.component.ts",content:p("/+Y5"),filecontent:p("48nt")},{file:"app.component.scss",content:p("+z7n"),filecontent:p("G7ct")}]};function Hs(s,n){if(1&s&&(g.Tb(0,"mat-radio-button",3),g.Mc(1),g.Sb()),2&s){var a=n.$implicit;g.nc("value",a.value),g.Bb(1),g.Oc(" ",a.label," ")}}var Bs={title:"I18n ngx-translate",component:function(){var s=function s(n){h(this,s),this.translate=n,this.columns=[{header:this.translate.stream("name"),field:"name"},{header:this.translate.stream("weight"),field:"weight"},{header:this.translate.stream("gender"),field:"gender"},{header:this.translate.stream("mobile"),field:"mobile"},{header:this.translate.stream("city"),field:"city"},{header:this.translate.stream("operation"),field:"operation",width:"40px",pinned:"right",right:"0px",type:"button",buttons:[{type:"basic",text:this.translate.stream("delete"),icon:"delete",tooltip:this.translate.stream("delete"),color:"warn",pop:!0,popTitle:this.translate.stream("confirm_delete"),popCloseText:this.translate.stream("close"),popOkText:this.translate.stream("ok"),click:function(){alert("delete")}}]}],this.list=rs,this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",n.addLangs(this.langs.map((function(s){return s.value}))),n.setDefaultLang(this.defaultlang)};return s.\u0275fac=function(n){return new(n||s)(g.Nb(K))},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:7,consts:[[3,"ngModel","ngModelChange","change"],[3,"value",4,"ngFor","ngForOf"],[3,"data","columns","showToolbar","columnHideable","columnMovable"],[3,"value"]],template:function(s,n){1&s&&(g.Tb(0,"mat-radio-group",0),g.bc("ngModelChange",(function(s){return n.defaultlang=s}))("change",(function(s){return n.translate.use(s.value)})),g.Kc(1,Hs,2,2,"mat-radio-button",1),g.Sb(),g.Ob(2,"mtx-grid",2)),2&s&&(g.nc("ngModel",n.defaultlang),g.Bb(1),g.nc("ngForOf",n.langs),g.Bb(1),g.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("columnHideable",!0)("columnMovable",!0))},directives:[us.b,cs.m,cs.p,Q.s,ps.a,us.a],styles:[".mat-radio-button[_ngcontent-%COMP%]{margin:0 1rem 1rem 0}"]}),s}(),files:[{file:"app.component.html",content:p("3qDo"),filecontent:p("BcXy")},{file:"app.component.ts",content:p("R38t"),filecontent:p("zjlK")},{file:"app.component.scss",content:p("17CO"),filecontent:p("1g1a")},{file:"assets/zh-CN.json",content:p("AhII"),filecontent:p("rnHd")},{file:"assets/en-US.json",content:p("2N83"),filecontent:p("jXi+")}]},Ws=function(){return[5,10,20]},Rs={title:"Remote Data",component:function(){var s=function(){function s(n){h(this,s),this.http=n,this.columns=[{header:"Name",field:"name",formatter:function(s){return'<a href="'.concat(s.html_url,'" target="_blank">').concat(s.name,"</a>")}},{header:"Owner",field:"owner.login"},{header:"Owner Avatar",field:"owner.avatar_url",type:"image"},{header:"Description",field:"description",width:"300px"},{header:"Stars",field:"stargazers_count"},{header:"Forks",field:"forks_count"},{header:"Score",field:"score"},{header:"Issues",field:"open_issues"},{header:"Language",field:"language"},{header:"License",field:"license.name"},{header:"Home Page",field:"homepage",type:"link"},{header:"Is forked",field:"fork",type:"boolean"},{header:"Archived",field:"archived",type:"tag",tag:{true:{text:"Yes",color:"red-100"},false:{text:"No",color:"green-100"}}},{header:"Created Date",field:"created_at"},{header:"Updated Date",field:"updated_at"}],this.list=[],this.total=0,this.isLoading=!0,this.query={q:"user:nzbin",page:0,per_page:5}}return l(s,[{key:"ngOnInit",value:function(){this.getData()}},{key:"getData",value:function(){var s=this;this.isLoading=!0,this.http.get("https://api.github.com/search/repositories",{params:this.params}).subscribe((function(n){s.list=n.items,s.total=n.total_count,s.isLoading=!1}),(function(){s.isLoading=!1}),(function(){s.isLoading=!1}))}},{key:"getNextPage",value:function(s){this.query.page=s.pageIndex,this.query.per_page=s.pageSize,this.getData()}},{key:"refresh",value:function(){this.getData()}},{key:"params",get:function(){var s=Object.assign({},this.query);return s.page+=1,s}}]),s}();return s.\u0275fac=function(n){return new(n||s)(g.Nb(m.b))},s.\u0275cmp=g.Hb({type:s,selectors:[["data-grid-example"]],decls:3,vars:9,consts:[["mat-raised-button","","color","primary",3,"click"],[3,"data","columns","length","loading","pageOnFront","pageIndex","pageSize","pageSizeOptions","page"]],template:function(s,n){1&s&&(g.Tb(0,"button",0),g.bc("click",(function(){return n.refresh()})),g.Mc(1,"Refresh"),g.Sb(),g.Tb(2,"mtx-grid",1),g.bc("page",(function(s){return n.getNextPage(s)})),g.Sb()),2&s&&(g.Bb(2),g.nc("data",n.list)("columns",n.columns)("length",n.total)("loading",n.isLoading)("pageOnFront",!1)("pageIndex",n.query.page)("pageSize",n.query.per_page)("pageSizeOptions",g.pc(8,Ws)))},directives:[$.b,ps.a],styles:[".mat-raised-button[_ngcontent-%COMP%]{margin-bottom:1rem}"]}),s}(),files:[{file:"app.component.html",content:p("ai1J"),filecontent:p("hkiY")},{file:"app.component.ts",content:p("/1dg"),filecontent:p("yHEx")},{file:"app.component.scss",content:p("JUl+"),filecontent:p("CSbO")}]};function Is(s){return new Y(s,"assets/i18n/","_json")}var Fs,zs=((Fs=function s(){h(this,s)}).\u0275mod=g.Lb({type:Fs}),Fs.\u0275inj=g.Kb({factory:function(s){return new(s||Fs)},imports:[[u.a,V.forRoot({loader:{provide:q,useFactory:Is,deps:[m.b]}}),d.i.forChild([{path:"",component:ls,data:{examples:[os,hs,ds,ms,gs,fs,js,bs,ys,ws,Ms,Ss,Ts,Ls,Os,Ns,Xs,Bs,Rs]}}])]]}),Fs)},rnHd:function(s,n,a){"use strict";a.r(n),n.default='{\n  "name": "\u59d3\u540d",\n  "weight": "\u4f53\u91cd",\n  "gender": "\u6027\u522b",\n  "mobile": "\u624b\u673a",\n  "city": "\u57ce\u5e02",\n  "operation": "\u64cd\u4f5c",\n  "delete": "\u5220\u9664",\n  "confirm_delete": "\u786e\u8ba4\u5220\u9664\uff1f",\n  "close": "\u5173\u95ed",\n  "ok": "\u786e\u5b9a"\n}\n'},rvl2:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox,\n.mat-radio-button {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},s9C1:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},sg0B:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>\n          [<span class="hljs-attr">expandable</span>]=<span class="hljs-string">&quot;true&quot;</span>\n          [<span class="hljs-attr">expansionTemplate</span>]=<span class="hljs-string">&quot;expansionTpl&quot;</span>\n          (<span class="hljs-attr">expansionChange</span>)=<span class="hljs-string">&quot;log($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">expansionTpl</span> <span class="hljs-attr">let-row</span>&gt;</span>\n  {{row.name}}\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},t8N4:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},tD0s:function(s,n,a){"use strict";a.r(n),n.default="export const EXAMPLE_DATA: any[] = [\n  {\n    position: 1,\n    name: 'Boron',\n    tag: [\n      {\n        color: 'red',\n        value: [1, 2],\n      },\n    ],\n    weight: 10.811,\n    symbol: 'B',\n    gender: 'male',\n    mobile: '13198765432',\n    tele: '567891234',\n    city: 'Berlin',\n    address: 'Bernauer Str.111,13355',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Boron@gmail.com',\n    status: false,\n    cost: 4\n  },\n  {\n    position: 2,\n    name: 'Helium',\n    tag: [\n      {\n        color: 'blue',\n        value: [3, 4],\n      },\n    ],\n    weight: 8.0026,\n    symbol: 'He',\n    gender: 'female',\n    mobile: '13034676675',\n    tele: '80675432',\n    city: 'Shanghai',\n    address: '88 Songshan Road',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Helium@gmail.com',\n    status: true,\n    cost: 5\n  },\n  {\n    position: 3,\n    name: 'Nitrogen',\n    tag: [\n      {\n        color: 'yellow',\n        value: [5, 6],\n      },\n    ],\n    weight: 14.0067,\n    symbol: 'N',\n    gender: 'male',\n    mobile: '15811112222',\n    tele: '345678912',\n    city: 'Sydney',\n    address: 'Circular Quay, Sydney NSW 2000',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Nitrogen@gmail.com',\n    status: true,\n    cost: 2\n  },\n];\n"},tEOP:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n\n<ng-template #statusTpl let-row let-index="index" let-col="colDef">\n  <mat-slide-toggle [checked]="row.status">Slide me!</mat-slide-toggle>\n</ng-template>\n'},tF9F:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowSelectionFormatter } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = true;\n  hideRowSelectionCheckbox = false;\n  rowSelectable = true;\n  rowSelected = EXAMPLE_DATA.slice(2, 3);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: data => data.name === 'Boron',\n    hideCheckbox: data => data.name === 'John',\n  };\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},up5s:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowSelectable">Row selectable</mat-checkbox>\n  <mat-checkbox [(ngModel)]="hideRowSelectionCheckbox">Hide checkbox</mat-checkbox>\n  <mat-radio-group [(ngModel)]="multiSelectable">\n    <mat-radio-button [value]="false">Single</mat-radio-button>\n    <mat-radio-button [value]="true">Multiple</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [multiSelectable]="multiSelectable"\n          [hideRowSelectionCheckbox]="hideRowSelectionCheckbox"\n          [rowSelectable]="rowSelectable"\n          [rowSelected]="rowSelected"\n          [rowSelectionFormatter]="rowSelectionFormatter"\n          (rowSelectionChange)="log($event)"\n          (cellSelectionChange)="log($event)">\n</mtx-grid>\n'},vSoS:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">&quot;list&quot;</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">&quot;columns&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},vbzM:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},vns6:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},wPQT:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},wvfp:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},xX41:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},yHEx:function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { PageEvent } from '@angular/material/paginator';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\n    },\n    { header: 'Owner', field: 'owner.login' },\n    { header: 'Owner Avatar', field: 'owner.avatar_url', type: 'image' },\n    { header: 'Description', field: 'description', width: '300px' },\n    { header: 'Stars', field: 'stargazers_count' },\n    { header: 'Forks', field: 'forks_count' },\n    { header: 'Score', field: 'score' },\n    { header: 'Issues', field: 'open_issues' },\n    { header: 'Language', field: 'language' },\n    { header: 'License', field: 'license.name' },\n    { header: 'Home Page', field: 'homepage', type: 'link' },\n    { header: 'Is forked', field: 'fork', type: 'boolean' },\n    {\n      header: 'Archived',\n      field: 'archived',\n      type: 'tag',\n      tag: {\n        true: { text: 'Yes', color: 'red-100' },\n        false: { text: 'No', color: 'green-100' },\n      },\n    },\n    { header: 'Created Date', field: 'created_at' },\n    { header: 'Updated Date', field: 'updated_at' },\n  ];\n  list = [];\n  total = 0;\n  isLoading = true;\n\n  query = {\n    q: 'user:nzbin',\n    page: 0,\n    per_page: 5,\n  };\n\n  get params() {\n    const p = Object.assign({}, this.query);\n    p.page += 1;\n    return p;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  getData() {\n    this.isLoading = true;\n    this.http\n      .get('https://api.github.com/search/repositories', { params: this.params as any })\n      .subscribe(\n        (res: any) => {\n          this.list = res.items;\n          this.total = res.total_count;\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n  }\n\n  getNextPage(e: PageEvent) {\n    this.query.page = e.pageIndex;\n    this.query.per_page = e.pageSize;\n    this.getData();\n  }\n\n  refresh() {\n    this.getData();\n  }\n}\n"},ysK1:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', description: 'Info about the name' },\n    { header: 'Weight', field: 'weight', description: 'Info about the weight' },\n    { header: 'Gender', field: 'gender', description: 'Info about the gender' },\n    { header: 'Mobile', field: 'mobile', description: 'Info about the mobile' },\n    { header: 'City', field: 'city', description: 'Info about the city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},za2W:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../data&#x27;</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">&#x27;data-grid-example&#x27;</span>,\n  templateUrl: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  styleUrls: [<span class="hljs-string">&#x27;./app.component.scss&#x27;</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-string">&#x27;Name&#x27;</span>,\n      field: <span class="hljs-string">&#x27;name&#x27;</span>,\n      formatter: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;span class=&quot;label&quot;&gt;<span class="hljs-subst">${data.name}</span>&lt;/span&gt;`</span>,\n    },\n    { header: <span class="hljs-string">&#x27;Weight&#x27;</span>, field: <span class="hljs-string">&#x27;weight&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Gender&#x27;</span>, field: <span class="hljs-string">&#x27;gender&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;Mobile&#x27;</span>, field: <span class="hljs-string">&#x27;mobile&#x27;</span> },\n    { header: <span class="hljs-string">&#x27;City&#x27;</span>, field: <span class="hljs-string">&#x27;city&#x27;</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},zjlK:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: this.translate.stream('name'),\n      field: 'name',\n    },\n    {\n      header: this.translate.stream('weight'),\n      field: 'weight',\n    },\n    {\n      header: this.translate.stream('gender'),\n      field: 'gender',\n    },\n    {\n      header: this.translate.stream('mobile'),\n      field: 'mobile',\n    },\n    {\n      header: this.translate.stream('city'),\n      field: 'city',\n    },\n    {\n      header: this.translate.stream('operation'),\n      field: 'operation',\n      width: '40px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'basic',\n          text: this.translate.stream('delete'),\n          icon: 'delete',\n          tooltip: this.translate.stream('delete'),\n          color: 'warn',\n          pop: true,\n          popTitle: this.translate.stream('confirm_delete'),\n          popCloseText: this.translate.stream('close'),\n          popOkText: this.translate.stream('ok'),\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n\n  defaultlang = 'zh-CN';\n\n  constructor(public translate: TranslateService) {\n    translate.addLangs(this.langs.map(item => item.value));\n    translate.setDefaultLang(this.defaultlang);\n  }\n}\n"}}])}();