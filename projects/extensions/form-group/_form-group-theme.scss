@use 'sass:map';
@use '~@angular/material' as mat;

@mixin theme($theme) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $background: map.get($theme, background);
  $foreground: map.get($theme, foreground);
  $is-dark-theme: map.get($theme, is-dark);

  .mtx-form-group {
    .mtx-form-label {
      &.mtx-form-label-marker::after {
        color: mat.get-color-from-palette($warn);
      }
    }
  }

  .mtx-form-field-appearance-fluent {
    .mat-form-field-flex {
      border: 1px solid rgba(mat.get-color-from-palette($foreground, divider), .54);

      &:hover {
        border: 1px solid rgba(mat.get-color-from-palette($foreground, divider), .78);
      }
    }

    .mat-focused {
      .mat-form-field-flex {
        border-color: mat.get-color-from-palette($primary);
        box-shadow: inset 0 0 0 1px mat.get-color-from-palette($primary);
      }

      &.mat-accent {
        .mat-form-field-flex {
          border-color: mat.get-color-from-palette($accent);
          box-shadow: inset 0 0 0 1px mat.get-color-from-palette($accent);
        }
      }

      &.mat-warn {
        .mat-form-field-flex {
          border-color: mat.get-color-from-palette($warn);
          box-shadow: inset 0 0 0 1px mat.get-color-from-palette($warn);
        }
      }
    }

    .mat-form-field-invalid {
      .mat-form-field-flex,
      &.mat-accent .mat-form-field-flex,
      &.mat-warn .mat-form-field-flex {
        border-color: mat.get-color-from-palette($warn);
        box-shadow: inset 0 0 0 1px mat.get-color-from-palette($warn);
      }
    }

    .mat-form-field-disabled {
      .mat-form-field-flex {
        background-color: mat.get-color-from-palette($background, disabled-button);
        border-color: mat.get-color-from-palette($foreground, divider);
      }
    }

    .mat-form-field-label,
    .mat-hint {
      color: mat.get-color-from-palette($foreground, secondary-text);
    }
  }
}
