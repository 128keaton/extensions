(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"24bL":function(n,s,a){"use strict";a.r(s),a.d(s,"ColorPickerModule",(function(){return j}));var e=a("sEIs"),t=a("M0ag"),o=a("EM62"),l=a("2kYt"),c=a("Pg5x");function p(n,s){if(1&n&&(o.Ub(0),o.Rb(1,"example-viewer",2),o.Tb()),2&n){const n=s.$implicit;o.Cb(1),o.nc("exampleData",n)}}function r(n,s){if(1&n&&(o.Ub(0),o.Hc(1,p,2,1,"ng-container",1),o.Tb()),2&n){const n=s.ngIf;o.Cb(1),o.nc("ngForOf",n.examples)}}let i=(()=>{class n{constructor(n){this.route=n}}return n.\u0275fac=function(s){return new(s||n)(o.Qb(e.a))},n.\u0275cmp=o.Kb({type:n,selectors:[["app-color-picker"]],decls:2,vars:3,consts:[[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"exampleData"]],template:function(n,s){1&n&&(o.Hc(0,r,2,1,"ng-container",0),o.jc(1,"async")),2&n&&o.nc("ngIf",o.kc(1,1,s.route.data))},directives:[l.t,l.s,c.a],pipes:[l.b],styles:[""]}),n})();var m=a("29Wa"),h=a("s4/8"),g=a("nIj0"),f=a("bFHC");const u={title:"Basic",description:"\n  <p>\n    <code>mtx-color-picker</code> has used Chrome picker style of <code>ngx-color</code>, it can't\n    change the picker style now.\n  </p>\n  ",component:(()=>{class n{constructor(){this.color="#3f51b5"}changeColor(n){console.log(n)}}return n.\u0275fac=function(s){return new(s||n)},n.\u0275cmp=o.Kb({type:n,selectors:[["color-picker-example"]],decls:10,vars:1,consts:[["required","",3,"ngModel","ngModelChange","colorChange"],["matSuffix",""]],template:function(n,s){1&n&&(o.Wb(0,"mat-form-field"),o.Wb(1,"mat-label"),o.Jc(2,"Color picker"),o.Vb(),o.Wb(3,"mtx-color-picker",0),o.ec("ngModelChange",(function(n){return s.color=n}))("colorChange",(function(n){return s.changeColor(n)})),o.Vb(),o.Wb(4,"mat-icon",1),o.Jc(5,"palette"),o.Vb(),o.Wb(6,"mat-hint"),o.Jc(7,"Choose your favorite color"),o.Vb(),o.Wb(8,"mat-error"),o.Jc(9,"Please enter the color"),o.Vb(),o.Vb()),2&n&&(o.Cb(3),o.nc("ngModel",s.color))},directives:[m.c,m.g,h.a,g.w,g.l,g.o,f.a,m.j,m.f,m.b],styles:[""]}),n})(),files:[{file:"app.component.html",content:a("eiM3"),filecontent:a("yaeH")},{file:"app.component.ts",content:a("eo8T"),filecontent:a("vMA9")},{file:"app.component.scss",content:a("4BcE"),filecontent:a("UZe1")}]};let j=(()=>{class n{}return n.\u0275mod=o.Ob({type:n}),n.\u0275inj=o.Nb({factory:function(s){return new(s||n)},imports:[[t.a,e.i.forChild([{path:"",component:i,data:{examples:[u]}}])]]}),n})()},"4BcE":function(n,s){n.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},UZe1:function(n,s,a){"use strict";a.r(s),s.default="/** No CSS for this example */\n"},eiM3:function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Color picker<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mtx-color-picker</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"color"</span> (<span class="hljs-attr">colorChange</span>)=<span class="hljs-string">"changeColor($event)"</span> <span class="hljs-attr">required</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mtx-color-picker</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-icon</span> <span class="hljs-attr">matSuffix</span>&gt;</span>palette<span class="hljs-tag">&lt;/<span class="hljs-name">mat-icon</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-hint</span>&gt;</span>Choose your favorite color<span class="hljs-tag">&lt;/<span class="hljs-name">mat-hint</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-error</span>&gt;</span>Please enter the color<span class="hljs-tag">&lt;/<span class="hljs-name">mat-error</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n'},eo8T:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'color-picker-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  color = <span class="hljs-string">\'#3f51b5\'</span>;\n\n  changeColor(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},vMA9:function(n,s,a){"use strict";a.r(s),s.default="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'color-picker-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  color = '#3f51b5';\n\n  changeColor(e: any) {\n    console.log(e);\n  }\n}\n"},yaeH:function(n,s,a){"use strict";a.r(s),s.default='<mat-form-field>\n  <mat-label>Color picker</mat-label>\n  <mtx-color-picker [(ngModel)]="color" (colorChange)="changeColor($event)" required>\n  </mtx-color-picker>\n  <mat-icon matSuffix>palette</mat-icon>\n  <mat-hint>Choose your favorite color</mat-hint>\n  <mat-error>Please enter the color</mat-error>\n</mat-form-field>\n'}}]);