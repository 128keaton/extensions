(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"+Gtk":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"isLoading"</span>&gt;</span>Loading<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">"isLoading"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"+wki":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"+z7n":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"/+Y5":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span>, summary: <span class="hljs-string">\'Total\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span>, summary: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n    { header: <span class="hljs-string">\'Cost\'</span>, field: <span class="hljs-string">\'cost\'</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">\'currency\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"/1dg":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n<span class="hljs-keyword">import</span> { PageEvent } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/material/paginator\'</span>;\n<span class="hljs-keyword">import</span> { HttpClient } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/common/http\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent <span class="hljs-keyword">implements</span> OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-string">\'Name\'</span>,\n      field: <span class="hljs-string">\'name\'</span>,\n      formatter: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;a href="<span class="hljs-subst">${data.html_url}</span>" target="_blank"&gt;<span class="hljs-subst">${data.name}</span>&lt;/a&gt;`</span>,\n    },\n    { header: <span class="hljs-string">\'Owner\'</span>, field: <span class="hljs-string">\'owner.login\'</span> },\n    { header: <span class="hljs-string">\'Owner Avatar\'</span>, field: <span class="hljs-string">\'owner.avatar_url\'</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">\'image\'</span> },\n    { header: <span class="hljs-string">\'Description\'</span>, field: <span class="hljs-string">\'description\'</span>, width: <span class="hljs-string">\'300px\'</span> },\n    { header: <span class="hljs-string">\'Stars\'</span>, field: <span class="hljs-string">\'stargazers_count\'</span> },\n    { header: <span class="hljs-string">\'Forks\'</span>, field: <span class="hljs-string">\'forks_count\'</span> },\n    { header: <span class="hljs-string">\'Score\'</span>, field: <span class="hljs-string">\'score\'</span> },\n    { header: <span class="hljs-string">\'Issues\'</span>, field: <span class="hljs-string">\'open_issues\'</span> },\n    { header: <span class="hljs-string">\'Language\'</span>, field: <span class="hljs-string">\'language\'</span> },\n    { header: <span class="hljs-string">\'License\'</span>, field: <span class="hljs-string">\'license.name\'</span> },\n    { header: <span class="hljs-string">\'Home Page\'</span>, field: <span class="hljs-string">\'homepage\'</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">\'link\'</span> },\n    { header: <span class="hljs-string">\'Is forked\'</span>, field: <span class="hljs-string">\'fork\'</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">\'boolean\'</span> },\n    {\n      header: <span class="hljs-string">\'Archived\'</span>,\n      field: <span class="hljs-string">\'archived\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'tag\'</span>,\n      tag: {\n        <span class="hljs-literal">true</span>: { text: <span class="hljs-string">\'Yes\'</span>, color: <span class="hljs-string">\'red-100\'</span> },\n        <span class="hljs-literal">false</span>: { text: <span class="hljs-string">\'No\'</span>, color: <span class="hljs-string">\'green-100\'</span> },\n      },\n    },\n    { header: <span class="hljs-string">\'Created Date\'</span>, field: <span class="hljs-string">\'created_at\'</span> },\n    { header: <span class="hljs-string">\'Updated Date\'</span>, field: <span class="hljs-string">\'updated_at\'</span> },\n  ];\n  list = [];\n  total = <span class="hljs-number">0</span>;\n  isLoading = <span class="hljs-literal">true</span>;\n\n  query = {\n    q: <span class="hljs-string">\'user:nzbin\'</span>,\n    page: <span class="hljs-number">0</span>,\n    per_page: <span class="hljs-number">5</span>,\n  };\n\n  <span class="hljs-keyword">get</span> params() {\n    <span class="hljs-keyword">const</span> p = <span class="hljs-built_in">Object</span>.assign({}, <span class="hljs-keyword">this</span>.query);\n    p.page += <span class="hljs-number">1</span>;\n    <span class="hljs-keyword">return</span> p;\n  }\n\n  <span class="hljs-keyword">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> http: HttpClient</span>) {}\n\n  ngOnInit() {\n    <span class="hljs-keyword">this</span>.getData();\n  }\n\n  getData() {\n    <span class="hljs-keyword">this</span>.isLoading = <span class="hljs-literal">true</span>;\n    <span class="hljs-keyword">this</span>.http\n      .get(<span class="hljs-string">\'https://api.github.com/search/repositories\'</span>, { params: <span class="hljs-keyword">this</span>.params <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span> })\n      .subscribe(\n        <span class="hljs-function">(<span class="hljs-params">res: <span class="hljs-built_in">any</span></span>) =&gt;</span> {\n          <span class="hljs-keyword">this</span>.list = res.items;\n          <span class="hljs-keyword">this</span>.total = res.total_count;\n          <span class="hljs-keyword">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n          <span class="hljs-keyword">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        },\n        <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n          <span class="hljs-keyword">this</span>.isLoading = <span class="hljs-literal">false</span>;\n        }\n      );\n  }\n\n  getNextPage(e: PageEvent) {\n    <span class="hljs-keyword">this</span>.query.page = e.pageIndex;\n    <span class="hljs-keyword">this</span>.query.per_page = e.pageSize;\n    <span class="hljs-keyword">this</span>.getData();\n  }\n\n  refresh() {\n    <span class="hljs-keyword">this</span>.getData();\n  }\n}\n'},"/LrM":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},"0LFB":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"1Lg5":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"2Gcz":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"2L3u":function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},"2OhO":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},"2eyz":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = <span class="hljs-literal">true</span>;\n  columnMovable = <span class="hljs-literal">true</span>;\n}\n'},"2z1R":function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-bottom: 1rem;\n}\n"},"48nt":function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},"5dWc":function(s,n,a){"use strict";a.r(n),n.default=":host ::ng-deep .label {\n  padding: 5px 10px;\n  border-radius: 999px;\n  background-color: #ffb74d;\n}\n"},"5w79":function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('statusTpl', { static: true }) statusTpl: TemplateRef<any>;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    this.columns = [\n      { header: 'Name', field: 'name' },\n      { header: 'Weight', field: 'weight' },\n      { header: 'Gender', field: 'gender' },\n      { header: 'Mobile', field: 'mobile' },\n      { header: 'City', field: 'city' },\n      { header: 'Status', field: 'status', cellTemplate: this.statusTpl },\n    ];\n  }\n}\n"},"705O":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [pageOnFront]="false"\n          [showPaginator]="false">\n</mtx-grid>\n'},"7BMS":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},"8FVU":function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [cellTemplate]="{ city: cityTpl }">\n</mtx-grid>\n\n<ng-template #cityTpl let-row let-index="index" let-col="colDef">\n  <button mat-raised-button color="primary">{{row.city}}</button>\n</ng-template>\n'},"8S/e":function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowHover">Hover</mat-checkbox>\n  <mat-checkbox [(ngModel)]="rowStriped">Striped</mat-checkbox>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [rowHover]="rowHover"\n          [rowStriped]="rowStriped">\n</mtx-grid>\n'},"8cD9":function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},"93A+":function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span>,\n<span class="hljs-selector-class">.mat-radio-button</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},"9QST":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = <span class="hljs-literal">true</span>;\n  rowStriped = <span class="hljs-literal">false</span>;\n}\n'},AYo8:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},Aodh:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},CDYS:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', sortable: true },\n    { header: 'Weight', field: 'weight', sortable: true },\n    { header: 'Gender', field: 'gender', sortable: true },\n    { header: 'Mobile', field: 'mobile', sortable: true },\n    { header: 'City', field: 'city', sortable: true },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},CSbO:function(s,n,a){"use strict";a.r(n),n.default=".mat-raised-button {\n  margin-bottom: 1rem;\n}\n"},DJtL:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n    {\n      header: <span class="hljs-string">\'Operation\'</span>,\n      field: <span class="hljs-string">\'operation\'</span>,\n      width: <span class="hljs-string">\'120px\'</span>,\n      pinned: <span class="hljs-string">\'right\'</span>,\n      right: <span class="hljs-string">\'0px\'</span>,\n      <span class="hljs-keyword">type</span>: <span class="hljs-string">\'button\'</span>,\n      buttons: [\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">\'icon\'</span>,\n          text: <span class="hljs-string">\'edit\'</span>,\n          icon: <span class="hljs-string">\'edit\'</span>,\n          tooltip: <span class="hljs-string">\'Edit\'</span>,\n          click: <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n            alert(<span class="hljs-string">\'edit\'</span>);\n          },\n        },\n        {\n          <span class="hljs-keyword">type</span>: <span class="hljs-string">\'icon\'</span>,\n          text: <span class="hljs-string">\'delete\'</span>,\n          icon: <span class="hljs-string">\'delete\'</span>,\n          tooltip: <span class="hljs-string">\'Delete\'</span>,\n          color: <span class="hljs-string">\'warn\'</span>,\n          pop: <span class="hljs-literal">true</span>,\n          popTitle: <span class="hljs-string">\'Confirm delete?\'</span>,\n          click: <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n            alert(<span class="hljs-string">\'delete\'</span>);\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},DtCM:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},E8jj:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component, OnInit, ViewChild, TemplateRef } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent <span class="hljs-keyword">implements</span> OnInit {\n  <span class="hljs-meta">@ViewChild</span>(<span class="hljs-string">\'statusTpl\'</span>, { <span class="hljs-keyword">static</span>: <span class="hljs-literal">true</span> }) statusTpl: TemplateRef&lt;<span class="hljs-built_in">any</span>&gt;;\n\n  columns: MtxGridColumn[] = [];\n\n  list = EXAMPLE_DATA;\n\n  ngOnInit() {\n    <span class="hljs-keyword">this</span>.columns = [\n      { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span> },\n      { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n      { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n      { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n      { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n      { header: <span class="hljs-string">\'Status\'</span>, field: <span class="hljs-string">\'status\'</span>, cellTemplate: <span class="hljs-keyword">this</span>.statusTpl },\n    ];\n  }\n}\n'},FoZ3:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">showSummary</span>]=<span class="hljs-string">"true"</span>\n          [<span class="hljs-attr">summaryTemplate</span>]=<span class="hljs-string">"{\'cost\': footerTpl}"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">footerTpl</span> <span class="hljs-attr">let-data</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{{getTotalCost(data) | currency}}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},G7ct:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},GLZs:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">headerTemplate</span>]=<span class="hljs-string">"headerTpl"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">headerTpl</span> <span class="hljs-attr">let-col</span>&gt;</span>\n  {{col.header}} <span class="hljs-tag">&lt;<span class="hljs-name">mat-icon</span> [<span class="hljs-attr">matTooltip</span>]=<span class="hljs-string">"col.description"</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">mat-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},GWAD:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},GgQz:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span>, description: <span class="hljs-string">\'Info about the name\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span>, description: <span class="hljs-string">\'Info about the weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span>, description: <span class="hljs-string">\'Info about the gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span>, description: <span class="hljs-string">\'Info about the mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span>, description: <span class="hljs-string">\'Info about the city\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},IFLB:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n  ];\n\n  list = [];\n}\n'},J5dd:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},"JUl+":function(s,n){s.exports='<span class="hljs-selector-class">.mat-raised-button</span> {\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},JV4J:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [headerTemplate]="headerTpl">\n</mtx-grid>\n\n<ng-template #headerTpl let-col>\n  {{col.header}} <mat-icon [matTooltip]="col.description">info</mat-icon>\n</ng-template>\n'},KXed:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},LPdT:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', summary: 'Total' },\n    { header: 'Weight', field: 'weight', summary: data => Math.max(...data) },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    { header: 'Cost', field: 'cost', type: 'currency' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: any) {\n    return data.reduce((acc: any, value: any) => acc + value, 0);\n  }\n}\n"},Lj52:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = true;\n}\n"},Meuw:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},Mtr3:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},NE6O:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">statusTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">"index"</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">"colDef"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slide-toggle</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">"row.status"</span>&gt;</span>Slide me!<span class="hljs-tag">&lt;/<span class="hljs-name">mat-slide-toggle</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},OduZ:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="columnHideable">Column Hiding</mat-checkbox>\n  <mat-checkbox [(ngModel)]="columnMovable">Column Moving</mat-checkbox>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [toolbarTitle]="\'Data Grid\'"\n          [columnHideable]="columnHideable"\n          [columnMovable]="columnMovable">\n</mtx-grid>\n'},OsdS:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span>, showExpand: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},PM5x:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span>, sortable: <span class="hljs-literal">true</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span>, sortable: <span class="hljs-literal">true</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},QDm0:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},RMCV:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [sortOnFront]="true"\n          (sortChange)="log($event)">\n</mtx-grid>\n'},Reqn:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Position', field: 'position', width: '200px' },\n    { header: 'Name', field: 'name', width: '200px', pinned: 'left' },\n    { header: 'tags', field: 'tag.0.value', width: '200px' },\n    { header: 'Weight', field: 'weight', width: '200px', pinned: 'left' },\n    { header: 'Symbol', field: 'symbol', width: '200px' },\n    { header: 'Gender', field: 'gender', width: '200px' },\n    { header: 'Mobile', field: 'mobile', width: '200px' },\n    { header: 'Tele', field: 'tele', width: '200px' },\n    { header: 'City', field: 'city', width: '200px' },\n    { header: 'Address', field: 'address', width: '200px' },\n    { header: 'Date', field: 'date', width: '200px' },\n    { header: 'Website', field: 'website', width: '200px' },\n    { header: 'Company', field: 'company', width: '200px' },\n    { header: 'Email', field: 'email', width: '200px', pinned: 'right' },\n    { header: 'Status', field: 'status', type: 'boolean', width: '200px' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},ReuQ:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},SXGs:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = [];\n}\n"},TGGQ:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"columnHideable"</span>&gt;</span>Column Hiding<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"columnMovable"</span>&gt;</span>Column Moving<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">"true"</span>\n          [<span class="hljs-attr">toolbarTitle</span>]=<span class="hljs-string">"\'Data Grid\'"</span>\n          [<span class="hljs-attr">columnHideable</span>]=<span class="hljs-string">"columnHideable"</span>\n          [<span class="hljs-attr">columnMovable</span>]=<span class="hljs-string">"columnMovable"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},TafY:function(s,n){s.exports='<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> EXAMPLE_DATA: <span class="hljs-built_in">any</span>[] = [\n  {\n    position: <span class="hljs-number">1</span>,\n    name: <span class="hljs-string">\'Boron\'</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">\'red\'</span>,\n        value: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],\n      },\n    ],\n    weight: <span class="hljs-number">10.811</span>,\n    symbol: <span class="hljs-string">\'B\'</span>,\n    gender: <span class="hljs-string">\'male\'</span>,\n    mobile: <span class="hljs-string">\'13198765432\'</span>,\n    tele: <span class="hljs-string">\'567891234\'</span>,\n    city: <span class="hljs-string">\'Berlin\'</span>,\n    address: <span class="hljs-string">\'Bernauer Str.111,13355\'</span>,\n    date: <span class="hljs-string">\'1423456765768\'</span>,\n    website: <span class="hljs-string">\'www.matero.com\'</span>,\n    company: <span class="hljs-string">\'matero\'</span>,\n    email: <span class="hljs-string">\'Boron@gmail.com\'</span>,\n    status: <span class="hljs-literal">false</span>,\n    cost: <span class="hljs-number">4</span>\n  },\n  {\n    position: <span class="hljs-number">2</span>,\n    name: <span class="hljs-string">\'Helium\'</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">\'blue\'</span>,\n        value: [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>],\n      },\n    ],\n    weight: <span class="hljs-number">8.0026</span>,\n    symbol: <span class="hljs-string">\'He\'</span>,\n    gender: <span class="hljs-string">\'female\'</span>,\n    mobile: <span class="hljs-string">\'13034676675\'</span>,\n    tele: <span class="hljs-string">\'80675432\'</span>,\n    city: <span class="hljs-string">\'Shanghai\'</span>,\n    address: <span class="hljs-string">\'88 Songshan Road\'</span>,\n    date: <span class="hljs-string">\'1423456765768\'</span>,\n    website: <span class="hljs-string">\'www.matero.com\'</span>,\n    company: <span class="hljs-string">\'matero\'</span>,\n    email: <span class="hljs-string">\'Helium@gmail.com\'</span>,\n    status: <span class="hljs-literal">true</span>,\n    cost: <span class="hljs-number">5</span>\n  },\n  {\n    position: <span class="hljs-number">3</span>,\n    name: <span class="hljs-string">\'Nitrogen\'</span>,\n    tag: [\n      {\n        color: <span class="hljs-string">\'yellow\'</span>,\n        value: [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>],\n      },\n    ],\n    weight: <span class="hljs-number">14.0067</span>,\n    symbol: <span class="hljs-string">\'N\'</span>,\n    gender: <span class="hljs-string">\'male\'</span>,\n    mobile: <span class="hljs-string">\'15811112222\'</span>,\n    tele: <span class="hljs-string">\'345678912\'</span>,\n    city: <span class="hljs-string">\'Sydney\'</span>,\n    address: <span class="hljs-string">\'Circular Quay, Sydney NSW 2000\'</span>,\n    date: <span class="hljs-string">\'1423456765768\'</span>,\n    website: <span class="hljs-string">\'www.matero.com\'</span>,\n    company: <span class="hljs-string">\'matero\'</span>,\n    email: <span class="hljs-string">\'Nitrogen@gmail.com\'</span>,\n    status: <span class="hljs-literal">true</span>,\n    cost: <span class="hljs-number">2</span>\n  },\n];\n'},"UN+l":function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Position\'</span>, field: <span class="hljs-string">\'position\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span>, width: <span class="hljs-string">\'200px\'</span>, pinned: <span class="hljs-string">\'left\'</span> },\n    { header: <span class="hljs-string">\'tags\'</span>, field: <span class="hljs-string">\'tag.0.value\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span>, width: <span class="hljs-string">\'200px\'</span>, pinned: <span class="hljs-string">\'left\'</span> },\n    { header: <span class="hljs-string">\'Symbol\'</span>, field: <span class="hljs-string">\'symbol\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'Tele\'</span>, field: <span class="hljs-string">\'tele\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'Address\'</span>, field: <span class="hljs-string">\'address\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'Date\'</span>, field: <span class="hljs-string">\'date\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'Website\'</span>, field: <span class="hljs-string">\'website\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'Company\'</span>, field: <span class="hljs-string">\'company\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n    { header: <span class="hljs-string">\'Email\'</span>, field: <span class="hljs-string">\'email\'</span>, width: <span class="hljs-string">\'200px\'</span>, pinned: <span class="hljs-string">\'right\'</span> },\n    { header: <span class="hljs-string">\'Status\'</span>, field: <span class="hljs-string">\'status\'</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">\'boolean\'</span>, width: <span class="hljs-string">\'200px\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},UXFV:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},W9LF:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showToolbar]="true"\n          [showColumnMenuButton]="false"\n          [toolbarTemplate]="toolbarTpl">\n</mtx-grid>\n\n<ng-template #toolbarTpl>\n  <input placeholder="Search">\n</ng-template>\n'},WJ6K:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},XHzA:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},YPR1:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"rowSelectable"</span>&gt;</span>Row selectable<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"hideRowSelectionCheckbox"</span>&gt;</span>Hide checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"multiSelectable"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"false"</span>&gt;</span>Single<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"true"</span>&gt;</span>Multiple<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">multiSelectable</span>]=<span class="hljs-string">"multiSelectable"</span>\n          [<span class="hljs-attr">hideRowSelectionCheckbox</span>]=<span class="hljs-string">"hideRowSelectionCheckbox"</span>\n          [<span class="hljs-attr">rowSelectable</span>]=<span class="hljs-string">"rowSelectable"</span>\n          [<span class="hljs-attr">rowSelected</span>]=<span class="hljs-string">"rowSelected"</span>\n          [<span class="hljs-attr">rowSelectionFormatter</span>]=<span class="hljs-string">"rowSelectionFormatter"</span>\n          (<span class="hljs-attr">rowSelectionChange</span>)=<span class="hljs-string">"log($event)"</span>\n          (<span class="hljs-attr">cellSelectionChange</span>)=<span class="hljs-string">"log($event)"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},YYJN:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},Z61D:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},ZjNe:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  columnHideable = true;\n  columnMovable = true;\n}\n"},ai1J:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"primary"</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"refresh()"</span>&gt;</span>Refresh<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">length</span>]=<span class="hljs-string">"total"</span>\n          [<span class="hljs-attr">loading</span>]=<span class="hljs-string">"isLoading"</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">"false"</span>\n          [<span class="hljs-attr">pageIndex</span>]=<span class="hljs-string">"query.page"</span>\n          [<span class="hljs-attr">pageSize</span>]=<span class="hljs-string">"query.per_page"</span>\n          [<span class="hljs-attr">pageSizeOptions</span>]=<span class="hljs-string">"[5,10,20]"</span>\n          (<span class="hljs-attr">page</span>)=<span class="hljs-string">"getNextPage($event)"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},bxlB:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},cBui:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span>, summary: <span class="hljs-string">\'Total\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span>, summary: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> <span class="hljs-built_in">Math</span>.max(...data) },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n    { header: <span class="hljs-string">\'Cost\'</span>, field: <span class="hljs-string">\'cost\'</span>, <span class="hljs-keyword">type</span>: <span class="hljs-string">\'currency\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  getTotalCost(data: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-keyword">return</span> data.reduce(<span class="hljs-function">(<span class="hljs-params">acc: <span class="hljs-built_in">any</span>, value: <span class="hljs-built_in">any</span></span>) =&gt;</span> acc + value, <span class="hljs-number">0</span>);\n  }\n}\n'},"df+T":function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"rowHover"</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"rowStriped"</span>&gt;</span>Striped<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">rowHover</span>]=<span class="hljs-string">"rowHover"</span>\n          [<span class="hljs-attr">rowStriped</span>]=<span class="hljs-string">"rowStriped"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},dzW7:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  rowHover = true;\n  rowStriped = false;\n}\n"},ec7O:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},ecK2:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">pageOnFront</span>]=<span class="hljs-string">"false"</span>\n          [<span class="hljs-attr">showPaginator</span>]=<span class="hljs-string">"false"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},gcNB:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [expandable]="true"\n          [expansionTemplate]="expansionTpl"\n          (expansionChange)="log($event)">\n</mtx-grid>\n\n<ng-template #expansionTpl let-row>\n  {{row.name}}\n</ng-template>\n'},gfyD:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  isLoading = <span class="hljs-literal">true</span>;\n}\n'},ggKf:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},gqKb:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<span class=\"label\">${data.name}</span>`,\n    },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},h5uV:function(s,n,a){"use strict";a.r(n),n.default='<mat-checkbox [(ngModel)]="isLoading">Loading</mat-checkbox>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [loading]="isLoading">\n</mtx-grid>\n'},hilW:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},hkiY:function(s,n,a){"use strict";a.r(n),n.default='<button mat-raised-button color="primary" (click)="refresh()">Refresh</button>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [length]="total"\n          [loading]="isLoading"\n          [pageOnFront]="false"\n          [pageIndex]="query.page"\n          [pageSize]="query.per_page"\n          [pageSizeOptions]="[5,10,20]"\n          (page)="getNextPage($event)">\n</mtx-grid>\n'},i0wx:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">sortOnFront</span>]=<span class="hljs-string">"true"</span>\n          (<span class="hljs-attr">sortChange</span>)=<span class="hljs-string">"log($event)"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},iBo5:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', showExpand: true },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},jH17:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},lKjp:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n    {\n      header: 'Operation',\n      field: 'operation',\n      width: '120px',\n      pinned: 'right',\n      right: '0px',\n      type: 'button',\n      buttons: [\n        {\n          type: 'icon',\n          text: 'edit',\n          icon: 'edit',\n          tooltip: 'Edit',\n          click: () => {\n            alert('edit');\n          },\n        },\n        {\n          type: 'icon',\n          text: 'delete',\n          icon: 'delete',\n          tooltip: 'Delete',\n          color: 'warn',\n          pop: true,\n          popTitle: 'Confirm delete?',\n          click: () => {\n            alert('delete');\n          },\n        },\n      ],\n    },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},lZ76:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">cellTemplate</span>]=<span class="hljs-string">"{ city: cityTpl }"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">cityTpl</span> <span class="hljs-attr">let-row</span> <span class="hljs-attr">let-index</span>=<span class="hljs-string">"index"</span> <span class="hljs-attr">let-col</span>=<span class="hljs-string">"colDef"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"primary"</span>&gt;</span>{{row.city}}<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},m8xE:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn, MtxGridRowSelectionFormatter } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = <span class="hljs-literal">true</span>;\n  hideRowSelectionCheckbox = <span class="hljs-literal">false</span>;\n  rowSelectable = <span class="hljs-literal">true</span>;\n  rowSelected = EXAMPLE_DATA.slice(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">\'Boron\'</span>,\n    hideCheckbox: <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> data.name === <span class="hljs-string">\'John\'</span>,\n  };\n\n  log(e: <span class="hljs-built_in">any</span>) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n}\n'},nJyt:function(s,n){s.exports='<span class="hljs-selector-class">.mat-checkbox</span> {\n  <span class="hljs-attribute">display</span>: inline-block;\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;\n}\n'},nga3:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},oC3v:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},oXCI:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n'},oioM:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},pxEU:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">showToolbar</span>]=<span class="hljs-string">"true"</span>\n          [<span class="hljs-attr">showColumnMenuButton</span>]=<span class="hljs-string">"false"</span>\n          [<span class="hljs-attr">toolbarTemplate</span>]=<span class="hljs-string">"toolbarTpl"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">toolbarTpl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Search"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},qJlr:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: <span class="hljs-string">\'Name\'</span>, field: <span class="hljs-string">\'name\'</span> },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'},qQdu:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns"\n          [showSummary]="true"\n          [summaryTemplate]="{\'cost\': footerTpl}">\n</mtx-grid>\n\n<ng-template #footerTpl let-data>\n  <div>{{getTotalCost(data) | currency}}</div>\n</ng-template>\n'},r6oY:function(s,n){s.exports=':host ::ng-deep .label {\n  padding: <span class="hljs-number">5px</span> <span class="hljs-number">10px</span>;\n  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">999px</span>;\n  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ffb74d</span>;\n}\n'},rTxb:function(s,n,a){"use strict";a.r(n),a.d(n,"DataGridModule",(function(){return $}));var e=a("sEIs"),t=a("M0ag"),l=a("EM62"),p=a("PBFl"),r=a("2kYt"),o=a("5S+f"),i=a("Pg5x");function c(s,n){if(1&s&&(l.Ub(0),l.Rb(1,"doc-heading",3),l.Rb(2,"example-viewer",4),l.Tb()),2&s){const s=n.$implicit;l.Cb(1),l.nc("text",s.title),l.Cb(1),l.nc("exampleData",s)}}function h(s,n){if(1&s&&(l.Ub(0),l.Hc(1,c,3,2,"ng-container",2),l.Tb()),2&s){const s=n.ngIf;l.Cb(1),l.nc("ngForOf",s.examples)}}let d=(()=>{class s{constructor(s){this.route=s;let n=s;for(;!n.routeConfig.path;)n=n.parent}trackByName(s,n){return n.name}}return s.\u0275fac=function(n){return new(n||s)(l.Qb(e.a))},s.\u0275cmp=l.Kb({type:s,selectors:[["app-data-grid"]],decls:10,vars:3,consts:[["mat-raised-button","","color","accent","href","https://nzbin.gitbook.io/material-extensions/data-grid","target","_blank"],[4,"ngIf"],[4,"ngFor","ngForOf"],[3,"text"],[3,"exampleData"]],template:function(s,n){1&s&&(l.Wb(0,"p"),l.Jc(1," The "),l.Wb(2,"code"),l.Jc(3,"mtx-grid"),l.Vb(),l.Jc(4," is an powerful material table component. It supports cell selectable, row selectable, multiple row selectable, row expandable, column hiding, column moving and so on.\n"),l.Vb(),l.Wb(5,"p"),l.Wb(6,"a",0),l.Jc(7,"API Reference"),l.Vb(),l.Vb(),l.Hc(8,h,2,1,"ng-container",1),l.jc(9,"async")),2&s&&(l.Cb(8),l.nc("ngIf",l.kc(9,1,n.route.data)))},directives:[p.a,r.t,r.s,o.a,i.a],pipes:[r.b],styles:[""]}),s})();const m=[{position:1,name:"Boron",tag:[{color:"red",value:[1,2]}],weight:10.811,symbol:"B",gender:"male",mobile:"13198765432",tele:"567891234",city:"Berlin",address:"Bernauer Str.111,13355",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Boron@gmail.com",status:!1,cost:4},{position:2,name:"Helium",tag:[{color:"blue",value:[3,4]}],weight:8.0026,symbol:"He",gender:"female",mobile:"13034676675",tele:"80675432",city:"Shanghai",address:"88 Songshan Road",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Helium@gmail.com",status:!0,cost:5},{position:3,name:"Nitrogen",tag:[{color:"yellow",value:[5,6]}],weight:14.0067,symbol:"N",gender:"male",mobile:"15811112222",tele:"345678912",city:"Sydney",address:"Circular Quay, Sydney NSW 2000",date:"1423456765768",website:"www.matero.com",company:"matero",email:"Nitrogen@gmail.com",status:!0,cost:2}];var g=a("CGrA");const u={title:"Basic",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=m}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&l.Rb(0,"mtx-grid",0),2&s&&l.nc("data",n.list)("columns",n.columns)},directives:[g.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("hilW"),filecontent:a("/LrM")},{file:"app.component.ts",content:a("qJlr"),filecontent:a("GWAD")},{file:"app.component.scss",content:a("0LFB"),filecontent:a("2Gcz")},{file:"data.ts",content:a("TafY"),filecontent:a("tD0s")}]};var j=a("+Tre"),f=a("nIj0");const b={title:"Loading status",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=m,this.isLoading=!0}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","loading"]],template:function(s,n){1&s&&(l.Wb(0,"mat-checkbox",0),l.ec("ngModelChange",(function(s){return n.isLoading=s})),l.Jc(1,"Loading"),l.Vb(),l.Rb(2,"mtx-grid",1)),2&s&&(l.nc("ngModel",n.isLoading),l.Cb(2),l.nc("data",n.list)("columns",n.columns)("loading",n.isLoading))},directives:[j.a,f.l,f.o,g.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("+Gtk"),filecontent:a("h5uV")},{file:"app.component.ts",content:a("gfyD"),filecontent:a("Lj52")},{file:"app.component.scss",content:a("QDm0"),filecontent:a("2z1R")}]},x={title:"Hide pagination",description:"\n  <p>If you hide the pagination, you should set <code>pageOnFront</code> false to show all the data.\n  </p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=m}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:1,vars:4,consts:[[3,"data","columns","pageOnFront","showPaginator"]],template:function(s,n){1&s&&l.Rb(0,"mtx-grid",0),2&s&&l.nc("data",n.list)("columns",n.columns)("pageOnFront",!1)("showPaginator",!1)},directives:[g.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("ecK2"),filecontent:a("705O")},{file:"app.component.ts",content:a("2OhO"),filecontent:a("WJ6K")},{file:"app.component.scss",content:a("oC3v"),filecontent:a("s9C1")}]},y={title:"Sortable",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",sortable:!0},{header:"Weight",field:"weight",sortable:!0},{header:"Gender",field:"gender",sortable:!0},{header:"Mobile",field:"mobile",sortable:!0},{header:"City",field:"city",sortable:!0}],this.list=m}log(s){console.log(s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:1,vars:3,consts:[[3,"data","columns","sortOnFront","sortChange"]],template:function(s,n){1&s&&(l.Wb(0,"mtx-grid",0),l.ec("sortChange",(function(s){return n.log(s)})),l.Vb()),2&s&&l.nc("data",n.list)("columns",n.columns)("sortOnFront",!0)},directives:[g.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("i0wx"),filecontent:a("RMCV")},{file:"app.component.ts",content:a("PM5x"),filecontent:a("CDYS")},{file:"app.component.scss",content:a("UXFV"),filecontent:a("oioM")}]};var w=a("F1o0");const C={title:"Row selectable",description:"\n  <p>If you choose multiple option, you can press <kbd>ctrl</kbd>/<kbd>command</kbd> +\n  click or select checkboxs to choose multiple row.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=m,this.multiSelectable=!0,this.hideRowSelectionCheckbox=!1,this.rowSelectable=!0,this.rowSelected=m.slice(2,3),this.rowSelectionFormatter={disabled:s=>"Boron"===s.name,hideCheckbox:s=>"John"===s.name}}log(s){console.log(s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:11,vars:12,consts:[[3,"ngModel","ngModelChange"],[3,"value"],[3,"data","columns","multiSelectable","hideRowSelectionCheckbox","rowSelectable","rowSelected","rowSelectionFormatter","rowSelectionChange","cellSelectionChange"]],template:function(s,n){1&s&&(l.Wb(0,"div"),l.Wb(1,"mat-checkbox",0),l.ec("ngModelChange",(function(s){return n.rowSelectable=s})),l.Jc(2,"Row selectable"),l.Vb(),l.Wb(3,"mat-checkbox",0),l.ec("ngModelChange",(function(s){return n.hideRowSelectionCheckbox=s})),l.Jc(4,"Hide checkbox"),l.Vb(),l.Wb(5,"mat-radio-group",0),l.ec("ngModelChange",(function(s){return n.multiSelectable=s})),l.Wb(6,"mat-radio-button",1),l.Jc(7,"Single"),l.Vb(),l.Wb(8,"mat-radio-button",1),l.Jc(9,"Multiple"),l.Vb(),l.Vb(),l.Vb(),l.Wb(10,"mtx-grid",2),l.ec("rowSelectionChange",(function(s){return n.log(s)}))("cellSelectionChange",(function(s){return n.log(s)})),l.Vb()),2&s&&(l.Cb(1),l.nc("ngModel",n.rowSelectable),l.Cb(2),l.nc("ngModel",n.hideRowSelectionCheckbox),l.Cb(2),l.nc("ngModel",n.multiSelectable),l.Cb(1),l.nc("value",!1),l.Cb(2),l.nc("value",!0),l.Cb(2),l.nc("data",n.list)("columns",n.columns)("multiSelectable",n.multiSelectable)("hideRowSelectionCheckbox",n.hideRowSelectionCheckbox)("rowSelectable",n.rowSelectable)("rowSelected",n.rowSelected)("rowSelectionFormatter",n.rowSelectionFormatter))},directives:[j.a,f.l,f.o,w.b,w.a,g.a],styles:[".mat-checkbox[_ngcontent-%COMP%], .mat-radio-button[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("YPR1"),filecontent:a("up5s")},{file:"app.component.ts",content:a("m8xE"),filecontent:a("tF9F")},{file:"app.component.scss",content:a("93A+"),filecontent:a("rvl2")}]};function k(s,n){1&s&&l.Jc(0),2&s&&l.Lc(" ",n.$implicit.name,"\n")}const M={title:"Expandable row",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",showExpand:!0},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=m}log(s){console.log(s)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:3,vars:4,consts:[[3,"data","columns","expandable","expansionTemplate","expansionChange"],["expansionTpl",""]],template:function(s,n){if(1&s&&(l.Wb(0,"mtx-grid",0),l.ec("expansionChange",(function(s){return n.log(s)})),l.Vb(),l.Hc(1,k,1,1,"ng-template",null,1,l.Ic)),2&s){const s=l.vc(2);l.nc("data",n.list)("columns",n.columns)("expandable",!0)("expansionTemplate",s)}},directives:[g.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("sg0B"),filecontent:a("gcNB")},{file:"app.component.ts",content:a("OsdS"),filecontent:a("iBo5")},{file:"app.component.scss",content:a("ggKf"),filecontent:a("XHzA")}]},A={title:"Column hiding & moving",description:"\n  <p>Click the <kbd>Column Shown</kbd> button, you can select or drag the columns.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=m,this.columnHideable=!0,this.columnMovable=!0}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:6,vars:8,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","showToolbar","toolbarTitle","columnHideable","columnMovable"]],template:function(s,n){1&s&&(l.Wb(0,"div"),l.Wb(1,"mat-checkbox",0),l.ec("ngModelChange",(function(s){return n.columnHideable=s})),l.Jc(2,"Column Hiding"),l.Vb(),l.Wb(3,"mat-checkbox",0),l.ec("ngModelChange",(function(s){return n.columnMovable=s})),l.Jc(4,"Column Moving"),l.Vb(),l.Vb(),l.Rb(5,"mtx-grid",1)),2&s&&(l.Cb(1),l.nc("ngModel",n.columnHideable),l.Cb(2),l.nc("ngModel",n.columnMovable),l.Cb(2),l.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("toolbarTitle","Data Grid")("columnHideable",n.columnHideable)("columnMovable",n.columnMovable))},directives:[j.a,f.l,f.o,g.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("TGGQ"),filecontent:a("OduZ")},{file:"app.component.ts",content:a("2eyz"),filecontent:a("ZjNe")},{file:"app.component.scss",content:a("jH17"),filecontent:a("vbzM")}]},S={title:"Column pinnable",component:(()=>{class s{constructor(){this.columns=[{header:"Position",field:"position",width:"200px"},{header:"Name",field:"name",width:"200px",pinned:"left"},{header:"tags",field:"tag.0.value",width:"200px"},{header:"Weight",field:"weight",width:"200px",pinned:"left"},{header:"Symbol",field:"symbol",width:"200px"},{header:"Gender",field:"gender",width:"200px"},{header:"Mobile",field:"mobile",width:"200px"},{header:"Tele",field:"tele",width:"200px"},{header:"City",field:"city",width:"200px"},{header:"Address",field:"address",width:"200px"},{header:"Date",field:"date",width:"200px"},{header:"Website",field:"website",width:"200px"},{header:"Company",field:"company",width:"200px"},{header:"Email",field:"email",width:"200px",pinned:"right"},{header:"Status",field:"status",type:"boolean",width:"200px"}],this.list=m}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&l.Rb(0,"mtx-grid",0),2&s&&l.nc("data",n.list)("columns",n.columns)},directives:[g.a],styles:[""]}),s})(),description:"\n  <p>The <code>name</code> and <code>weight</code> column pinned left, the <code>email</code> column\n  pinned right. Scroll the columns to test.</p>\n  ",files:[{file:"app.component.html",content:a("vSoS"),filecontent:a("KXed")},{file:"app.component.ts",content:a("UN+l"),filecontent:a("Reqn")},{file:"app.component.scss",content:a("2L3u"),filecontent:a("8cD9")}]},T={title:"Hover & striped",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=m,this.rowHover=!0,this.rowStriped=!1}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:6,vars:6,consts:[[3,"ngModel","ngModelChange"],[3,"data","columns","rowHover","rowStriped"]],template:function(s,n){1&s&&(l.Wb(0,"div"),l.Wb(1,"mat-checkbox",0),l.ec("ngModelChange",(function(s){return n.rowHover=s})),l.Jc(2,"Hover"),l.Vb(),l.Wb(3,"mat-checkbox",0),l.ec("ngModelChange",(function(s){return n.rowStriped=s})),l.Jc(4,"Striped"),l.Vb(),l.Vb(),l.Rb(5,"mtx-grid",1)),2&s&&(l.Cb(1),l.nc("ngModel",n.rowHover),l.Cb(2),l.nc("ngModel",n.rowStriped),l.Cb(2),l.nc("data",n.list)("columns",n.columns)("rowHover",n.rowHover)("rowStriped",n.rowStriped))},directives:[j.a,f.l,f.o,g.a],styles:[".mat-checkbox[_ngcontent-%COMP%]{display:inline-block;margin-right:1rem;margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("df+T"),filecontent:a("8S/e")},{file:"app.component.ts",content:a("9QST"),filecontent:a("dzW7")},{file:"app.component.scss",content:a("nJyt"),filecontent:a("ec7O")}]},v={title:"Row with buttons",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Operation",field:"operation",width:"120px",pinned:"right",right:"0px",type:"button",buttons:[{type:"icon",text:"edit",icon:"edit",tooltip:"Edit",click:()=>{alert("edit")}},{type:"icon",text:"delete",icon:"delete",tooltip:"Delete",color:"warn",pop:!0,popTitle:"Confirm delete?",click:()=>{alert("delete")}}]}],this.list=m}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&l.Rb(0,"mtx-grid",0),2&s&&l.nc("data",n.list)("columns",n.columns)},directives:[g.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("+wki"),filecontent:a("Z61D")},{file:"app.component.ts",content:a("DJtL"),filecontent:a("lKjp")},{file:"app.component.scss",content:a("ReuQ"),filecontent:a("1Lg5")}]};var E=a("k8N0");const G=["statusTpl"];function _(s,n){1&s&&(l.Wb(0,"mat-slide-toggle",2),l.Jc(1,"Slide me!"),l.Vb()),2&s&&l.nc("checked",n.$implicit.status)}const L={title:"Custom cell template",description:"\n  <p>The status column are custom cells.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[],this.list=m}ngOnInit(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Status",field:"status",cellTemplate:this.statusTpl}]}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],viewQuery:function(s,n){var a;1&s&&l.Ec(G,!0),2&s&&l.uc(a=l.fc())&&(n.statusTpl=a.first)},decls:3,vars:2,consts:[[3,"data","columns"],["statusTpl",""],[3,"checked"]],template:function(s,n){1&s&&(l.Rb(0,"mtx-grid",0),l.Hc(1,_,2,1,"ng-template",null,1,l.Ic)),2&s&&l.nc("data",n.list)("columns",n.columns)},directives:[g.a,E.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("NE6O"),filecontent:a("tEOP")},{file:"app.component.ts",content:a("E8jj"),filecontent:a("5w79")},{file:"app.component.scss",content:a("YYJN"),filecontent:a("wvfp")}]};function D(s,n){if(1&s&&(l.Wb(0,"button",2),l.Jc(1),l.Vb()),2&s){const s=n.$implicit;l.Cb(1),l.Kc(s.city)}}const N=function(s){return{city:s}},P={title:"Custom cell template 2",description:'\n  <p>There has another easiest way to custom cells. You can use property\n  <code>[cellTemplate]="{ city: cityTpl }"</code></p>\n  ',component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=m}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:3,vars:5,consts:[[3,"data","columns","cellTemplate"],["cityTpl",""],["mat-raised-button","","color","primary"]],template:function(s,n){if(1&s&&(l.Rb(0,"mtx-grid",0),l.Hc(1,D,2,1,"ng-template",null,1,l.Ic)),2&s){const s=l.vc(2);l.nc("data",n.list)("columns",n.columns)("cellTemplate",l.qc(3,N,s))}},directives:[g.a,p.b],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("lZ76"),filecontent:a("8FVU")},{file:"app.component.ts",content:a("Aodh"),filecontent:a("xX41")},{file:"app.component.scss",content:a("Meuw"),filecontent:a("nga3")}]},W={title:"Data formatting",description:"\n  <p>The <code>name</code> field use a formatter.</p>\n  ",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",formatter:s=>`<span class="label">${s.name}</span>`},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=m}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&l.Rb(0,"mtx-grid",0),2&s&&l.nc("data",n.list)("columns",n.columns)},directives:[g.a],styles:["[_nghost-%COMP%]     .label{padding:5px 10px;border-radius:999px;background-color:#ffb74d}"]}),s})(),files:[{file:"app.component.html",content:a("J5dd"),filecontent:a("7BMS")},{file:"app.component.ts",content:a("za2W"),filecontent:a("gqKb")},{file:"app.component.scss",content:a("r6oY"),filecontent:a("5dWc")}]},U={title:"No result",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name"},{header:"Weight",field:"weight"},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"}],this.list=[]}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:1,vars:2,consts:[[3,"data","columns"]],template:function(s,n){1&s&&l.Rb(0,"mtx-grid",0),2&s&&l.nc("data",n.list)("columns",n.columns)},directives:[g.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("Mtr3"),filecontent:a("oXCI")},{file:"app.component.ts",content:a("IFLB"),filecontent:a("SXGs")},{file:"app.component.scss",content:a("wPQT"),filecontent:a("AYo8")}]};var X=a("bFHC"),O=a("Y2X+");function H(s,n){if(1&s&&(l.Jc(0),l.Wb(1,"mat-icon",2),l.Jc(2,"info"),l.Vb()),2&s){const s=n.$implicit;l.Lc(" ",s.header," "),l.Cb(1),l.nc("matTooltip",s.description)}}const R={title:"Custom header template",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",description:"Info about the name"},{header:"Weight",field:"weight",description:"Info about the weight"},{header:"Gender",field:"gender",description:"Info about the gender"},{header:"Mobile",field:"mobile",description:"Info about the mobile"},{header:"City",field:"city",description:"Info about the city"}],this.list=m}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:3,vars:3,consts:[[3,"data","columns","headerTemplate"],["headerTpl",""],[3,"matTooltip"]],template:function(s,n){if(1&s&&(l.Rb(0,"mtx-grid",0),l.Hc(1,H,3,2,"ng-template",null,1,l.Ic)),2&s){const s=l.vc(2);l.nc("data",n.list)("columns",n.columns)("headerTemplate",s)}},directives:[g.a,X.a,O.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("GLZs"),filecontent:a("JV4J")},{file:"app.component.ts",content:a("GgQz"),filecontent:a("ysK1")},{file:"app.component.scss",content:a("t8N4"),filecontent:a("vns6")}]};function I(s,n){if(1&s&&(l.Wb(0,"div"),l.Jc(1),l.jc(2,"currency"),l.Vb()),2&s){const s=n.$implicit,a=l.ic();l.Cb(1),l.Kc(l.kc(2,1,a.getTotalCost(s)))}}const F=function(s){return{cost:s}},J={title:"Custom footer template",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:s=>Math.max(...s)},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=m}getTotalCost(s){return s.reduce((s,n)=>s+n,0)}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:3,vars:6,consts:[[3,"data","columns","showSummary","summaryTemplate"],["footerTpl",""]],template:function(s,n){if(1&s&&(l.Rb(0,"mtx-grid",0),l.Hc(1,I,3,3,"ng-template",null,1,l.Ic)),2&s){const s=l.vc(2);l.nc("data",n.list)("columns",n.columns)("showSummary",!0)("summaryTemplate",l.qc(4,F,s))}},directives:[g.a],pipes:[r.d],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("FoZ3"),filecontent:a("qQdu")},{file:"app.component.ts",content:a("cBui"),filecontent:a("LPdT")},{file:"app.component.scss",content:a("bxlB"),filecontent:a("DtCM")}]};function B(s,n){1&s&&l.Rb(0,"input",2)}const V={title:"Custom toolbar template",component:(()=>{class s{constructor(){this.columns=[{header:"Name",field:"name",summary:"Total"},{header:"Weight",field:"weight",summary:s=>Math.max(...s)},{header:"Gender",field:"gender"},{header:"Mobile",field:"mobile"},{header:"City",field:"city"},{header:"Cost",field:"cost",type:"currency"}],this.list=m}}return s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:3,vars:5,consts:[[3,"data","columns","showToolbar","showColumnMenuButton","toolbarTemplate"],["toolbarTpl",""],["placeholder","Search"]],template:function(s,n){if(1&s&&(l.Rb(0,"mtx-grid",0),l.Hc(1,B,1,0,"ng-template",null,1,l.Ic)),2&s){const s=l.vc(2);l.nc("data",n.list)("columns",n.columns)("showToolbar",!0)("showColumnMenuButton",!1)("toolbarTemplate",s)}},directives:[g.a],styles:[""]}),s})(),files:[{file:"app.component.html",content:a("pxEU"),filecontent:a("W9LF")},{file:"app.component.ts",content:a("/+Y5"),filecontent:a("48nt")},{file:"app.component.scss",content:a("+z7n"),filecontent:a("G7ct")}]};var z=a("vobO");const K=function(){return[5,10,20]},q={title:"Remote Data",component:(()=>{class s{constructor(s){this.http=s,this.columns=[{header:"Name",field:"name",formatter:s=>`<a href="${s.html_url}" target="_blank">${s.name}</a>`},{header:"Owner",field:"owner.login"},{header:"Owner Avatar",field:"owner.avatar_url",type:"image"},{header:"Description",field:"description",width:"300px"},{header:"Stars",field:"stargazers_count"},{header:"Forks",field:"forks_count"},{header:"Score",field:"score"},{header:"Issues",field:"open_issues"},{header:"Language",field:"language"},{header:"License",field:"license.name"},{header:"Home Page",field:"homepage",type:"link"},{header:"Is forked",field:"fork",type:"boolean"},{header:"Archived",field:"archived",type:"tag",tag:{true:{text:"Yes",color:"red-100"},false:{text:"No",color:"green-100"}}},{header:"Created Date",field:"created_at"},{header:"Updated Date",field:"updated_at"}],this.list=[],this.total=0,this.isLoading=!0,this.query={q:"user:nzbin",page:0,per_page:5}}get params(){const s=Object.assign({},this.query);return s.page+=1,s}ngOnInit(){this.getData()}getData(){this.isLoading=!0,this.http.get("https://api.github.com/search/repositories",{params:this.params}).subscribe(s=>{this.list=s.items,this.total=s.total_count,this.isLoading=!1},()=>{this.isLoading=!1},()=>{this.isLoading=!1})}getNextPage(s){this.query.page=s.pageIndex,this.query.per_page=s.pageSize,this.getData()}refresh(){this.getData()}}return s.\u0275fac=function(n){return new(n||s)(l.Qb(z.b))},s.\u0275cmp=l.Kb({type:s,selectors:[["data-grid-example"]],decls:3,vars:9,consts:[["mat-raised-button","","color","primary",3,"click"],[3,"data","columns","length","loading","pageOnFront","pageIndex","pageSize","pageSizeOptions","page"]],template:function(s,n){1&s&&(l.Wb(0,"button",0),l.ec("click",(function(){return n.refresh()})),l.Jc(1,"Refresh"),l.Vb(),l.Wb(2,"mtx-grid",1),l.ec("page",(function(s){return n.getNextPage(s)})),l.Vb()),2&s&&(l.Cb(2),l.nc("data",n.list)("columns",n.columns)("length",n.total)("loading",n.isLoading)("pageOnFront",!1)("pageIndex",n.query.page)("pageSize",n.query.per_page)("pageSizeOptions",l.pc(8,K)))},directives:[p.b,g.a],styles:[".mat-raised-button[_ngcontent-%COMP%]{margin-bottom:1rem}"]}),s})(),files:[{file:"app.component.html",content:a("ai1J"),filecontent:a("hkiY")},{file:"app.component.ts",content:a("/1dg"),filecontent:a("yHEx")},{file:"app.component.scss",content:a("JUl+"),filecontent:a("CSbO")}]};let $=(()=>{class s{}return s.\u0275mod=l.Ob({type:s}),s.\u0275inj=l.Nb({factory:function(n){return new(n||s)},imports:[[t.a,e.i.forChild([{path:"",component:d,data:{examples:[u,b,x,y,C,M,A,S,T,v,L,P,W,U,R,J,V,q]}}])]]}),s})()},rvl2:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox,\n.mat-radio-button {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},s9C1:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},sg0B:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>\n          [<span class="hljs-attr">expandable</span>]=<span class="hljs-string">"true"</span>\n          [<span class="hljs-attr">expansionTemplate</span>]=<span class="hljs-string">"expansionTpl"</span>\n          (<span class="hljs-attr">expansionChange</span>)=<span class="hljs-string">"log($event)"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> #<span class="hljs-attr">expansionTpl</span> <span class="hljs-attr">let-row</span>&gt;</span>\n  {{row.name}}\n<span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n'},t8N4:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},tD0s:function(s,n,a){"use strict";a.r(n),n.default="export const EXAMPLE_DATA: any[] = [\n  {\n    position: 1,\n    name: 'Boron',\n    tag: [\n      {\n        color: 'red',\n        value: [1, 2],\n      },\n    ],\n    weight: 10.811,\n    symbol: 'B',\n    gender: 'male',\n    mobile: '13198765432',\n    tele: '567891234',\n    city: 'Berlin',\n    address: 'Bernauer Str.111,13355',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Boron@gmail.com',\n    status: false,\n    cost: 4\n  },\n  {\n    position: 2,\n    name: 'Helium',\n    tag: [\n      {\n        color: 'blue',\n        value: [3, 4],\n      },\n    ],\n    weight: 8.0026,\n    symbol: 'He',\n    gender: 'female',\n    mobile: '13034676675',\n    tele: '80675432',\n    city: 'Shanghai',\n    address: '88 Songshan Road',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Helium@gmail.com',\n    status: true,\n    cost: 5\n  },\n  {\n    position: 3,\n    name: 'Nitrogen',\n    tag: [\n      {\n        color: 'yellow',\n        value: [5, 6],\n      },\n    ],\n    weight: 14.0067,\n    symbol: 'N',\n    gender: 'male',\n    mobile: '15811112222',\n    tele: '345678912',\n    city: 'Sydney',\n    address: 'Circular Quay, Sydney NSW 2000',\n    date: '1423456765768',\n    website: 'www.matero.com',\n    company: 'matero',\n    email: 'Nitrogen@gmail.com',\n    status: true,\n    cost: 2\n  },\n];\n"},tEOP:function(s,n,a){"use strict";a.r(n),n.default='<mtx-grid [data]="list"\n          [columns]="columns">\n</mtx-grid>\n\n<ng-template #statusTpl let-row let-index="index" let-col="colDef">\n  <mat-slide-toggle [checked]="row.status">Slide me!</mat-slide-toggle>\n</ng-template>\n'},tF9F:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn, MtxGridRowSelectionFormatter } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n\n  multiSelectable = true;\n  hideRowSelectionCheckbox = false;\n  rowSelectable = true;\n  rowSelected = EXAMPLE_DATA.slice(2, 3);\n  rowSelectionFormatter: MtxGridRowSelectionFormatter = {\n    disabled: data => data.name === 'Boron',\n    hideCheckbox: data => data.name === 'John',\n  };\n\n  log(e: any) {\n    console.log(e);\n  }\n}\n"},up5s:function(s,n,a){"use strict";a.r(n),n.default='<div>\n  <mat-checkbox [(ngModel)]="rowSelectable">Row selectable</mat-checkbox>\n  <mat-checkbox [(ngModel)]="hideRowSelectionCheckbox">Hide checkbox</mat-checkbox>\n  <mat-radio-group [(ngModel)]="multiSelectable">\n    <mat-radio-button [value]="false">Single</mat-radio-button>\n    <mat-radio-button [value]="true">Multiple</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<mtx-grid [data]="list"\n          [columns]="columns"\n          [multiSelectable]="multiSelectable"\n          [hideRowSelectionCheckbox]="hideRowSelectionCheckbox"\n          [rowSelectable]="rowSelectable"\n          [rowSelected]="rowSelected"\n          [rowSelectionFormatter]="rowSelectionFormatter"\n          (rowSelectionChange)="log($event)"\n          (cellSelectionChange)="log($event)">\n</mtx-grid>\n'},vSoS:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-grid</span> [<span class="hljs-attr">data</span>]=<span class="hljs-string">"list"</span>\n          [<span class="hljs-attr">columns</span>]=<span class="hljs-string">"columns"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-grid</span>&gt;</span>\n'},vbzM:function(s,n,a){"use strict";a.r(n),n.default=".mat-checkbox {\n  display: inline-block;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n}\n"},vns6:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},wPQT:function(s,n){s.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},wvfp:function(s,n,a){"use strict";a.r(n),n.default="/** No CSS for this example */\n"},xX41:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name' },\n    { header: 'Weight', field: 'weight' },\n    { header: 'Gender', field: 'gender' },\n    { header: 'Mobile', field: 'mobile' },\n    { header: 'City', field: 'city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},yHEx:function(s,n,a){"use strict";a.r(n),n.default="import { Component, OnInit } from '@angular/core';\nimport { MtxGridColumn } from '@ng-matero/extensions';\nimport { PageEvent } from '@angular/material/paginator';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  columns: MtxGridColumn[] = [\n    {\n      header: 'Name',\n      field: 'name',\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\n    },\n    { header: 'Owner', field: 'owner.login' },\n    { header: 'Owner Avatar', field: 'owner.avatar_url', type: 'image' },\n    { header: 'Description', field: 'description', width: '300px' },\n    { header: 'Stars', field: 'stargazers_count' },\n    { header: 'Forks', field: 'forks_count' },\n    { header: 'Score', field: 'score' },\n    { header: 'Issues', field: 'open_issues' },\n    { header: 'Language', field: 'language' },\n    { header: 'License', field: 'license.name' },\n    { header: 'Home Page', field: 'homepage', type: 'link' },\n    { header: 'Is forked', field: 'fork', type: 'boolean' },\n    {\n      header: 'Archived',\n      field: 'archived',\n      type: 'tag',\n      tag: {\n        true: { text: 'Yes', color: 'red-100' },\n        false: { text: 'No', color: 'green-100' },\n      },\n    },\n    { header: 'Created Date', field: 'created_at' },\n    { header: 'Updated Date', field: 'updated_at' },\n  ];\n  list = [];\n  total = 0;\n  isLoading = true;\n\n  query = {\n    q: 'user:nzbin',\n    page: 0,\n    per_page: 5,\n  };\n\n  get params() {\n    const p = Object.assign({}, this.query);\n    p.page += 1;\n    return p;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  getData() {\n    this.isLoading = true;\n    this.http\n      .get('https://api.github.com/search/repositories', { params: this.params as any })\n      .subscribe(\n        (res: any) => {\n          this.list = res.items;\n          this.total = res.total_count;\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n  }\n\n  getNextPage(e: PageEvent) {\n    this.query.page = e.pageIndex;\n    this.query.per_page = e.pageSize;\n    this.getData();\n  }\n\n  refresh() {\n    this.getData();\n  }\n}\n"},ysK1:function(s,n,a){"use strict";a.r(n),n.default="import { Component } from '@angular/core';\nimport { EXAMPLE_DATA } from '../../data';\nimport { MtxGridColumn } from '@ng-matero/extensions';\n\n@Component({\n  selector: 'data-grid-example',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns: MtxGridColumn[] = [\n    { header: 'Name', field: 'name', description: 'Info about the name' },\n    { header: 'Weight', field: 'weight', description: 'Info about the weight' },\n    { header: 'Gender', field: 'gender', description: 'Info about the gender' },\n    { header: 'Mobile', field: 'mobile', description: 'Info about the mobile' },\n    { header: 'City', field: 'city', description: 'Info about the city' },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n"},za2W:function(s,n){s.exports='<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { EXAMPLE_DATA } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../../data\'</span>;\n<span class="hljs-keyword">import</span> { MtxGridColumn } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@ng-matero/extensions\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'data-grid-example\'</span>,\n  templateUrl: <span class="hljs-string">\'./app.component.html\'</span>,\n  styleUrls: [<span class="hljs-string">\'./app.component.scss\'</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> AppComponent {\n  columns: MtxGridColumn[] = [\n    {\n      header: <span class="hljs-string">\'Name\'</span>,\n      field: <span class="hljs-string">\'name\'</span>,\n      formatter: <span class="hljs-function">(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`&lt;span class="label"&gt;<span class="hljs-subst">${data.name}</span>&lt;/span&gt;`</span>,\n    },\n    { header: <span class="hljs-string">\'Weight\'</span>, field: <span class="hljs-string">\'weight\'</span> },\n    { header: <span class="hljs-string">\'Gender\'</span>, field: <span class="hljs-string">\'gender\'</span> },\n    { header: <span class="hljs-string">\'Mobile\'</span>, field: <span class="hljs-string">\'mobile\'</span> },\n    { header: <span class="hljs-string">\'City\'</span>, field: <span class="hljs-string">\'city\'</span> },\n  ];\n\n  list = EXAMPLE_DATA;\n}\n'}}]);