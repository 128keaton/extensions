{"version":3,"file":"mtxAlert.umd.js","sources":["../../../projects/extensions/alert/alert.component.ts","../../../projects/extensions/alert/alert.module.ts","../../../projects/extensions/alert/mtxAlert.ts"],"sourcesContent":["import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  HostBinding,\n} from '@angular/core';\n\nexport type MtxAlertType = 'default' | 'info' | 'success' | 'warning' | 'danger';\n\n@Component({\n  selector: 'mtx-alert',\n  exportAs: 'mtxAlert',\n  host: {\n    class: 'mtx-alert',\n  },\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MtxAlertComponent {\n  @HostBinding('class') get hostClassList() {\n    return `mtx-alert-${this.type}`;\n  }\n\n  /** The alert type */\n  @Input() type: MtxAlertType = 'default';\n\n  /** Whether alert visible */\n  @Input() isOpen = true;\n\n  /** Whether displays an inline \"Close\" button */\n  @Input() dismissible!: boolean;\n\n  /** The alert text color */\n  @Input() color!: string;\n\n  /** Material elevation */\n  @Input() elevation = 0;\n\n  /** This event fires when alert closed, $event is an instance of Alert component */\n  @Output() closed = new EventEmitter<MtxAlertComponent>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  _onClosed(): void {\n    this.isOpen = false;\n    this._changeDetectorRef.markForCheck();\n    this.closed.emit(this);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MtxAlertComponent } from './alert.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MtxAlertComponent],\n  declarations: [MtxAlertComponent],\n})\nexport class MtxAlertModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","HostBinding","Input","Output","NgModule","CommonModule"],"mappings":";;;;;;;QA+CE,2BAAoB,kBAAqC;YAArC,uBAAkB,GAAlB,kBAAkB,CAAmB;;YAjBhD,SAAI,GAAiB,SAAS,CAAC;;YAG/B,WAAM,GAAG,IAAI,CAAC;;YASd,cAAS,GAAG,CAAC,CAAC;;YAGb,WAAM,GAAG,IAAIA,iBAAY,EAAqB,CAAC;SAEI;QAtB7D,sBAA0B,4CAAa;iBAAvC;gBACE,OAAO,eAAa,IAAI,CAAC,IAAM,CAAC;aACjC;;;WAAA;QAsBD,qCAAS,GAAT;YACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB;;;;gBAxCFC,cAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,UAAU;oBACpB,IAAI,EAAE;wBACJ,KAAK,EAAE,WAAW;qBACnB;oBACD,gjBAAqC;oBAErC,aAAa,EAAEC,sBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAEC,4BAAuB,CAAC,MAAM;;iBAChD;;;;gBAhBCC,sBAAiB;;;gCAkBhBC,gBAAW,SAAC,OAAO;uBAKnBC,UAAK;yBAGLA,UAAK;8BAGLA,UAAK;wBAGLA,UAAK;4BAGLA,UAAK;yBAGLC,WAAM;;;;QCnCT;;;;;gBALCC,aAAQ,SAAC;oBACR,OAAO,EAAE,CAACC,mBAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,iBAAiB,CAAC;oBAC5B,YAAY,EAAE,CAAC,iBAAiB,CAAC;iBAClC;;;ICTD;;;;;;;;;;;;;"}